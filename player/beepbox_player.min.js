var beepbox=function(t){"use strict";
/*!
    Copyright (C) 2021 John Nesky

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */const e=["chip wave","FM","basic noise","spectrum","drumset","harmonics","pulse width","picked string","custom chip","mod","advanced FM"];class n{}function i(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];const n=e/t.length;for(let e=0;e<t.length;e++)t[e]-=n;return r(t),t.push(0),new Float64Array(t)}function a(t){let e=0;i(t);for(let n=0;n<t.length-1;n++)e+=Math.abs(t[n]);const n=e/(t.length-1);for(let e=0;e<t.length-1;e++)t[e]=t[e]/n;return new Float64Array(t)}function r(t){let e=0,n=new Float64Array(t.length);for(let i=0;i<t.length;i++)n[i]=e,e+=t[i];return n}function o(t,e,i){let a=n.chipNoises[t].samples;if(null==a){if(a=new Float32Array(n.chipNoiseLength+1),n.chipNoises[t].samples=a,0==t){let t=1;for(let e=0;e<n.chipNoiseLength;e++){a[e]=2*(1&t)-1;let n=t>>1;1==(t+n&1)&&(n+=16384),t=n}}else if(1==t)for(let t=0;t<n.chipNoiseLength;t++)a[t]=2*Math.random()-1;else if(2==t){let t=1;for(let e=0;e<n.chipNoiseLength;e++){a[e]=2*(1&t)-1;let n=t>>1;1==(t+n&1)&&(n+=32768),t=n}}else if(3==t){let t=1;for(let e=0;e<n.chipNoiseLength;e++){a[e]=2*(1&t)-1;let n=t>>1;1==(t+n&1)&&(n+=40),t=n}}else if(4==t)s(a,n.chipNoiseLength,10,11,1,1,0),s(a,n.chipNoiseLength,11,14,.6578,.6578,0),e(a,n.chipNoiseLength),i(a,1/Math.sqrt(n.chipNoiseLength));else if(5==t)for(var r=1,o=0;o<n.chipNoiseLength;o++){a[o]=2*(1&r)-1,1==(r+(l=r>>1)&1)&&(l+=40),r=l}else if(6==t)s(a,n.chipNoiseLength,1,10,1,1,0),s(a,n.chipNoiseLength,20,14,-2,-2,0),e(a,n.chipNoiseLength),i(a,1/Math.sqrt(n.chipNoiseLength));else if(7==t)for(r=1,o=0;o<n.chipNoiseLength;o++){a[o]=4*(1&r)*(14*Math.random()+1),1==(r+(l=r>>1)&1)&&(l+=60),r=l}else if(8==t)for(r=1,o=0;o<32768;o++){var l;a[o]=(1&r)/2+.5,1==(r+(l=r>>1)&1)&&(l-=40),r=l}else{if(9!=t)throw new Error("Unrecognized drum index: "+t);{let t=1;for(let e=0;e<n.chipNoiseLength;e++){a[e]=2*(1&t)-1.1;let n=t>>1;1==(t+n&1)&&(n+=131080),t=n}}}a[n.chipNoiseLength]=a[0]}return a}function s(t,e,n,i,a,r,s){const l=0|Math.pow(2,n),c=Math.min(e>>1,0|Math.pow(2,i)),h=o(0,null,null);let d=0;for(let o=l;o<c;o++){let l=a+(r-a)*(Math.log2(o)-n)/(i-n),c=Math.pow(2,7*(l-1)+1)*l;c*=Math.pow(o/2048,s),d+=c,c*=h[o];const p=.61803398875*o*o*Math.PI*2;t[o]=Math.cos(p)*c,t[e-o]=Math.sin(p)*c}return d}function l(t=0){const e=new Float64Array(n.sineWaveLength+1),i=n.sineWaveLength/4;for(let a=0;a<n.sineWaveLength+1;a++)e[a]=2*+(Math.abs(a-i)<t*n.sineWaveLength/2||Math.abs(a-n.sineWaveLength-i)<t*n.sineWaveLength/2)-1;return e}function c(t=!1){const e=new Float64Array(n.sineWaveLength+1);for(let i=0;i<n.sineWaveLength+1;i++)e[i]=2*(i+n.sineWaveLength/4)/n.sineWaveLength%2-1,e[i]=t?-e[i]:e[i];return e}function h(t,e,i){let a=n.arpeggioPatterns[t-1];return null!=a?(2==t&&0==e&&(a=[0,0,1,1]),a[i%a.length]):i%t}function d(t){const e={};for(let n=0;n<t.length;n++){const i=t[n];i.index=n,e[i.name]=i}const n=t;return n.dictionary=e,n}function p(t){return 0!=(1024&t)}function m(t){return 0!=(2048&t)}function u(t){return 0!=(128&t)}function f(t){return 0!=(256&t)}function y(t){return 0!=(512&t)}function g(t){return 0!=(32&t)}function b(t){return 0!=(8&t)}function v(t){return 0!=(16&t)}function k(t){return 0!=(4&t)}function w(t){return 0!=(2&t)}function S(t){return 0!=(64&t)}function M(t){return 0!=(1&t)}n.thresholdVal=-10,n.kneeVal=40,n.ratioVal=12,n.attackVal=0,n.releaseVal=.25,n.scales=d([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]),n.keys=d([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),n.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],n.tempoMin=30,n.tempoMax=320,n.echoDelayRange=24,n.echoDelayStepTicks=4,n.echoSustainRange=8,n.echoShelfHz=4e3,n.echoShelfGain=Math.pow(2,-.5),n.reverbShelfHz=8e3,n.reverbShelfGain=Math.pow(2,-1.5),n.reverbRange=32,n.reverbDelayBufferSize=16384,n.reverbDelayBufferMask=n.reverbDelayBufferSize-1,n.beatsPerBarMin=2,n.beatsPerBarMax=16,n.barCountMin=1,n.barCountMax=256,n.instrumentCountMin=1,n.layeredInstrumentCountMax=4,n.patternInstrumentCountMax=10,n.partsPerBeat=24,n.ticksPerPart=2,n.ticksPerArpeggio=3,n.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],n.rhythms=d([{name:"÷3 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]),n.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","custom chip","mod","FM6op"],n.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1],n.chipBaseExpression=.03375,n.fmBaseExpression=.03,n.noiseBaseExpression=.19,n.spectrumBaseExpression=.3,n.drumsetBaseExpression=.45,n.harmonicsBaseExpression=.025,n.pwmBaseExpression=.04725,n.pickedStringBaseExpression=.025,n.distortionBaseVolume=.011,n.bitcrusherBaseVolume=.01,n.rawChipWaves=d([{name:"rounded",expression:.94,samples:i([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:i([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",expression:.5,samples:i([1,-1])},{name:"1/4 pulse",expression:.5,samples:i([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:i([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:i([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:i([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:i([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:i([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:a([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:a([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:a([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:a([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:a([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:a([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:a([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:a([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:a([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:a([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:a([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:i},{name:"trapezoid",expression:1,samples:i([1/15,.4,10/15,14/15,1,1,1,1,1,1,1,1,14/15,10/15,.4,1/15,-1/15,-.4,-10/15,-14/15,-1,-1,-1,-1,-1,-1,-1,-1,-14/15,-10/15,-.4,-1/15])}]),n.chipWaves=function(t){const e=new Array(t.length),n={};for(let i=0;i<e.length;i++){e[i]=Object.assign([],t[i]);const a=e[i];a.index=i,n[a.name]=a}for(let t in n)n[t].samples=r(n[t].samples);const i=e;return i.dictionary=n,i}(n.rawChipWaves),n.chipNoises=d([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null}]),n.filterFreqStep=1/4,n.filterFreqRange=34,n.filterFreqReferenceSetting=28,n.filterFreqReferenceHz=8e3,n.filterFreqMaxHz=n.filterFreqReferenceHz*Math.pow(2,n.filterFreqStep*(n.filterFreqRange-1-n.filterFreqReferenceSetting)),n.filterFreqMinHz=8,n.filterGainRange=15,n.filterGainCenter=7,n.filterGainStep=.5,n.filterMaxPoints=8,n.filterTypeNames=["low-pass","high-pass","peak"],n.filterMorphCount=10,n.filterSimpleCutRange=11,n.filterSimplePeakRange=8,n.fadeInRange=10,n.fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96],n.fadeOutNeutral=4,n.drumsetFadeOutTicks=48,n.transitions=d([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]),n.vibratos=d([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]),n.vibratoTypes=d([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),n.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8],n.unisons=d([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7}]),n.effectNames=["reverb","chorus","panning","distortion","bitcrusher","note filter","echo","pitch shift","detune","vibrato","transition type","chord type"],n.effectOrder=[2,10,11,7,8,9,5,3,4,1,6,0],n.noteSizeMax=6,n.volumeRange=50,n.volumeLogScale=.1428,n.panCenter=50,n.panMax=2*n.panCenter,n.panDelaySecondsMax=.001,n.chorusRange=8,n.chorusPeriodSeconds=2,n.chorusDelayRange=.0034,n.chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]],n.chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]],n.chorusMaxDelay=n.chorusDelayRange*(1+n.chorusDelayOffsets[0].concat(n.chorusDelayOffsets[1]).reduce(((t,e)=>Math.max(t,e)))),n.chords=d([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0}]),n.maxChordSize=9,n.operatorCount=4,n.algorithms=d([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1←(2 3) 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1←(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]),n.algorithms6Op=d([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←2←3←4←5←6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1←3 2←4←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1←3←4 2←5←6",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1←4 2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1←3 2←(4 5←6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1←(3 4) 2←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1←3 2←(4 5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1←3 2←(4 5)←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1←3 2←4←(5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1←(2 3 4 5 6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←(2 3←5 4←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1←(2 3 4←5←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1←4←5 (2 3)←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1←(3 4)←5 2←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1 2)←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1 2)←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1 2 3)←(4 5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1←5 (2 3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1 2←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1 2 (3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1 2 3 (4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1 2←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1←4 2←(5 6) 3",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1 2 3←5 4←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1 (2 3)←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1 2 3←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1 2 3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1 2 3 4 5←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1 2 3 4 5 6",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1←(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←4(2←5(3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1←4(2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]),n.operatorCarrierInterval=[0,.04,-.073,.091,.061,.024],n.operatorAmplitudeMax=15,n.operatorFrequencies=d([{name:"0.12×",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25×",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5×",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75×",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5×",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4×",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"10×",mult:10,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"12×",mult:12,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"14×",mult:14,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"18×",mult:18,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1}]),n.envelopes=d([{name:"none",type:1,speed:0},{name:"note size",type:0,speed:0},{name:"punch",type:2,speed:0},{name:"flare -1",type:3,speed:128},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang -1",type:4,speed:128},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell -1",type:5,speed:128},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo0",type:6,speed:8},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay -1",type:8,speed:40},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4},{name:"wibble-1",type:9,speed:96},{name:"wibble 1",type:9,speed:24},{name:"wibble 2",type:9,speed:12},{name:"wibble 3",type:9,speed:4},{name:"linear-2",type:11,speed:256},{name:"linear-1",type:11,speed:128},{name:"linear 1",type:11,speed:32},{name:"linear 2",type:11,speed:8},{name:"linear 3",type:11,speed:2},{name:"rise -2",type:12,speed:256},{name:"rise -1",type:12,speed:128},{name:"rise 1",type:12,speed:32},{name:"rise 2",type:12,speed:8},{name:"rise 3",type:12,speed:2}]),n.feedbacks=d([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]},{name:"1↔2 3↔4",indices:[[2],[1],[4],[3]]},{name:"1↔4 2↔3",indices:[[4],[3],[2],[1]]},{name:"2→1→4→3→2",indices:[[2],[3],[4],[1]]},{name:"1→2→3→4→1",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)→4",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]),n.feedbacks6Op=d([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1⟲",indices:[[1],[],[],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[],[],[]]},{name:"3⟲",indices:[[],[],[3],[],[],[]]},{name:"4⟲",indices:[[],[],[],[4],[],[]]},{name:"4⟲",indices:[[],[],[],[],[5],[]]},{name:"4⟲",indices:[[],[],[],[],[],[6]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[],[],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲",indices:[[1],[2],[3],[4],[5],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1→2",indices:[[],[1],[],[],[],[]]},{name:"1→3",indices:[[],[],[1],[],[],[]]},{name:"1→4",indices:[[],[],[],[1],[],[]]},{name:"1→5",indices:[[],[],[],[],[1],[]]},{name:"1→6",indices:[[],[],[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[],[],[]]},{name:"2→4",indices:[[],[],[],[2],[],[]]},{name:"3→4",indices:[[],[],[],[3],[],[]]},{name:"4→5",indices:[[],[],[],[],[4],[]]},{name:"1→4 2→5 3→6",indices:[[],[],[],[1],[2],[3]]},{name:"1→5 2→6 3→4",indices:[[],[],[],[3],[1],[2]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"2→1→6→5→4→3→2",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1→2→3→4→5→6→1",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1↔2 3↔4 5↔6",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1↔4 2↔5 3↔6",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)→6",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]),n.chipNoiseLength=32768,n.spectrumNoiseLength=32768,n.spectrumBasePitch=24,n.spectrumControlPoints=30,n.spectrumControlPointsPerOctave=7,n.spectrumControlPointBits=3,n.spectrumMax=(1<<n.spectrumControlPointBits)-1,n.harmonicsControlPoints=28,n.harmonicsRendered=64,n.harmonicsRenderedForPickedString=256,n.harmonicsControlPointBits=3,n.harmonicsMax=(1<<n.harmonicsControlPointBits)-1,n.harmonicsWavelength=2048,n.pulseWidthRange=50,n.pulseWidthStepPower=.5,n.pitchChannelCountMin=1,n.pitchChannelCountMax=40,n.noiseChannelCountMin=0,n.noiseChannelCountMax=16,n.modChannelCountMin=0,n.modChannelCountMax=12,n.noiseInterval=6,n.pitchesPerOctave=12,n.drumCount=12,n.pitchOctaves=8,n.modCount=6,n.maxPitch=n.pitchOctaves*n.pitchesPerOctave,n.maximumTonesPerChannel=2*n.maxChordSize,n.justIntonationSemitones=[.5,8/15,9/16,.6,5/8,2/3,32/45,3/4,.8,5/6,8/9,15/16,1,16/15,9/8,1.2,5/4,4/3,45/32,1.5,1.6,5/3,16/9,15/8,2].map((t=>Math.log2(t)*n.pitchesPerOctave)),n.pitchShiftRange=n.justIntonationSemitones.length,n.pitchShiftCenter=n.pitchShiftRange>>1,n.detuneCenter=200,n.detuneMax=400,n.detuneMin=0,n.songDetuneMin=0,n.songDetuneMax=500,n.sineWaveLength=256,n.sineWaveMask=n.sineWaveLength-1,n.sineWave=function(){const t=new Float64Array(n.sineWaveLength+1);for(let e=0;e<n.sineWaveLength+1;e++)t[e]=Math.sin(e*Math.PI*2/n.sineWaveLength);return t}(),n.pickedStringDispersionCenterFreq=6e3,n.pickedStringDispersionFreqScale=.3,n.pickedStringDispersionFreqMult=4,n.pickedStringShelfHz=4e3,n.distortionRange=8,n.stringSustainRange=15,n.stringDecayRate=.12,n.bitcrusherFreqRange=14,n.bitcrusherOctaveStep=.5,n.bitcrusherQuantizationRange=8,n.maxEnvelopeCount=12,n.defaultAutomationRange=13,n.instrumentAutomationTargets=d([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"note volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:2,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6]},{name:"stringSustain",computeIndex:3,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:4,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[0,5,7]},{name:"operatorFrequency",computeIndex:5,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:n.operatorCount,effect:null,compatibleInstruments:[1]},{name:"operatorAmplitude",computeIndex:9,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:n.operatorCount,effect:null,compatibleInstruments:[1]},{name:"feedbackAmplitude",computeIndex:13,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[1]},{name:"pitchShift",computeIndex:14,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:7,compatibleInstruments:null},{name:"detune",computeIndex:15,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:8,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:16,displayName:"vibrato range",interleave:!1,isFilter:!1,maxCount:1,effect:9,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:1,displayName:"n. filter freqs",interleave:!1,isFilter:!0,maxCount:1,effect:5,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:17,displayName:"n. filter # freq",interleave:!1,isFilter:!0,maxCount:n.filterMaxPoints,effect:5,compatibleInstruments:null}]),n.operatorWaves=d([{name:"sine",samples:n.sineWave},{name:"triangle",samples:function(){const t=new Float64Array(n.sineWaveLength+1);for(let e=0;e<n.sineWaveLength+1;e++)t[e]=Math.asin(Math.sin(e*Math.PI*2/n.sineWaveLength))/(Math.PI/2);return t}()},{name:"pulse width",samples:l()},{name:"sawtooth",samples:c()},{name:"ramp",samples:c(!0)},{name:"trapezoid",samples:function(t=2){const e=new Float64Array(n.sineWaveLength+1);for(let i=0;i<n.sineWaveLength+1;i++)e[i]=Math.max(-1,Math.min(1,Math.asin(Math.sin(i*Math.PI*2/n.sineWaveLength))*t));return e}(2)}]),n.pwmOperatorWaves=d([{name:"1%",samples:l(.01)},{name:"5%",samples:l(.05)},{name:"12.5%",samples:l(.125)},{name:"25%",samples:l(.25)},{name:"33%",samples:l(1/3)},{name:"50%",samples:l(.5)},{name:"66%",samples:l(2/3)},{name:"75%",samples:l(.75)},{name:"87.5%",samples:l(.875)},{name:"95%",samples:l(.95)},{name:"99%",samples:l(.99)}]),n.barEditorHeight=10,n.modulators=d([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:n.tempoMax-n.tempoMin,newNoteVol:Math.ceil((n.tempoMax-n.tempoMin)/2),forSong:!0,convertRealFactor:n.tempoMin,associatedEffect:12,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:2*n.reverbRange,newNoteVol:n.reverbRange,forSong:!0,convertRealFactor:-n.reverbRange,associatedEffect:12,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"note volume",pianoName:"Note Vol.",maxRawVol:n.volumeRange,newNoteVol:Math.ceil(n.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-n.volumeRange/2),associatedEffect:12,promptName:"Note Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"pan",pianoName:"Pan",maxRawVol:n.panMax,newNoteVol:Math.ceil(n.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:n.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:n.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedback",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:n.pulseWidthRange,newNoteVol:n.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:n.detuneMax-n.detuneMin,newNoteVol:n.detuneCenter,forSong:!1,convertRealFactor:-n.detuneCenter,associatedEffect:8,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch ÷25]"]},{name:"song detune",pianoName:"Detune",maxRawVol:n.songDetuneMax-n.songDetuneMin,newNoteVol:Math.ceil((n.songDetuneMax-n.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:12,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats ÷24]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"eq filter",pianoName:"EQFlt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"note filter",pianoName:"N.Flt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:n.bitcrusherQuantizationRange-1,newNoteVol:Math.round(n.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:n.bitcrusherFreqRange-1,newNoteVol:Math.round(n.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:n.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:n.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats ÷12]"]},{name:"chorus",pianoName:"Chorus",maxRawVol:n.chorusRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt cut",pianoName:"EQFlt Cut",maxRawVol:n.filterSimpleCutRange-1,newNoteVol:n.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt peak",pianoName:"EQFlt Peak",maxRawVol:n.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt cut",pianoName:"N.Flt Cut",maxRawVol:n.filterSimpleCutRange-1,newNoteVol:n.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt peak",pianoName:"N.Flt Peak",maxRawVol:n.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:n.pitchShiftRange-1,newNoteVol:n.pitchShiftCenter,forSong:!1,convertRealFactor:-n.pitchShiftCenter,associatedEffect:7,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:n.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"mix volume",pianoName:"Mix Vol.",maxRawVol:n.volumeRange,newNoteVol:Math.ceil(n.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-n.volumeRange/2),associatedEffect:12,promptName:"Mix Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedback",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]}]);var F=t&&t.t||function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},x=t&&t.i||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var i,a,r=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(i=r.next()).done;)o.push(i.value)}catch(t){a={error:t}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(a)throw a.error}}return o},C=t&&t.o||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(x(arguments[e]));return t};function I(t,e){var n,i,a,r,o,s;try{for(var l=F(e),c=l.next();!c.done;c=l.next()){var h=c.value;if(h instanceof Node)t.appendChild(h);else if("string"==typeof h)t.appendChild(document.createTextNode(h));else if("function"==typeof h)I(t,[h()]);else if(Array.isArray(h))I(t,h);else if(h&&"undefined"!=typeof Symbol&&"function"==typeof h[Symbol.iterator])I(t,C(h));else if(h&&h.constructor===Object&&t instanceof Element)try{for(var d=(a=void 0,F(Object.keys(h))),p=d.next();!p.done;p=d.next()){var m=p.value,u=h[m];if("class"===m)"string"==typeof u?t.setAttribute("class",u):Array.isArray(h)||u&&"undefined"!=typeof Symbol&&"function"==typeof u[Symbol.iterator]?t.setAttribute("class",C(u).join(" ")):console.warn("Invalid "+m+' value "'+u+'" on '+t.tagName+" element.");else if("style"===m)if(u&&u.constructor===Object)try{for(var f=(o=void 0,F(Object.keys(u))),y=f.next();!y.done;y=f.next()){var g=y.value;g in t.style?t.style[g]=u[g]:t.style.setProperty(g,u[g])}}catch(t){o={error:t}}finally{try{y&&!y.done&&(s=f.return)&&s.call(f)}finally{if(o)throw o.error}}else t.setAttribute(m,u);else"function"==typeof u?t[m]=u:"boolean"==typeof u?u?t.setAttribute(m,""):t.removeAttribute(m):t.setAttribute(m,u)}}catch(t){a={error:t}}finally{try{p&&!p.done&&(r=d.return)&&r.call(d)}finally{if(a)throw a.error}}else t.appendChild(document.createTextNode(h))}}catch(t){n={error:t}}finally{try{c&&!c.done&&(i=l.return)&&i.call(l)}finally{if(n)throw n.error}}return t}var P="http://www.w3.org/2000/svg";var D,A,T,E,q=t&&t.t||function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},O=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return document.createRange().createContextualFragment(t.join())},R=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=document.createDocumentFragment(),i=(new DOMParser).parseFromString('<svg xmlns="http://www.w3.org/2000/svg">'+t.join()+"</svg>","image/svg+xml").documentElement;null!==i.firstChild;)document.importNode(i.firstChild,!0),n.appendChild(i.firstChild);return n},L=function(t){O[t]=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return I(document.createElement(t),e)}};try{for(var N=q("a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" ")),z=N.next();!z.done;z=N.next()){L(z.value)}}catch(t){D={error:t}}finally{try{z&&!z.done&&(A=N.return)&&A.call(N)}finally{if(D)throw D.error}}var B=function(t){if(R[t]=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return I(document.createElementNS(P,t),e)},/-/.test(t)){var e=t.replace(/-/g,"_");R[e]=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return I(document.createElementNS(P,t),e)}}};try{for(var H=q("a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" ")),G=H.next();!G.done;G=H.next()){B(G.value)}}catch(t){T={error:t}}finally{try{G&&!G.done&&(E=H.return)&&E.call(H)}finally{if(T)throw T.error}}class V{static resetColors(){this.colorLookup.clear()}static getArbitaryChannelColor(t,e){if("false"==getComputedStyle(this.l).getPropertyValue("--use-color-formula").trim()){let n;switch(t){case"noise":n=V.noiseChannels[e%V.noiseChannels.length];break;case"mod":n=V.modChannels[e%V.modChannels.length];break;case"pitch":default:n=V.pitchChannels[e%V.pitchChannels.length]}var i=/\(([^)]+)\)/;return{secondaryChannel:V.getComputed(i.exec(n.secondaryChannel)[1]),primaryChannel:V.getComputed(i.exec(n.primaryChannel)[1]),secondaryNote:V.getComputed(i.exec(n.secondaryNote)[1]),primaryNote:V.getComputed(i.exec(n.primaryNote)[1])}}switch(t){case"noise":{const t=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-hue"),i=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-hue-scale"),a=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-sat"),r=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-sat-scale"),o=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-lum"),s=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-lum-scale"),l=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-hue"),c=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-hue-scale"),h=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-sat"),d=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-sat-scale"),p=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-lum"),m=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-lum-scale"),u=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-hue"),f=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-hue-scale"),y=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-sat"),g=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-sat-scale"),b=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-lum"),v=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-lum-scale"),k=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-hue"),w=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-hue-scale"),S=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-sat"),M=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-sat-scale"),F=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-lum"),x=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-lum-scale");let C={secondaryChannel:"hsl("+(+t+e*+i/n.noiseChannelCountMax*256)%256+","+(+a+e*+r)+"%,"+(+o+e*+s)+"%)",primaryChannel:"hsl("+(+l+e*+c/n.noiseChannelCountMax*256)%256+","+(+h+e*+d)+"%,"+(+p+e*+m)+"%)",secondaryNote:"hsl("+(+u+e*+f/n.noiseChannelCountMax*256)%256+","+(+y+e*+g)+"%,"+(+b+e*+v)+"%)",primaryNote:"hsl("+(+k+e*+w/n.noiseChannelCountMax*256)%256+","+(+S+e*+M)+"%,"+(+F+e*+x)+"%)"};return V.colorLookup.set(e,C),C}case"mod":{const t=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-hue"),i=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-hue-scale"),a=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-sat"),r=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-sat-scale"),o=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-lum"),s=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-lum-scale"),l=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-hue"),c=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-hue-scale"),h=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-sat"),d=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-sat-scale"),p=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-lum"),m=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-lum-scale"),u=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-hue"),f=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-hue-scale"),y=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-sat"),g=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-sat-scale"),b=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-lum"),v=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-lum-scale"),k=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-hue"),w=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-hue-scale"),S=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-sat"),M=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-sat-scale"),F=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-lum"),x=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-lum-scale");let C={secondaryChannel:"hsl("+(+t+e*+i/n.modChannelCountMax*256)%256+","+(+a+e*+r)+"%,"+(+o+e*+s)+"%)",primaryChannel:"hsl("+(+l+e*+c/n.modChannelCountMax*256)%256+","+(+h+e*+d)+"%,"+(+p+e*+m)+"%)",secondaryNote:"hsl("+(+u+e*+f/n.modChannelCountMax*256)%256+","+(+y+e*+g)+"%,"+(+b+e*+v)+"%)",primaryNote:"hsl("+(+k+e*+w/n.modChannelCountMax*256)%256+","+(+S+e*+M)+"%,"+(+F+e*+x)+"%)"};return V.colorLookup.set(e,C),C}case"pitch":default:{const t=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-hue"),i=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-hue-scale"),a=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-sat"),r=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-sat-scale"),o=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-lum"),s=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-lum-scale"),l=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-hue"),c=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-hue-scale"),h=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-sat"),d=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-sat-scale"),p=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-lum"),m=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-lum-scale"),u=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-hue"),f=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-hue-scale"),y=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-sat"),g=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-sat-scale"),b=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-lum"),v=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-lum-scale"),k=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-hue"),w=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-hue-scale"),S=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-sat"),M=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-sat-scale"),F=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-lum"),x=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-lum-scale");let C={secondaryChannel:"hsl("+(+t+e*+i/n.pitchChannelCountMax*256)%256+","+ +a*(1-+r*Math.floor(e/7))+"%,"+ +o*(1-+s*Math.floor(e/7))+"%)",primaryChannel:"hsl("+(+l+e*+c/n.pitchChannelCountMax*256)%256+","+ +h*(1-+d*Math.floor(e/7))+"%,"+ +p*(1-+m*Math.floor(e/7))+"%)",secondaryNote:"hsl("+(+u+e*+f/n.pitchChannelCountMax*256)%256+","+ +y*(1-+g*Math.floor(e/7))+"%,"+ +b*(1-+v*Math.floor(e/7))+"%)",primaryNote:"hsl("+(+k+e*+w/n.pitchChannelCountMax*256)%256+","+ +S*(1-+M*Math.floor(e/7))+"%,"+ +F*(1-+x*Math.floor(e/7))+"%)"};return V.colorLookup.set(e,C),C}}}static getComputedChannelColor(t,e){if("false"==getComputedStyle(this.l).getPropertyValue("--use-color-formula").trim()){let i=V.getChannelColor(t,e);var n=/\(([^)]+)\)/;return{secondaryChannel:V.getComputed(n.exec(i.secondaryChannel)[1]),primaryChannel:V.getComputed(n.exec(i.primaryChannel)[1]),secondaryNote:V.getComputed(n.exec(i.secondaryNote)[1]),primaryNote:V.getComputed(n.exec(i.primaryNote)[1])}}return V.getChannelColor(t,e)}static getChannelColor(t,e){if("false"==getComputedStyle(this.l).getPropertyValue("--use-color-formula").trim())return e<t.pitchChannelCount?V.pitchChannels[e%V.pitchChannels.length]:e<t.pitchChannelCount+t.noiseChannelCount?V.noiseChannels[(e-t.pitchChannelCount)%V.noiseChannels.length]:V.modChannels[(e-t.pitchChannelCount-t.noiseChannelCount)%V.modChannels.length];if(V.colorLookup.has(e))return V.colorLookup.get(e);if(e<t.pitchChannelCount){const t=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-hue"),i=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-hue-scale"),a=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-sat"),r=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-sat-scale"),o=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-lum"),s=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-channel-lum-scale"),l=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-hue"),c=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-hue-scale"),h=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-sat"),d=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-sat-scale"),p=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-lum"),m=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-channel-lum-scale"),u=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-hue"),f=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-hue-scale"),y=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-sat"),g=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-sat-scale"),b=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-lum"),v=+getComputedStyle(this.l).getPropertyValue("--pitch-secondary-note-lum-scale"),k=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-hue"),w=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-hue-scale"),S=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-sat"),M=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-sat-scale"),F=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-lum"),x=+getComputedStyle(this.l).getPropertyValue("--pitch-primary-note-lum-scale");let C={secondaryChannel:"hsl("+(+t+e*+i/n.pitchChannelCountMax*256)%256+","+ +a*(1-+r*Math.floor(e/7))+"%,"+ +o*(1-+s*Math.floor(e/7))+"%)",primaryChannel:"hsl("+(+l+e*+c/n.pitchChannelCountMax*256)%256+","+ +h*(1-+d*Math.floor(e/7))+"%,"+ +p*(1-+m*Math.floor(e/7))+"%)",secondaryNote:"hsl("+(+u+e*+f/n.pitchChannelCountMax*256)%256+","+ +y*(1-+g*Math.floor(e/7))+"%,"+ +b*(1-+v*Math.floor(e/7))+"%)",primaryNote:"hsl("+(+k+e*+w/n.pitchChannelCountMax*256)%256+","+ +S*(1-+M*Math.floor(e/7))+"%,"+ +F*(1-+x*Math.floor(e/7))+"%)"};return V.colorLookup.set(e,C),C}if(e<t.pitchChannelCount+t.noiseChannelCount){const i=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-hue"),a=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-hue-scale"),r=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-sat"),o=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-sat-scale"),s=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-lum"),l=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-channel-lum-scale"),c=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-hue"),h=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-hue-scale"),d=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-sat"),p=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-sat-scale"),m=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-lum"),u=+getComputedStyle(this.l).getPropertyValue("--noise-primary-channel-lum-scale"),f=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-hue"),y=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-hue-scale"),g=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-sat"),b=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-sat-scale"),v=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-lum"),k=+getComputedStyle(this.l).getPropertyValue("--noise-secondary-note-lum-scale"),w=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-hue"),S=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-hue-scale"),M=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-sat"),F=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-sat-scale"),x=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-lum"),C=+getComputedStyle(this.l).getPropertyValue("--noise-primary-note-lum-scale");let I={secondaryChannel:"hsl("+(+i+(e-t.pitchChannelCount)*+a/n.noiseChannelCountMax*256)%256+","+(+r+e*+o)+"%,"+(+s+e*+l)+"%)",primaryChannel:"hsl("+(+c+(e-t.pitchChannelCount)*+h/n.noiseChannelCountMax*256)%256+","+(+d+e*+p)+"%,"+(+m+e*+u)+"%)",secondaryNote:"hsl("+(+f+(e-t.pitchChannelCount)*+y/n.noiseChannelCountMax*256)%256+","+(+g+e*+b)+"%,"+(+v+e*+k)+"%)",primaryNote:"hsl("+(+w+(e-t.pitchChannelCount)*+S/n.noiseChannelCountMax*256)%256+","+(+M+e*+F)+"%,"+(+x+e*+C)+"%)"};return V.colorLookup.set(e,I),I}{const i=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-hue"),a=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-hue-scale"),r=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-sat"),o=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-sat-scale"),s=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-lum"),l=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-channel-lum-scale"),c=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-hue"),h=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-hue-scale"),d=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-sat"),p=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-sat-scale"),m=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-lum"),u=+getComputedStyle(this.l).getPropertyValue("--mod-primary-channel-lum-scale"),f=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-hue"),y=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-hue-scale"),g=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-sat"),b=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-sat-scale"),v=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-lum"),k=+getComputedStyle(this.l).getPropertyValue("--mod-secondary-note-lum-scale"),w=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-hue"),S=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-hue-scale"),M=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-sat"),F=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-sat-scale"),x=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-lum"),C=+getComputedStyle(this.l).getPropertyValue("--mod-primary-note-lum-scale");let I={secondaryChannel:"hsl("+(+i+(e-t.pitchChannelCount-t.noiseChannelCount)*+a/n.modChannelCountMax*256)%256+","+(+r+e*+o)+"%,"+(+s+e*+l)+"%)",primaryChannel:"hsl("+(+c+(e-t.pitchChannelCount-t.noiseChannelCount)*+h/n.modChannelCountMax*256)%256+","+(+d+e*+p)+"%,"+(+m+e*+u)+"%)",secondaryNote:"hsl("+(+f+(e-t.pitchChannelCount-t.noiseChannelCount)*+y/n.modChannelCountMax*256)%256+","+(+g+e*+b)+"%,"+(+v+e*+k)+"%)",primaryNote:"hsl("+(+w+(e-t.pitchChannelCount-t.noiseChannelCount)*+S/n.modChannelCountMax*256)%256+","+(+M+e*+F)+"%,"+(+x+e*+C)+"%)"};return V.colorLookup.set(e,I),I}}static setTheme(t){this.l.textContent=this.themes[t];const e=document.querySelector("meta[name='theme-color']");null!=e&&e.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background")),this.resetColors()}static getComputed(t){return getComputedStyle(this.l).getPropertyValue(t)}}V.colorLookup=new Map,V.themes={"dark classic":"\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t","dark competition":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t}\n\t\t","light classic":"\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t","jummbox classic":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t\t\t}\n\t\t\t",forest:"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\t\t\t\t}\n\t\t\t",canyon:"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t\t}\n\t\t\t",midnight:"\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #1a1818;\n\t\t\t--fifth-note: #555955;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n            --white-piano-key-text: #131200;\n            --black-piano-key-text: #ffffff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\t\t}\n\t","jummbox light":"\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #cab1d3;\n\t\t\t\t\t--editor-background: #f4f4f4;\n\t\t\t\t\t--hover-preview: #2d26a2;\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\n\t\t\t\t\t--primary-text: #b686c3;\n\t\t\t\t\t--secondary-text: #970f38;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\n\t\t\t\t\t--loop-accent: #09dc0e;\n\t\t\t\t\t--link-accent: #3ee669;\n\t\t\t\t\t--ui-widget-background: #0e0a42;\n\t\t\t\t\t--ui-widget-focus: #380c42;\n\t\t\t\t\t--pitch-background: #8daf96;\n\t\t\t\t\t--tonic: #a16fb1;\n\t\t\t\t\t--fifth-note: #d08c8c;\n\t\t\t\t\t--white-piano-key: #fbffee;\n\t\t\t\t\t--black-piano-key: #c9d8e5;\n\t\t\t\t\t--white-piano-key-text: #101160;\n\t\t\t\t\t--black-piano-key-text: #231b03;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\n\t\t\t\t\t--track-editor-bg-noise: #564566;\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\n\t\t\t\t\t--select2-opt-group: #581b50;\n\t\t\t\t\t--input-box-outline: #6f7074;\n\t\t\t\t\t--mute-button-normal: #db1e00;\n\t\t\t\t\t--mute-button-mod: #883bf9;\n\t\t\t\t\t--mod-label-primary: #525297;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\n                    --pitch-secondary-channel-hue: 26;\n                    --pitch-secondary-channel-hue-scale: 214.5;\n                    --pitch-secondary-channel-sat: 74.3;\n                    --pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 26;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-note-sat: 85;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 89;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 79;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 79;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t","amoled dark":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #020406;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #8e88ce;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #ad38f9;\n\t\t\t\t\t--link-accent: #bd25ff;\n\t\t\t\t\t--ui-widget-background: #080d1f;\n\t\t\t\t\t--ui-widget-focus: #060f2d;\n\t\t\t\t\t--pitch-background: #000;\n\t\t\t\t\t--tonic: #00113a;\n\t\t\t\t\t--fifth-note: #1b0019;\n\t\t\t\t\t--white-piano-key: #02040c;\n\t\t\t\t\t--black-piano-key: #02040c;\n                    --white-piano-key-text: #fff;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\n\t\t\t\t\t--track-editor-bg-noise: #051529;\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\n\t\t\t\t\t--track-editor-bg-mod: #150529;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #7f3bec;\n\t\t\t\t\t--indicator-secondary: #213888;\n\t\t\t\t\t--select2-opt-group: #1d123c;\n\t\t\t\t\t--input-box-outline: #1b1e48;\n\t\t\t\t\t--mute-button-normal: #d234b0;\n\t\t\t\t\t--mute-button-mod: #263d98;\n\t\t\t\t\t--mod-label-primary: #090910;\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 183;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 30;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 30;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 30;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 0;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 0;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 0;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\n\t\t\t\t}\n\n\t\t\t",beachcombing:"\n\t\t\t:root {\n\t\t\t--page-margin: #010121;\n\t\t\t--editor-background: #020222;\n\t\t\t--hover-preview: #f3ffff;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #c1f1ff;\n\t\t\t--secondary-text: #546775;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #3e0028;\n\t\t\t--loop-accent: #5a00ff;\n\t\t\t--link-accent: #ff00c8fc;\n\t\t\t--ui-widget-background: #1f2b52;\n\t\t\t--ui-widget-focus: #384e91;\n\t\t\t--pitch-background: #2c3155;\n\t\t\t--tonic: #a32f6e;\n\t\t\t--fifth-note: #0044a0;\n\t\t\t--white-piano-key: #fff;\n\t\t\t--black-piano-key: #202d42;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #34406c;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #562e3b;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #372e66;\n\t\t\t--track-editor-bg-mod-dim: #2a1640;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #ff67c2;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #7ce1ff;\n\t\t\t--mute-button-mod: #db519d;\n\t\t\t--pitch1-secondary-channel: #329b70;\n\t\t\t--pitch1-primary-channel: #53ffb8;\n\t\t\t--pitch1-secondary-note: #4cb98c;\n\t\t\t--pitch1-primary-note: #98ffd4;\n\t\t\t--pitch2-secondary-channel: #8e8632;\n\t\t\t--pitch2-primary-channel: #fff36a;\n\t\t\t--pitch2-secondary-note: #afaf22;\n\t\t\t--pitch2-primary-note: #f9f93f;\n\t\t\t--pitch3-secondary-channel: #018e8e;\n\t\t\t--pitch3-primary-channel: #00ffff;\n\t\t\t--pitch3-secondary-note: #24b7b7;\n\t\t\t--pitch3-primary-note: #a7ffff;\n\t\t\t--pitch4-secondary-channel: #6c003d;\n\t\t\t--pitch4-primary-channel: #ff0090;\n\t\t\t--pitch4-secondary-note: #a73c78;\n\t\t\t--pitch4-primary-note: #ff98d2;\n\t\t\t--pitch5-secondary-channel: #0e8153;\n\t\t\t--pitch5-primary-channel: #59ffbd;\n\t\t\t--pitch5-secondary-note: #489979;\n\t\t\t--pitch5-primary-note: #b0ffe0;\n\t\t\t--pitch6-secondary-channel: #185aab;\n\t\t\t--pitch6-primary-channel: #4e7ce5;\n\t\t\t--pitch6-secondary-note: #3e99d9;\n\t\t\t--pitch6-primary-note: #b3e3ff;\n\t\t\t--pitch7-secondary-channel: #4f007d;\n\t\t\t--pitch7-primary-channel: #a200ff;\n\t\t\t--pitch7-secondary-note: #9741c9;\n\t\t\t--pitch7-primary-note: #d386ff;\n\t\t\t--pitch8-secondary-channel: #101c8d;\n\t\t\t--pitch8-primary-channel: #1c5df1;\n\t\t\t--pitch8-secondary-note: #FF4E63;\n\t\t\t--pitch8-primary-note: #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel: #50FFC9;\n\t\t\t--pitch9-secondary-note: #00C78A;\n\t\t\t--pitch9-primary-note: #83FFD9;\n\t\t\t--pitch10-secondary-channel: #A11FFF;\n\t\t\t--pitch10-primary-channel: #CE8BFF;\n\t\t\t--pitch10-secondary-note: #B757FF;\n\t\t\t--pitch10-primary-note: #DFACFF;\n\t\t\t--noise1-secondary-channel: #635070;\n\t\t\t--noise1-primary-channel: #9071db;\n\t\t\t--noise1-secondary-note: #915dc1;\n\t\t\t--noise1-primary-note: #c5a5ff;\n\t\t\t--noise2-secondary-channel: #993367;\n\t\t\t--noise2-primary-channel: #dd777c;\n\t\t\t--noise2-secondary-note: #cc6695;\n\t\t\t--noise2-primary-note: #f0bbd1;\n\t\t\t--noise3-secondary-channel: #4a8c8f;\n\t\t\t--noise3-primary-channel: #77c5dd;\n\t\t\t--noise3-secondary-note: #6fb4cf;\n\t\t\t--noise3-primary-note: #bbf2ff;\n\t\t\t--noise4-secondary-channel: #8e3e7d;\n\t\t\t--noise4-primary-channel: #c682d2;\n\t\t\t--noise4-secondary-note: #b871c1;\n\t\t\t--noise4-primary-note: #ffb8f0;\n\t\t\t--noise5-secondary-channel: #785e37;\n\t\t\t--noise5-primary-channel: #bb9d77;\n\t\t\t--noise5-secondary-note: #aa8c66;\n\t\t\t--noise5-primary-note: #e2d1b2;\n\t\t\t--mod1-secondary-channel: #4e8397;\n\t\t\t--mod1-primary-channel: #92e6f3;\n\t\t\t--mod1-secondary-note: #76b9d9;\n\t\t\t--mod1-primary-note: #cde3ff;\n\t\t\t--mod2-secondary-channel: #ad5774;\n\t\t\t--mod2-primary-channel: #eba4ae;\n\t\t\t--mod2-secondary-note: #c9719b;\n\t\t\t--mod2-primary-note: #fdcee7;\n\t\t\t--mod3-secondary-channel: #6f579f;\n\t\t\t--mod3-primary-channel: #b192f7;\n\t\t\t--mod3-secondary-note: #a778e1;\n\t\t\t--mod3-primary-note: #f8ddff;\n\t\t\t--mod4-secondary-channel: #a88a36;\n\t\t\t--mod4-primary-channel: #bec825;\n\t\t\t--mod4-secondary-note: #aecb57;\n\t\t\t--mod4-primary-note: #dee9bd;\n\t\t\t--mod-label-primary: #2c2c56;\n\t\t\t--mod-label-secondary-text: rgb(71,69,147);\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\n\n\t\t\t}\n\t\t",roe:"\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t\t}",moonlight:"\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t}",autumn:"\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}",fruit:"\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}",sunset:"\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}",toxic:"\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}","violet verdant":"\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\t\t}",portal:"\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch1-secondary-note: #00BDC7;\n\t\t\t--pitch1-primary-note: #92F9FF;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\t\t}",fusion:":root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--mod-label-primary: #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\t\t}",inverse:":root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\t\t\t}",nebula:"\n\t\t:root {\n\t\t\t--page-margin: #040410;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t\t--disabled-note-secondary: #666;\n\t\t}","roe light":"\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}"},V.pageMargin="var(--page-margin)",V.editorBackground="var(--editor-background)",V.hoverPreview="var(--hover-preview)",V.playhead="var(--playhead)",V.primaryText="var(--primary-text)",V.secondaryText="var(--secondary-text)",V.invertedText="var(--inverted-text)",V.textSelection="var(--text-selection)",V.boxSelectionFill="var(--box-selection-fill)",V.loopAccent="var(--loop-accent)",V.linkAccent="var(--link-accent)",V.uiWidgetBackground="var(--ui-widget-background)",V.uiWidgetFocus="var(--ui-widget-focus)",V.pitchBackground="var(--pitch-background)",V.tonic="var(--tonic)",V.fifthNote="var(--fifth-note)",V.whitePianoKey="var(--white-piano-key)",V.blackPianoKey="var(--black-piano-key)",V.whitePianoKeyText="var(--white-piano-key-text)",V.blackPianoKeyText="var(--black-piano-key-text)",V.useColorFormula="var(--use-color-formula)",V.pitchSecondaryChannelHue="var(--pitch-secondary-channel-hue)",V.pitchSecondaryChannelHueScale="var(--pitch-secondary-channel-hue-scale)",V.pitchSecondaryChannelSat="var(--pitch-secondary-channel-sat)",V.pitchSecondaryChannelSatScale="var(--pitch-secondary-channel-sat-scale)",V.pitchSecondaryChannelLum="var(--pitch-secondary-channel-lum)",V.pitchSecondaryChannelLumScale="var(--pitch-secondary-channel-lum-scale)",V.pitchPrimaryChannelHue="var(--pitch-primary-channel-hue)",V.pitchPrimaryChannelHueScale="var(--pitch-primary-channel-hue-scale)",V.pitchPrimaryChannelSat="var(--pitch-primary-channel-sat)",V.pitchPrimaryChannelSatScale="var(--pitch-primary-channel-sat-scale)",V.pitchPrimaryChannelLum="var(--pitch-primary-channel-lum)",V.pitchPrimaryChannelLumScale="var(--pitch-primary-channel-lum-scale)",V.pitchSecondaryNoteHue="var(--pitch-secondary-note-hue)",V.pitchSecondaryNoteHueScale="var(--pitch-secondary-note-hue-scale)",V.pitchSecondaryNoteSat="var(--pitch-secondary-note-sat)",V.pitchSecondaryNoteSatScale="var(--pitch-secondary-note-sat-scale)",V.pitchSecondaryNoteLum="var(--pitch-secondary-note-lum)",V.pitchSecondaryNoteLumScale="var(--pitch-secondary-note-lum-scale)",V.pitchPrimaryNoteHue="var(--pitch-primary-note-hue)",V.pitchPrimaryNoteHueScale="var(--pitch-primary-note-hue-scale)",V.pitchPrimaryNoteSat="var(--pitch-primary-note-sat)",V.pitchPrimaryNoteSatScale="var(--pitch-primary-note-sat-scale)",V.pitchPrimaryNoteLum="var(--pitch-primary-note-lum)",V.pitchPrimaryNoteLumScale="var(--pitch-primary-note-lum-scale)",V.modSecondaryChannelHue="var(--mod-secondary-channel-hue)",V.modSecondaryChannelHueScale="var(--mod-secondary-channel-hue-scale)",V.modSecondaryChannelSat="var(--mod-secondary-channel-sat)",V.modSecondaryChannelSatScale="var(--mod-secondary-channel-sat-scale)",V.modSecondaryChannelLum="var(--mod-secondary-channel-lum)",V.modSecondaryChannelLumScale="var(--mod-secondary-channel-lum-scale)",V.modPrimaryChannelHue="var(--mod-primary-channel-hue)",V.modPrimaryChannelHueScale="var(--mod-primary-channel-hue-scale)",V.modPrimaryChannelSat="var(--mod-primary-channel-sat)",V.modPrimaryChannelSatScale="var(--mod-primary-channel-sat-scale)",V.modPrimaryChannelLum="var(--mod-primary-channel-lum)",V.modPrimaryChannelLumScale="var(--mod-primary-channel-lum-scale)",V.modSecondaryNoteHue="var(--mod-secondary-note-hue)",V.modSecondaryNoteHueScale="var(--mod-secondary-note-hue-scale)",V.modSecondaryNoteSat="var(--mod-secondary-note-sat)",V.modSecondaryNoteSatScale="var(--mod-secondary-note-sat-scale)",V.modSecondaryNoteLum="var(--mod-secondary-note-lum)",V.modSecondaryNoteLumScale="var(--mod-secondary-note-lum-scale)",V.modPrimaryNoteHue="var(--mod-primary-note-hue)",V.modPrimaryNoteHueScale="var(--mod-primary-note-hue-scale)",V.modPrimaryNoteSat="var(--mod-primary-note-sat)",V.modPrimaryNoteSatScale="var(--mod-primary-note-sat-scale)",V.modPrimaryNoteLum="var(--mod-primary-note-lum)",V.modPrimaryNoteLumScale="var(--mod-primary-note-lum-scale)",V.noiseSecondaryChannelHue="var(--noise-secondary-channel-hue)",V.noiseSecondaryChannelHueScale="var(--noise-secondary-channel-hue-scale)",V.noiseSecondaryChannelSat="var(--noise-secondary-channel-sat)",V.noiseSecondaryChannelSatScale="var(--noise-secondary-channel-sat-scale)",V.noiseSecondaryChannelLum="var(--noise-secondary-channel-lum)",V.noiseSecondaryChannelLumScale="var(--noise-secondary-channel-lum-scale)",V.noisePrimaryChannelHue="var(--noise-primary-channel-hue)",V.noisePrimaryChannelHueScale="var(--noise-primary-channel-hue-scale)",V.noisePrimaryChannelSat="var(--noise-primary-channel-sat)",V.noisePrimaryChannelSatScale="var(--noise-primary-channel-sat-scale)",V.noisePrimaryChannelLum="var(--noise-primary-channel-lum)",V.noisePrimaryChannelLumScale="var(--noise-primary-channel-lum-scale)",V.noiseSecondaryNoteHue="var(--noise-secondary-note-hue)",V.noiseSecondaryNoteHueScale="var(--noise-secondary-note-hue-scale)",V.noiseSecondaryNoteSat="var(--noise-secondary-note-sat)",V.noiseSecondaryNoteSatScale="var(--noise-secondary-note-sat-scale)",V.noiseSecondaryNoteLum="var(--noise-secondary-note-lum)",V.noiseSecondaryNoteLumScale="var(--noise-secondary-note-lum-scale)",V.noisePrimaryNoteHue="var(--noise-primary-note-hue)",V.noisePrimaryNoteHueScale="var(--noise-primary-note-hue-scale)",V.noisePrimaryNoteSat="var(--noise-primary-note-sat)",V.noisePrimaryNoteSatScale="var(--noise-primary-note-sat-scale)",V.noisePrimaryNoteLum="var(--noise-primary-note-lum)",V.noisePrimaryNoteLumScale="var(--noise-primary-note-lum-scale)",V.trackEditorBgPitch="var(--track-editor-bg-pitch)",V.trackEditorBgPitchDim="var(--track-editor-bg-pitch-dim)",V.trackEditorBgNoise="var(--track-editor-bg-noise)",V.trackEditorBgNoiseDim="var(--track-editor-bg-noise-dim)",V.trackEditorBgMod="var(--track-editor-bg-mod)",V.trackEditorBgModDim="var(--track-editor-bg-mod-dim)",V.multiplicativeModSlider="var(--multiplicative-mod-slider)",V.overwritingModSlider="var(--overwriting-mod-slider)",V.indicatorPrimary="var(--indicator-primary)",V.indicatorSecondary="var(--indicator-secondary)",V.select2OptGroup="var(--select2-opt-group)",V.inputBoxOutline="var(--input-box-outline)",V.muteButtonNormal="var(--mute-button-normal)",V.muteButtonMod="var(--mute-button-mod)",V.modLabelPrimary="var(--mod-label-primary)",V.modLabelSecondaryText="var(--mod-label-secondary-text)",V.modLabelPrimaryText="var(--mod-label-primary-text)",V.disabledNotePrimary="var(--disabled-note-primary)",V.disabledNoteSecondary="var(--disabled-note-secondary)",V.pitchChannels=d([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel)",primaryChannel:"var(--pitch1-primary-channel)",secondaryNote:"var(--pitch1-secondary-note)",primaryNote:"var(--pitch1-primary-note)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel)",primaryChannel:"var(--pitch2-primary-channel)",secondaryNote:"var(--pitch2-secondary-note)",primaryNote:"var(--pitch2-primary-note)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel)",primaryChannel:"var(--pitch3-primary-channel)",secondaryNote:"var(--pitch3-secondary-note)",primaryNote:"var(--pitch3-primary-note)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel)",primaryChannel:"var(--pitch4-primary-channel)",secondaryNote:"var(--pitch4-secondary-note)",primaryNote:"var(--pitch4-primary-note)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel)",primaryChannel:"var(--pitch5-primary-channel)",secondaryNote:"var(--pitch5-secondary-note)",primaryNote:"var(--pitch5-primary-note)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel)",primaryChannel:"var(--pitch6-primary-channel)",secondaryNote:"var(--pitch6-secondary-note)",primaryNote:"var(--pitch6-primary-note)"},{name:"pitch7",secondaryChannel:"var(--pitch7-secondary-channel)",primaryChannel:"var(--pitch7-primary-channel)",secondaryNote:"var(--pitch7-secondary-note)",primaryNote:"var(--pitch7-primary-note)"},{name:"pitch8",secondaryChannel:"var(--pitch8-secondary-channel)",primaryChannel:"var(--pitch8-primary-channel)",secondaryNote:"var(--pitch8-secondary-note)",primaryNote:"var(--pitch8-primary-note)"},{name:"pitch9",secondaryChannel:"var(--pitch9-secondary-channel)",primaryChannel:"var(--pitch9-primary-channel)",secondaryNote:"var(--pitch9-secondary-note)",primaryNote:"var(--pitch9-primary-note)"},{name:"pitch10",secondaryChannel:"var(--pitch10-secondary-channel)",primaryChannel:"var(--pitch10-primary-channel)",secondaryNote:"var(--pitch10-secondary-note)",primaryNote:"var(--pitch10-primary-note)"}]),V.noiseChannels=d([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel)",primaryChannel:"var(--noise1-primary-channel)",secondaryNote:"var(--noise1-secondary-note)",primaryNote:"var(--noise1-primary-note)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel)",primaryChannel:"var(--noise2-primary-channel)",secondaryNote:"var(--noise2-secondary-note)",primaryNote:"var(--noise2-primary-note)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel)",primaryChannel:"var(--noise3-primary-channel)",secondaryNote:"var(--noise3-secondary-note)",primaryNote:"var(--noise3-primary-note)"},{name:"noise4",secondaryChannel:"var(--noise4-secondary-channel)",primaryChannel:"var(--noise4-primary-channel)",secondaryNote:"var(--noise4-secondary-note)",primaryNote:"var(--noise4-primary-note)"},{name:"noise5",secondaryChannel:"var(--noise5-secondary-channel)",primaryChannel:"var(--noise5-primary-channel)",secondaryNote:"var(--noise5-secondary-note)",primaryNote:"var(--noise5-primary-note)"}]),V.modChannels=d([{name:"mod1",secondaryChannel:"var(--mod1-secondary-channel)",primaryChannel:"var(--mod1-primary-channel)",secondaryNote:"var(--mod1-secondary-note)",primaryNote:"var(--mod1-primary-note)"},{name:"mod2",secondaryChannel:"var(--mod2-secondary-channel)",primaryChannel:"var(--mod2-primary-channel)",secondaryNote:"var(--mod2-secondary-note)",primaryNote:"var(--mod2-primary-note)"},{name:"mod3",secondaryChannel:"var(--mod3-secondary-channel)",primaryChannel:"var(--mod3-primary-channel)",secondaryNote:"var(--mod3-secondary-note)",primaryNote:"var(--mod3-primary-note)"},{name:"mod4",secondaryChannel:"var(--mod4-secondary-channel)",primaryChannel:"var(--mod4-primary-channel)",secondaryNote:"var(--mod4-secondary-note)",primaryNote:"var(--mod4-primary-note)"}]),V.l=document.head.appendChild(O.style({type:"text/css"}));/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class ${static valueToPreset(t){const e=t>>6,n=63&t;return $.presetCategories[e].presets[n]}static midiProgramToPresetValue(t){for(let e=0;e<$.presetCategories.length;e++){const n=$.presetCategories[e];for(let i=0;i<n.presets.length;i++){const a=n.presets[i];if(a.generalMidi&&a.midiProgram==t)return(e<<6)+i}}return null}static nameToPresetValue(t){for(let e=0;e<$.presetCategories.length;e++){const n=$.presetCategories[e];for(let i=0;i<n.presets.length;i++){if(n.presets[i].name==t)return(e<<6)+i}}return null}static instrumentToPreset(t){var n;return null===(n=$.presetCategories[0].presets.dictionary)||void 0===n?void 0:n[null==e?void 0:e[t]]}}function W(t,e){for(let n=0;n<t.length;n++)t[n]*=e}function j(t){if(!function(t){return!(!t||t&t-1)}(t))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(t)/Math.log(2))}function U(t,e){const n=j(e);if(e<4)throw new Error("FFT array length must be at least 4.");for(let i=n-1;i>=2;i--){const n=1<<i,a=n>>1,r=n<<1,o=2*Math.PI/r,s=Math.cos(o),l=Math.sin(o),c=2*s;for(let i=0;i<e;i+=r){const e=i,r=e+a,o=e+n,h=o+a,d=o+n,p=t[e],m=t[o];t[e]=p+m,t[r]*=2,t[o]=p-m,t[h]*=2;let u=s,f=-l,y=1,g=0;for(let n=1;n<a;n++){const i=e+n,a=o-n,r=o+n,s=d-n,l=t[i],h=t[a],p=t[r],m=t[s],b=l-h,v=p+m;t[i]=l+h,t[a]=m-p,t[r]=b*u-v*f,t[s]=v*u+b*f;const k=c*u-y,w=c*f-g;y=u,g=f,u=k,f=w}}}for(let n=0;n<e;n+=4){const e=n+1,i=n+2,a=n+3,r=t[n],o=2*t[e],s=t[i],l=2*t[a],c=r+s,h=r-s;t[n]=c+o,t[e]=c-o,t[i]=h+l,t[a]=h-l}!function(t,e){const n=j(e);if(n>16)throw new Error("FFT array length must not be greater than 2^16.");const i=16-n;for(let n=0;n<e;n++){let e;if(e=(43690&n)>>1|(21845&n)<<1,e=(52428&e)>>2|(13107&e)<<2,e=(61680&e)>>4|(3855&e)<<4,e=(e>>8|(255&e)<<8)>>i,e>n){let i=t[n];t[n]=t[e],t[e]=i}}}(t,e)}$.version="2.5",$.versionDisplayName="GoldBox "+$.version,$.releaseNotesURL="https://jummbus.bitbucket.io/patch_notes/"+$.version+".html",$.isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent),$.ctrlSymbol=$.isOnMac?"⌘":"Ctrl+",$.presetCategories=d([{name:"Custom Instruments",presets:d([{name:e[0],customType:0},{name:e[1],customType:1},{name:e[2],customType:2},{name:e[3],customType:3},{name:e[4],customType:4},{name:e[5],customType:5},{name:e[6],customType:6},{name:e[7],customType:7},{name:e[8],customType:8},{name:e[10],customType:10}])},{name:"Retro Presets",presets:d([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:11},{frequency:"1×",amplitude:7},{frequency:"1×",amplitude:9},{frequency:"20×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:14},{frequency:"2×",amplitude:14},{frequency:"1×",amplitude:11},{frequency:"2×",amplitude:11}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",transition:"seemless",effects:"none",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Keyboard Presets",presets:d([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:9},{frequency:"16×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,operators:[{frequency:"3×",amplitude:15},{frequency:"~1×",amplitude:6},{frequency:"8×",amplitude:4},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Idiophone Presets",presets:d([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"20×",amplitude:2,envelope:"twang 1"}]}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"13×",amplitude:6,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"5×",amplitude:3,envelope:"twang 2"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,feedbackEnvelope:"decay 1",operators:[{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"5×",amplitude:6,envelope:"custom"},{frequency:"8×",amplitude:9,envelope:"custom"},{frequency:"13×",amplitude:11,envelope:"custom"}]}}])},{name:"Guitar Presets",presets:d([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:d([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:d([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:d([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,operators:[{frequency:"3×",amplitude:13},{frequency:"~1×",amplitude:5},{frequency:"4×",amplitude:6},{frequency:"3×",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"4×",amplitude:12},{frequency:"16×",amplitude:5},{frequency:"1×",amplitude:2},{frequency:"~1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"~2×",amplitude:6},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:11},{frequency:"1×",amplitude:9},{frequency:"~2×",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:d([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1→3 2→4",feedbackAmplitude:7,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"3×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"}]}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:d([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:9},{frequency:"3×",amplitude:9},{frequency:"2×",amplitude:7},{frequency:"7×",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"16×",amplitude:5},{frequency:"~1×",amplitude:10},{frequency:"1×",amplitude:9},{frequency:"6×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"~2×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"7×",amplitude:8,envelope:"custom"}]}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"decay 1",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:12,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"custom"}]}}])},{name:"Vocal Presets",presets:d([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:15},{frequency:"1×",amplitude:7},{frequency:"~1×",amplitude:7},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"tremolo5",vibrato:"none",algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,feedbackEnvelope:"tremolo3",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,operators:[{frequency:"2×",amplitude:13},{frequency:"5×",amplitude:12},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:d([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:13},{frequency:"1×",amplitude:5},{frequency:"9×",amplitude:5},{frequency:"13×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:d([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"tremolo5",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"~2×",amplitude:2,envelope:"twang 3"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Flute Presets",presets:d([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"~1×",amplitude:1,envelope:"punch"}]}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:d([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"2×",amplitude:14},{frequency:"~1×",amplitude:4},{frequency:"6×",amplitude:3},{frequency:"13×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:14},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:8},{frequency:"3×",amplitude:7},{frequency:"11×",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:12},{frequency:"3×",amplitude:7},{frequency:"7×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,operators:[{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:9},{frequency:"1×",amplitude:7},{frequency:"11×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:14},{frequency:"~1×",amplitude:10},{frequency:"3×",amplitude:7},{frequency:"1×",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15},{frequency:"4×",amplitude:5},{frequency:"1×",amplitude:10},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"~1×",amplitude:13},{frequency:"2×",amplitude:10},{frequency:"5×",amplitude:5},{frequency:"11×",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13},{frequency:"5×",amplitude:7},{frequency:"7×",amplitude:5},{frequency:"~1×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}}])},{name:"Drum Presets",presets:d([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:14},{frequency:"7×",amplitude:3},{frequency:"3×",amplitude:5},{frequency:"4×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"~1×",amplitude:12},{frequency:"2×",amplitude:15},{frequency:"4×",amplitude:14},{frequency:"~1×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"8×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:d([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:12},{frequency:"1×",amplitude:4},{frequency:"20×",amplitude:1},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"5×",amplitude:13},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:6},{frequency:"11×",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])}]);class Q{constructor(){this.h=1,this.p=[void 0],this.m=0,this.u=0,this.g=0}pushFront(t){this.g>=this.h&&this.v(),this.u=this.u-1&this.m,this.p[this.u]=t,this.g++}pushBack(t){this.g>=this.h&&this.v(),this.p[this.u+this.g&this.m]=t,this.g++}popFront(){if(this.g<=0)throw new Error("No elements left to pop.");const t=this.p[this.u];return this.p[this.u]=void 0,this.u=this.u+1&this.m,this.g--,t}popBack(){if(this.g<=0)throw new Error("No elements left to pop.");this.g--;const t=this.u+this.g&this.m,e=this.p[t];return this.p[t]=void 0,e}peakFront(){if(this.g<=0)throw new Error("No elements left to pop.");return this.p[this.u]}peakBack(){if(this.g<=0)throw new Error("No elements left to pop.");return this.p[this.u+this.g-1&this.m]}count(){return this.g}set(t,e){if(t<0||t>=this.g)throw new Error("Invalid index");this.p[this.u+t&this.m]=e}get(t){if(t<0||t>=this.g)throw new Error("Invalid index");return this.p[this.u+t&this.m]}remove(t){if(t<0||t>=this.g)throw new Error("Invalid index");if(t<=this.g>>1){for(;t>0;)this.set(t,this.get(t-1)),t--;this.popFront()}else{for(t++;t<this.g;)this.set(t-1,this.get(t)),t++;this.popBack()}}v(){if(this.h>=1073741824)throw new Error("Capacity too big.");this.h=this.h<<1;const t=this.p,e=new Array(this.h),n=0|this.g,i=0|this.u;for(let a=0;a<n;a++)e[a]=t[i+a&this.m];for(let t=n;t<this.h;t++)e[t]=void 0;this.u=0,this.p=e,this.m=this.h-1}}const _=new class{constructor(){this.activeEvents=[],this.listeners={},this.activeEvents=[],this.listeners={}}raise(t,e,n){if(null!=this.listeners[t]){this.activeEvents.push(t);for(let i=0;i<this.listeners[t].length;i++)this.listeners[t][i](e,n);this.activeEvents.pop()}}listen(t,e){null==this.listeners[t]&&(this.listeners[t]=[]),this.listeners[t].push(e)}unlisten(t,e){if(null==this.listeners[t])return;const n=this.listeners[t].indexOf(e);-1!=n&&this.listeners[t].splice(n,1)}unlistenAll(t){null!=this.listeners[t]&&(this.listeners[t]=[])}};class K{constructor(){this.a=[1],this.b=[1],this.order=0}linearGain0thOrder(t){this.b[0]=t,this.order=0}lowPass1stOrderButterworth(t){const e=1/Math.tan(.5*t),n=1+e;this.a[1]=(1-e)/n,this.b[1]=this.b[0]=1/n,this.order=1}lowPass1stOrderSimplified(t){const e=2*Math.sin(.5*t);this.a[1]=e-1,this.b[0]=e,this.b[1]=0,this.order=1}highPass1stOrderButterworth(t){const e=1/Math.tan(.5*t),n=1+e;this.a[1]=(1-e)/n,this.b[0]=e/n,this.b[1]=-e/n,this.order=1}highShelf1stOrder(t,e){const n=Math.tan(.5*t),i=Math.sqrt(e),a=(n*i-1)/(n*i+1);this.a[1]=a/1,this.b[0]=(1+a+e*(1-a))/2,this.b[1]=(1+a-e*(1-a))/2,this.order=1}allPass1stOrderInvertPhaseAbove(t){const e=(Math.sin(t)-1)/Math.cos(t);this.a[1]=e,this.b[0]=e,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(t){const e=(1-t)/(1+t);this.a[1]=e,this.b[0]=e,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(t,e){const n=Math.sin(t)/(2*e),i=Math.cos(t),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1-i)/(2*a),this.b[1]=(1-i)/a,this.order=2}lowPass2ndOrderSimplified(t,e){const n=2*Math.sin(t/2),i=1-1/(2*e),a=i+i/(1-n);this.a[1]=2*n+(n-1)*n*a-2,this.a[2]=(n-1)*(n-n*a-1),this.b[0]=n*n,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(t,e){const n=Math.sin(t)/(2*e),i=Math.cos(t),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1+i)/(2*a),this.b[1]=-(1+i)/a,this.order=2}peak2ndOrder(t,e,n){const i=Math.sqrt(e),a=n*t/(i>=1?i:1/i),r=Math.tan(.5*a),o=1+r/i;this.b[0]=(1+r*i)/o,this.b[1]=this.a[1]=-2*Math.cos(t)/o,this.b[2]=(1-r*i)/o,this.a[2]=(1-r/i)/o,this.order=2}}class J{constructor(){this.real=0,this.imag=0,this.denom=1}analyze(t,e){this.analyzeComplex(t,Math.cos(e),Math.sin(e))}analyzeComplex(t,e,n){const i=t.a,a=t.b,r=e,o=-n;let s=a[0]+a[1]*r,l=a[1]*o,c=1+i[1]*r,h=i[1]*o,d=r,p=o;for(let e=2;e<=t.order;e++){const t=d*o+p*r;d=d*r-p*o,p=t,s+=a[e]*d,l+=a[e]*p,c+=i[e]*d,h+=i[e]*p}this.denom=c*c+h*h,this.real=s*c+l*h,this.imag=l*c-s*h}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}}class Z{constructor(){this.a1=0,this.a2=0,this.b0=1,this.b1=0,this.b2=0,this.a1Delta=0,this.a2Delta=0,this.b0Delta=0,this.b1Delta=0,this.b2Delta=0,this.output1=0,this.output2=0,this.useMultiplicativeInputCoefficients=!1}resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(t,e,n,i){if(2!=t.order||2!=e.order)throw new Error;this.a1=t.a[1],this.a2=t.a[2],this.b0=t.b[0],this.b1=t.b[1],this.b2=t.b[2],this.a1Delta=(e.a[1]-t.a[1])*n,this.a2Delta=(e.a[2]-t.a[2])*n,i?(this.b0Delta=Math.pow(e.b[0]/t.b[0],n),this.b1Delta=Math.pow(e.b[1]/t.b[1],n),this.b2Delta=Math.pow(e.b[2]/t.b[2],n)):(this.b0Delta=(e.b[0]-t.b[0])*n,this.b1Delta=(e.b[1]-t.b[1])*n,this.b2Delta=(e.b[2]-t.b[2])*n),this.useMultiplicativeInputCoefficients=i}}const Y=1e-24,X=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],tt=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class et{constructor(t,e,n){this.k=[],this.S=0;for(let i=e;i<n;i++){const e=tt[t.charCodeAt(i)];this.k.push(e>>5&1),this.k.push(e>>4&1),this.k.push(e>>3&1),this.k.push(e>>2&1),this.k.push(e>>1&1),this.k.push(1&e)}}read(t){let e=0;for(;t>0;)e<<=1,e+=this.k[this.S++],t--;return e}readLongTail(t,e){let n=t,i=e;for(;this.k[this.S++];)n+=1<<i,i++;for(;i>0;)i--,this.k[this.S++]&&(n+=1<<i);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class nt{constructor(){this.M=0,this.k=[]}clear(){this.M=0}write(t,e){for(t--;t>=0;)this.k[this.M++]=e>>>t&1,t--}writeLongTail(t,e,n){if(n<t)throw new Error("value out of bounds");n-=t;let i=e;for(;n>=1<<i;)this.k[this.M++]=1,n-=1<<i,i++;for(this.k[this.M++]=0;i>0;)i--,this.k[this.M++]=n>>>i&1}writePartDuration(t){this.writeLongTail(1,3,t)}writePinCount(t){this.writeLongTail(1,0,t)}writePitchInterval(t){t<0?(this.write(1,1),this.writeLongTail(1,3,-t)):(this.write(1,0),this.writeLongTail(1,3,t))}concat(t){for(let e=0;e<t.M;e++)this.k[this.M++]=t.k[e]}encodeBase64(t){for(let e=0;e<this.M;e+=6){const n=this.k[e]<<5|this.k[e+1]<<4|this.k[e+2]<<3|this.k[e+3]<<2|this.k[e+4]<<1|this.k[e+5];t.push(X[n])}return t}lengthBase64(){return Math.ceil(this.M/6)}}function it(t,e,n){return{interval:t,time:e,size:n}}function at(t,e,n){return n<=(e-=1)?n>=t?n:t:e}function rt(t,e,n){if(t<=n&&n<=e)return n;throw new Error(`Value ${n} not in range [${t}, ${e}]`)}class ot{constructor(t,e,n,i,a=!1){this.pitches=[t],this.pins=[it(0,0,i),it(0,n-e,a?0:i)],this.start=e,this.end=n,this.continuesLastPattern=!1}pickMainInterval(){let t=0,e=0;for(let n=1;n<this.pins.length;n++){const i=this.pins[n-1],a=this.pins[n];if(i.interval==a.interval){const n=a.time-i.time;t<n&&(t=n,e=i.interval)}}if(0==t){let t=0;for(let n=0;n<this.pins.length;n++){const i=this.pins[n];t<i.size&&(t=i.size,e=i.interval)}}return e}clone(){const t=new ot(-1,this.start,this.end,3);t.pitches=this.pitches.concat(),t.pins=[];for(const e of this.pins)t.pins.push(it(e.interval,e.time,e.size));return t.continuesLastPattern=this.continuesLastPattern,t}getEndPinIndex(t){let e;for(e=1;e<this.pins.length-1&&!(this.pins[e].time+this.start>t);e++);return e}}class st{constructor(){this.notes=[],this.instruments=[0]}cloneNotes(){const t=[];for(const e of this.notes)t.push(e.clone());return t}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}}class lt{constructor(t){this.frequency=4,this.amplitude=0,this.waveform=0,this.pulseWidth=.5,this.reset(t)}reset(t){this.frequency=4,this.amplitude=t<=1?n.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(t){this.frequency=t.frequency,this.amplitude=t.amplitude,this.waveform=t.waveform,this.pulseWidth=t.pulseWidth}}class ct{constructor(){this.name="",this.carrierCount=0,this.modulatedBy=[[],[],[],[],[],[]],this.associatedCarrier=[],this.fromPreset(1)}set(t,e){this.reset(),this.carrierCount=t;for(let n=0;n<this.modulatedBy.length;n++){this.modulatedBy[n]=e[n],n<t&&(this.associatedCarrier[n]=n+1),this.name+=n+1;for(let i=0;i<e[n].length;i++)this.name+=e[n][i],e[n][i]>t-1&&(this.associatedCarrier[e[n][i]-1]=n+1),this.name+=",";this.name+=n<t?"|":"."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(t){this.name=t.name,this.carrierCount=t.carrierCount,this.modulatedBy=t.modulatedBy,this.associatedCarrier=t.associatedCarrier}fromPreset(t){this.reset();let e=n.algorithms6Op[t];this.name=e.name,this.carrierCount=e.carrierCount;for(var i=0;i<e.modulatedBy.length;i++)this.modulatedBy[i]=Array.from(e.modulatedBy[i]),this.associatedCarrier[i]=e.associatedCarrier[i]}}class ht{constructor(){this.name="",this.indices=[[],[],[],[],[],[]],this.fromPreset(1)}set(t){this.reset();for(let e=0;e<this.indices.length;e++){this.indices[e]=t[e];for(let n=0;n<t[e].length;n++)this.name+=t[e][n],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(t){this.name=t.name,this.indices=t.indices}fromPreset(t){this.reset();let e=n.feedbacks6Op[t];for(var i=0;i<e.indices.length;i++){this.indices[i]=Array.from(e.indices[i]);for(let t=0;t<e.indices[i].length;t++)this.name+=e.indices[i][t],this.name+=",";this.name+="."}}}class dt{constructor(t){this.spectrum=[],this.I=null,this.P=!1,this.reset(t)}reset(t){for(let e=0;e<n.spectrumControlPoints;e++)if(t)this.spectrum[e]=Math.round(n.spectrumMax*(1/Math.sqrt(1+e/3)));else{const t=0==e||7==e||11==e||14==e||16==e||18==e||21==e||23==e||e>=25;this.spectrum[e]=t?Math.max(0,Math.round(n.spectrumMax*(1-e/30))):0}this.P=!1}markCustomWaveDirty(){this.P=!1}getCustomWave(t){if(this.P)return this.I;const e=n.spectrumNoiseLength;null!=this.I&&this.I.length==e+1||(this.I=new Float32Array(e+1));const i=this.I;for(let t=0;t<e;t++)i[t]=0;const a=[0,1/7,Math.log2(5/4),3/7,Math.log2(1.5),5/7,6/7];function r(e){return t+Math.floor(e/n.spectrumControlPointsPerOctave)+a[(e+n.spectrumControlPointsPerOctave)%n.spectrumControlPointsPerOctave]}let o=1;for(let t=0;t<n.spectrumControlPoints+1;t++){const a=t<=0?0:this.spectrum[t-1],l=t>=n.spectrumControlPoints?this.spectrum[n.spectrumControlPoints-1]:this.spectrum[t],c=r(t-1);let h=r(t);t>=n.spectrumControlPoints&&(h=14+.25*(h-14)),0==a&&0==l||(o+=.02*s(i,e,c,h,a/n.spectrumMax,l/n.spectrumMax,-.5))}return this.spectrum[n.spectrumControlPoints-1]>0&&(o+=.02*s(i,e,14+.25*(r(n.spectrumControlPoints)-14),14,this.spectrum[n.spectrumControlPoints-1]/n.spectrumMax,0,-.5)),U(i,e),W(i,5/(Math.sqrt(e)*Math.pow(o,.75))),i[e]=i[0],this.P=!0,i}}class pt{constructor(){this.harmonics=[],this.I=null,this.P=!1,this.reset()}reset(){for(let t=0;t<n.harmonicsControlPoints;t++)this.harmonics[t]=0;this.harmonics[0]=n.harmonicsMax,this.harmonics[3]=n.harmonicsMax,this.harmonics[6]=n.harmonicsMax,this.P=!1}markCustomWaveDirty(){this.P=!1}getCustomWave(t){this.T!=t&&(this.T=t,this.P=!1);const e=7==t?n.harmonicsRenderedForPickedString:n.harmonicsRendered;if(this.P)return this.I;const i=n.harmonicsWavelength,a=o(0,null,null);null!=this.I&&this.I.length==i+1||(this.I=new Float32Array(i+1));const r=this.I;for(let t=0;t<i;t++)r[t]=0;let s=1;for(let t=0;t<e;t++){const o=t+1;let l=t<n.harmonicsControlPoints?this.harmonics[t]:this.harmonics[n.harmonicsControlPoints-1];t>=n.harmonicsControlPoints&&(l*=1-(t-n.harmonicsControlPoints)/(e-n.harmonicsControlPoints));const c=l/n.harmonicsMax;let h=Math.pow(2,l-n.harmonicsMax+1)*Math.sqrt(c);t<n.harmonicsControlPoints&&(s+=h),h*=Math.pow(o,-.25),h*=a[t+589],r[i-o]=h}U(r,i);const l=1/Math.pow(s,.7);for(let t=0;t<r.length;t++)r[t]*=l;return function(t){let e=0;for(let n=0;n<t.length;n++){const i=t[n];t[n]=e,e+=i}}(r),r[i]=r[0],this.P=!0,r}}class mt{constructor(){this.freq=0,this.gain=n.filterGainCenter,this.type=2}set(t,e){this.freq=t,this.gain=e}getHz(){return mt.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(t){return n.filterFreqReferenceHz*Math.pow(2,(t-n.filterFreqReferenceSetting)*n.filterFreqStep)}static getSettingValueFromHz(t){return Math.log2(t/n.filterFreqReferenceHz)/n.filterFreqStep+n.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(t){return Math.max(0,Math.min(n.filterFreqRange-1,Math.round(mt.getSettingValueFromHz(t))))}getLinearGain(t=1){const e=(this.gain-n.filterGainCenter)*n.filterGainStep,i=2==this.type?0:-.5,a=i+(e-i)*t;return Math.pow(2,a)}static getRoundedSettingValueFromLinearGain(t){return Math.max(0,Math.min(n.filterGainRange-1,Math.round(Math.log2(t)/n.filterGainStep+n.filterGainCenter)))}toCoefficients(t,e,i=1,a=1){const r=2*Math.PI*Math.max(n.filterFreqMinHz,Math.min(n.filterFreqMaxHz,i*this.getHz()))/e,o=this.getLinearGain(a);switch(this.type){case 0:t.lowPass2ndOrderButterworth(r,o);break;case 1:t.highPass2ndOrderButterworth(r,o);break;case 2:t.peak2ndOrder(r,o,1);break;default:throw new Error}}getVolumeCompensationMult(){const t=(this.freq-n.filterFreqReferenceSetting)*n.filterFreqStep,e=(this.gain-n.filterGainCenter)*n.filterGainStep;switch(this.type){case 0:const i=Math.pow(2,t)*n.filterFreqReferenceHz/8e3,a=(Math.sqrt(1+4*i)-1)/2,r=Math.log2(a);return Math.pow(.5,.2*Math.max(0,e+1)+Math.min(0,Math.max(-3,.595*r+.35*Math.min(0,e+1))));case 1:return Math.pow(.5,.125*Math.max(0,e+1)+Math.min(0,.3*(-t-Math.log2(n.filterFreqReferenceHz/125))+.2*Math.min(0,e+1)));case 2:const o=t+Math.log2(n.filterFreqReferenceHz/2e3),s=Math.pow(1/(1+Math.pow(o/3,2)),2);return Math.pow(.5,.125*Math.max(0,e)+.1*s*Math.min(0,e));default:throw new Error}}}class ut{constructor(){this.controlPoints=[],this.controlPointCount=0,this.reset()}reset(){this.controlPointCount=0}addPoint(t,e,n){let i;this.controlPoints.length<=this.controlPointCount?(i=new mt,this.controlPoints[this.controlPointCount]=i):i=this.controlPoints[this.controlPointCount],this.controlPointCount++,i.type=t,i.set(e,n)}toJsonObject(){const t=[];for(let e=0;e<this.controlPointCount;e++){const i=this.controlPoints[e];t.push({type:n.filterTypeNames[i.type],cutoffHz:Math.round(100*i.getHz())/100,linearGain:Math.round(1e4*i.getLinearGain())/1e4})}return t}fromJsonObject(t){if(this.controlPoints.length=0,t)for(const e of t){const t=new mt;t.type=n.filterTypeNames.indexOf(e.type),-1==t.type&&(t.type=2),null!=e.cutoffHz?t.freq=mt.getRoundedSettingValueFromHz(e.cutoffHz):t.freq=0,null!=e.linearGain?t.gain=mt.getRoundedSettingValueFromLinearGain(e.linearGain):t.gain=n.filterGainCenter,this.controlPoints.push(t)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(t,e){if(t.controlPointCount!=e.controlPointCount)return!1;for(let n=0;n<t.controlPointCount;n++)if(t.controlPoints[n].type!=e.controlPoints[n].type)return!1;return!0}static lerpFilters(t,e,n){let i=new ut;if(null==t)return t;if(null==e)return e;if(n=Math.max(0,Math.min(1,n)),this.filtersCanMorph(t,e)){for(let a=0;a<t.controlPointCount;a++)i.controlPoints[a]=new mt,i.controlPoints[a].type=t.controlPoints[a].type,i.controlPoints[a].freq=t.controlPoints[a].freq+(e.controlPoints[a].freq-t.controlPoints[a].freq)*n,i.controlPoints[a].gain=t.controlPoints[a].gain+(e.controlPoints[a].gain-t.controlPoints[a].gain)*n;return i.controlPointCount=t.controlPointCount,i}return n>=1?e:t}convertLegacySettings(t,e,n){this.reset();const i=2*Math.asin(.475),a=e>1,r=0==e,o=10==t,s=3==n.type||4==n.type||8==n.type||0==n.type,l=48e3,c=8e3*Math.pow(2,.5*(t-10)),h=Math.min(i,2*Math.PI*c/l);if(1==n.type&&!a&&o);else if(r){const t=3.5,e=h*Math.pow(2,t),n=l*(e/(1+e/Math.PI))/(2*Math.PI),i=mt.getRoundedSettingValueFromHz(n),a=mt.getHzFromSettingValue(i),r=2*Math.PI*a/l,o=new K;o.lowPass1stOrderSimplified(h);const c=new J;c.analyze(o,r);const d=c.magnitude();let p=Math.log2(d);p=.82*(p+t)-t,s&&(p=Math.min(p,-1));const m=Math.pow(2,p),u=mt.getRoundedSettingValueFromLinearGain(m);this.addPoint(0,i,u)}else{const t=.5/(1-.95*Math.sqrt(Math.max(0,e-1)/6)),n=.5/t,i=h+(h*(h/(2*Math.PI*8e3/l)*Math.pow(n,.9)+1)-h)*n;let r;r=s?l*Math.min(i,h*Math.pow(2,.25))/(2*Math.PI):l*i/(2*Math.PI);const o=mt.getRoundedSettingValueFromHz(r);let c;if(s)c=t;else{const e=new K;e.lowPass2ndOrderSimplified(h,t);const n=new J;n.analyze(e,i),c=n.magnitude()}a||(c=Math.min(c,Math.sqrt(.5)));const d=mt.getRoundedSettingValueFromLinearGain(c);this.addPoint(0,o,d)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(t,e,n=!1){this.reset();const i=2*Math.asin(.475),a=0==e&&n,r=48e3,o=8e3*Math.pow(2,.5*(t-10)),s=Math.min(i,2*Math.PI*o/r);if(a){const t=3.5,e=s*Math.pow(2,t),n=r*(e/(1+e/Math.PI))/(2*Math.PI),i=mt.getRoundedSettingValueFromHz(n),a=mt.getHzFromSettingValue(i),o=2*Math.PI*a/r,l=new K;l.lowPass1stOrderSimplified(s);const c=new J;c.analyze(l,o);const h=c.magnitude();let d=Math.log2(h);d=.82*(d+t)-t;const p=Math.pow(2,d),m=mt.getRoundedSettingValueFromLinearGain(p);this.addPoint(0,i,m)}else{const t=.5/(1-.95*Math.sqrt(Math.max(0,e-1)/6)),n=.5/t,i=s+(s*(s/(2*Math.PI*8e3/r)*Math.pow(n,.9)+1)-s)*n;let a;a=r*i/(2*Math.PI);const o=mt.getSettingValueFromHz(a);let l;const c=new K;c.lowPass2ndOrderSimplified(s,t);const h=new J;h.analyze(c,i),l=h.magnitude();const d=mt.getRoundedSettingValueFromLinearGain(l);this.addPoint(0,o,d)}}}class ft{constructor(){this.target=0,this.index=0,this.envelope=0,this.reset()}reset(){this.target=0,this.index=0,this.envelope=0}toJsonObject(){const t={target:n.instrumentAutomationTargets[this.target].name,envelope:n.envelopes[this.envelope].name};return n.instrumentAutomationTargets[this.target].maxCount>1&&(t.index=this.index),t}fromJsonObject(t){this.reset();let e=n.instrumentAutomationTargets.dictionary[t.target];null==e&&(e=n.instrumentAutomationTargets.dictionary.noteVolume),this.target=e.index;let i=n.envelopes.dictionary[t.envelope];null==i&&(i=n.envelopes.dictionary.none),this.envelope=i.index,null!=t.index?this.index=at(0,n.instrumentAutomationTargets[this.target].maxCount,0|t.index):this.index=0}}class yt{constructor(t,e){if(this.type=0,this.preset=0,this.chipWave=2,this.chipNoise=1,this.eqFilter=new ut,this.eqFilterType=!1,this.eqFilterSimpleCut=n.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.noteFilter=new ut,this.noteFilterType=!1,this.noteFilterSimpleCut=n.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.eqSubFilters=[],this.noteSubFilters=[],this.envelopes=[],this.fadeIn=0,this.fadeOut=n.fadeOutNeutral,this.envelopeCount=0,this.transition=n.transitions.dictionary.normal.index,this.pitchShift=0,this.detune=0,this.vibrato=0,this.interval=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.unison=0,this.effects=0,this.chord=1,this.volume=0,this.pan=n.panCenter,this.panDelay=10,this.arpeggioSpeed=12,this.fastTwoNoteArp=!1,this.legacyTieOver=!1,this.clicklessTransition=!1,this.aliases=!1,this.pulseWidth=n.pulseWidthRange,this.stringSustain=10,this.distortion=0,this.bitcrusherFreq=0,this.bitcrusherQuantization=0,this.chorus=0,this.reverb=0,this.echoSustain=0,this.echoDelay=0,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm=new ct,this.customFeedbackType=new ht,this.feedbackAmplitude=0,this.LFOtime=0,this.nextLFOtime=0,this.arpTime=0,this.customChipWave=new Float64Array(64),this.customChipWaveIntegral=new Float64Array(65),this.operators=[],this.harmonicsWave=new pt,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modInstruments=[],this.modulators=[],this.modFilterTypes=[],this.invalidModulators=[],e)for(let t=0;t<n.modCount;t++)this.modChannels.push(0),this.modInstruments.push(0),this.modulators.push(n.modulators.dictionary.none.index);this.spectrumWave=new dt(t);for(let t=0;t<n.operatorCount+2;t++)this.operators[t]=new lt(t);for(let t=0;t<n.drumCount;t++)this.drumsetEnvelopes[t]=n.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[t]=new dt(!0);for(let t=0;t<64;t++)this.customChipWave[t]=24-Math.floor(.75*t);let i=0;for(let t=0;t<this.customChipWave.length;t++)i+=this.customChipWave[t];const a=i/this.customChipWave.length;let r=0,o=0;for(let t=0;t<this.customChipWave.length;t++)r+=o,o=this.customChipWave[t]-a,this.customChipWaveIntegral[t]=r;this.customChipWaveIntegral[64]=0}setTypeAndReset(t,e,i){i&&(t=9),this.type=t,this.preset=t,this.volume=0,this.effects=4,this.chorus=n.chorusRange-1,this.reverb=0,this.echoSustain=Math.floor(.5*(n.echoSustainRange-1)),this.echoDelay=Math.floor(.5*(n.echoDelayRange-1)),this.eqFilter.reset(),this.eqFilterType=!1,this.eqFilterSimpleCut=n.filterSimpleCutRange-1,this.eqFilterSimplePeak=0;for(let t=0;t<n.filterMorphCount;t++)this.eqSubFilters[t]=null,this.noteSubFilters[t]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=n.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.distortion=Math.floor(.75*(n.distortionRange-1)),this.bitcrusherFreq=Math.floor(.5*(n.bitcrusherFreqRange-1)),this.bitcrusherQuantization=Math.floor(.5*(n.bitcrusherQuantizationRange-1)),this.pan=n.panCenter,this.panDelay=10,this.pitchShift=n.pitchShiftCenter,this.detune=n.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=n.fadeOutNeutral,this.transition=n.transitions.dictionary.normal.index,this.envelopeCount=0,t){case 0:this.chipWave=2,this.chord=n.chords.dictionary.arpeggio.index;break;case 8:this.chipWave=2,this.chord=n.chords.dictionary.arpeggio.index;for(let t=0;t<64;t++)this.customChipWave[t]=24-Math.floor(.75*t);let i=0;for(let t=0;t<this.customChipWave.length;t++)i+=this.customChipWave[t];const a=i/this.customChipWave.length;let r=0,o=0;for(let t=0;t<this.customChipWave.length;t++)r+=o,o=this.customChipWave[t]-a,this.customChipWaveIntegral[t]=r;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=n.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let t=0;t<this.operators.length;t++)this.operators[t].reset(t);break;case 10:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let t=0;t<this.operators.length;t++)this.operators[t].reset(t);break;case 2:this.chipNoise=1,this.chord=n.chords.dictionary.arpeggio.index;break;case 3:this.chord=n.chords.dictionary.simultaneous.index,this.spectrumWave.reset(e);break;case 4:this.chord=n.chords.dictionary.simultaneous.index;for(let t=0;t<n.drumCount;t++)this.drumsetEnvelopes[t]=n.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[t]&&(this.drumsetSpectrumWaves[t]=new dt(!0)),this.drumsetSpectrumWaves[t].reset(e);break;case 5:this.chord=n.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=n.chords.dictionary.arpeggio.index,this.pulseWidth=n.pulseWidthRange;break;case 7:this.chord=n.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 9:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let t=0;t<n.modCount;t++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(n.modulators.dictionary.none.index),this.invalidModulators[t]=!1,this.modFilterTypes[t]=0;break;default:throw new Error("Unrecognized instrument type: "+t)}this.chord!=n.chords.dictionary.simultaneous.index&&(this.effects=2048|this.effects)}convertLegacySettings(t,e){let i=t.filterCutoff,a=t.filterResonance,r=t.filterEnvelope,o=t.pulseEnvelope,s=t.operatorEnvelopes,l=t.feedbackEnvelope;null==i&&(i=0==this.type?6:10),null==a&&(a=0),null==r&&(r=n.envelopes.dictionary.none),null==o&&(o=n.envelopes.dictionary[6==this.type?"twang 2":"none"]),null==s&&(s=[n.envelopes.dictionary[1==this.type?"note size":"none"],n.envelopes.dictionary.none,n.envelopes.dictionary.none,n.envelopes.dictionary.none]),null==l&&(l=n.envelopes.dictionary.none);const c=n.algorithms[this.algorithm].carrierCount;let h=!0,d=!0,p=0==r.type||0==o.type;if(1==this.type){p=p||0==l.type;for(let t=0;t<s.length;t++)t<c?0!=s[t].type?d=!1:h=!1:p=p||0==s[t].type}this.envelopeCount=0,1==this.type&&(d&&p?this.addEnvelope(n.instrumentAutomationTargets.dictionary.noteVolume.index,0,n.envelopes.dictionary["note size"].index):h&&!p&&this.addEnvelope(n.instrumentAutomationTargets.dictionary.none.index,0,n.envelopes.dictionary["note size"].index)),1==r.type?(this.noteFilter.reset(),this.noteFilterType=!1,this.eqFilter.convertLegacySettings(i,a,r),this.effects&=-33,(e||this.eqFilterType)&&(this.eqFilterType=!0,this.eqFilterSimpleCut=i,this.eqFilterSimplePeak=a)):(this.eqFilter.reset(),this.eqFilterType=!1,this.noteFilterType=!1,this.noteFilter.convertLegacySettings(i,a,r),this.effects|=32,this.addEnvelope(n.instrumentAutomationTargets.dictionary.noteFilterAllFreqs.index,0,r.index),(e||this.noteFilterType)&&(this.noteFilterType=!0,this.noteFilterSimpleCut=i,this.noteFilterSimplePeak=a)),1!=o.type&&this.addEnvelope(n.instrumentAutomationTargets.dictionary.pulseWidth.index,0,o.index);for(let t=0;t<s.length;t++)t<c&&d||1!=s[t].type&&this.addEnvelope(n.instrumentAutomationTargets.dictionary.operatorAmplitude.index,t,s[t].index);1!=l.type&&this.addEnvelope(n.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,l.index)}toJsonObject(){const t={type:n.instrumentTypeNames[this.type],volume:this.volume,eqFilter:this.eqFilter.toJsonObject(),eqFilterType:this.eqFilterType,eqSimpleCut:this.eqFilterSimpleCut,eqSimplePeak:this.eqFilterSimplePeak};this.preset!=this.type&&(t.preset=this.preset);for(let e=0;e<n.filterMorphCount;e++)null!=this.eqSubFilters[e]&&(t["eqSubFilters"+e]=this.eqSubFilters[e].toJsonObject());const e=[];for(const t of n.effectOrder)this.effects&1<<t&&e.push(n.effectNames[t]);if(t.effects=e,p(this.effects)&&(t.transition=n.transitions[this.transition].name,t.clicklessTransition=this.clicklessTransition),m(this.effects)&&(t.chord=this.getChord().name,t.fastTwoNoteArp=this.fastTwoNoteArp,t.arpeggioSpeed=this.arpeggioSpeed),u(this.effects)&&(t.pitchShiftSemitones=this.pitchShift),f(this.effects)&&(t.detuneCents=Ft.detuneToCents(this.detune)),y(this.effects)&&(-1==this.vibrato&&(this.vibrato=5),5!=this.vibrato?t.vibrato=n.vibratos[this.vibrato].name:t.vibrato="custom",t.vibratoDepth=this.vibratoDepth,t.vibratoDelay=this.vibratoDelay,t.vibratoSpeed=this.vibratoSpeed,t.vibratoType=this.vibratoType),g(this.effects)){t.noteFilterType=this.noteFilterType,t.noteSimpleCut=this.noteFilterSimpleCut,t.noteSimplePeak=this.noteFilterSimplePeak,t.noteFilter=this.noteFilter.toJsonObject();for(let e=0;e<n.filterMorphCount;e++)null!=this.noteSubFilters[e]&&(t["noteSubFilters"+e]=this.noteSubFilters[e].toJsonObject())}if(b(this.effects)&&(t.distortion=Math.round(100*this.distortion/(n.distortionRange-1)),t.aliases=this.aliases),v(this.effects)&&(t.bitcrusherOctave=(n.bitcrusherFreqRange-1-this.bitcrusherFreq)*n.bitcrusherOctaveStep,t.bitcrusherQuantization=Math.round(100*this.bitcrusherQuantization/(n.bitcrusherQuantizationRange-1))),k(this.effects)&&(t.pan=Math.round(100*(this.pan-n.panCenter)/n.panCenter),t.panDelay=this.panDelay),w(this.effects)&&(t.chorus=Math.round(100*this.chorus/(n.chorusRange-1))),S(this.effects)&&(t.echoSustain=Math.round(100*this.echoSustain/(n.echoSustainRange-1)),t.echoDelayBeats=Math.round(1e3*(this.echoDelay+1)*n.echoDelayStepTicks/(n.ticksPerPart*n.partsPerBeat))/1e3),M(this.effects)&&(t.reverb=Math.round(100*this.reverb/(n.reverbRange-1))),4!=this.type&&(t.fadeInSeconds=Math.round(1e4*Ft.fadeInSettingToSeconds(this.fadeIn))/1e4,t.fadeOutTicks=Ft.fadeOutSettingToTicks(this.fadeOut)),5==this.type||7==this.type){t.harmonics=[];for(let e=0;e<n.harmonicsControlPoints;e++)t.harmonics[e]=Math.round(100*this.harmonicsWave.harmonics[e]/n.harmonicsMax)}if(2==this.type)t.wave=n.chipNoises[this.chipNoise].name;else if(3==this.type){t.spectrum=[];for(let e=0;e<n.spectrumControlPoints;e++)t.spectrum[e]=Math.round(100*this.spectrumWave.spectrum[e]/n.spectrumMax)}else if(4==this.type){t.drums=[];for(let e=0;e<n.drumCount;e++){const i=[];for(let t=0;t<n.spectrumControlPoints;t++)i[t]=Math.round(100*this.drumsetSpectrumWaves[e].spectrum[t]/n.spectrumMax);t.drums[e]={filterEnvelope:this.getDrumsetEnvelope(e).name,spectrum:i}}}else if(0==this.type)t.wave=n.chipWaves[this.chipWave].name,t.unison=n.unisons[this.unison].name;else if(6==this.type)t.pulseWidth=this.pulseWidth;else if(7==this.type)t.unison=n.unisons[this.unison].name,t.stringSustain=Math.round(100*this.stringSustain/(n.stringSustainRange-1));else if(5==this.type)t.unison=n.unisons[this.unison].name;else if(1==this.type||10==this.type){const e=[];for(const t of this.operators)e.push({frequency:n.operatorFrequencies[t.frequency].name,amplitude:t.amplitude,waveform:n.operatorWaves[t.waveform].name,pulseWidth:t.pulseWidth});if(1==this.type)t.algorithm=n.algorithms[this.algorithm].name,t.feedbackType=n.feedbacks[this.feedbackType].name,t.feedbackAmplitude=this.feedbackAmplitude,t.operators=e;else{if(t.algorithm=n.algorithms6Op[this.algorithm6Op].name,t.feedbackType=n.feedbacks6Op[this.feedbackType6Op].name,t.feedbackAmplitude=this.feedbackAmplitude,0==this.algorithm6Op){const e={};e.mods=this.customAlgorithm.modulatedBy,e.carrierCount=this.customAlgorithm.carrierCount,t.customAlgorithm=e}if(0==this.feedbackType6Op){const e={};e.mods=this.customFeedbackType.indices,t.customFeedback=e}t.operators=e}}else if(8==this.type){t.wave=n.chipWaves[this.chipWave].name,t.unison=n.unisons[this.unison].name,t.customChipWave=new Float64Array(64),t.customChipWaveIntegral=new Float64Array(65);for(let e=0;e<this.customChipWave.length;e++)t.customChipWave[e]=this.customChipWave[e]}else{if(9!=this.type)throw new Error("Unrecognized instrument type");t.modChannels=[],t.modInstruments=[],t.modSettings=[],t.modStatuses=[];for(let e=0;e<n.modCount;e++)t.modChannels[e]=this.modChannels[e],t.modInstruments[e]=this.modInstruments[e],t.modSettings[e]=this.modulators[e]}const i=[];for(let t=0;t<this.envelopeCount;t++)i.push(this.envelopes[t].toJsonObject());return t.envelopes=i,t}fromJsonObject(t,e,i,a,r,o=0){null==t&&(t={});let s=n.instrumentTypeNames.indexOf(t.type);if(-1==s&&(s=i?9:e?2:0),this.setTypeAndReset(s,e,i),null!=t.preset&&(this.preset=t.preset>>>0),null!=t.volume?this.volume=at(-n.volumeRange/2,n.volumeRange/2+1,0|t.volume):this.volume=0,Array.isArray(t.effects)){let e=0;for(let i=0;i<t.effects.length;i++)e|=1<<n.effectNames.indexOf(t.effects[i]);this.effects=4095&e}else{const e=["none","reverb","chorus","chorus & reverb"];this.effects=e.indexOf(t.effects),-1==this.effects&&(this.effects=2==this.type?0:1)}this.transition=n.transitions.dictionary.normal.index;const l=t.transition||t.envelope;if(null!=l){let e=n.transitions.dictionary[l];if(null==t.fadeInSeconds||null==t.fadeOutTicks){const t={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[l];null!=t&&(e=n.transitions.dictionary[t.transition],this.fadeIn=Ft.secondsToFadeInSetting(t.fadeInSeconds),this.fadeOut=Ft.ticksToFadeOutSetting(t.fadeOutTicks))}null!=e&&(this.transition=e.index),this.transition!=n.transitions.dictionary.normal.index&&(this.effects=1024|this.effects)}null!=t.fadeInSeconds&&(this.fadeIn=Ft.secondsToFadeInSetting(+t.fadeInSeconds)),null!=t.fadeOutTicks&&(this.fadeOut=Ft.ticksToFadeOutSetting(+t.fadeOutTicks));{const e=t.chord,i={harmony:"simultaneous"},a=n.chords.dictionary[i[e]]||n.chords.dictionary[e];null!=a?this.chord=a.index:2==this.type?this.chord=n.chords.dictionary.arpeggio.index:7==this.type?this.chord=n.chords.dictionary.strum.index:0==this.type?this.chord=n.chords.dictionary.arpeggio.index:1==this.type?this.chord=n.chords.dictionary["custom interval"].index:this.chord=n.chords.dictionary.simultaneous.index}this.unison=n.unisons.dictionary.none.index;const c=t.unison||t.interval||t.chorus;if(null!=c){const t={union:"none",fifths:"fifth",octaves:"octave"},e=n.unisons.dictionary[t[c]]||n.unisons.dictionary[c];null!=e&&(this.unison=e.index)}"custom harmony"==t.chorus&&(this.unison=n.unisons.dictionary.hum.index,this.chord=n.chords.dictionary["custom interval"].index),this.chord==n.chords.dictionary.simultaneous.index||Array.isArray(t.effects)||(this.effects=2048|this.effects),null!=t.pitchShiftSemitones&&(this.pitchShift=at(0,n.pitchShiftRange,Math.round(+t.pitchShiftSemitones))),null!=t.detuneCents&&(this.detune=at(n.detuneMin,n.detuneMax+1,Math.round(Ft.centsToDetune(+t.detuneCents)))),this.vibrato=n.vibratos.dictionary.none.index;const h=t.vibrato||t.effect;if(null!=h){const e={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},i=n.vibratos.dictionary[e[c]]||n.vibratos.dictionary[h];null!=i?this.vibrato=i.index:"custom"==h&&(this.vibrato=n.vibratos.length),this.vibrato==n.vibratos.length?(this.vibratoDepth=t.vibratoDepth,this.vibratoSpeed=t.vibratoSpeed,this.vibratoDelay=t.vibratoDelay,this.vibratoType=t.vibratoType):(this.vibratoDepth=n.vibratos[this.vibrato].amplitude,this.vibratoDelay=n.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=n.vibratos[this.vibrato].type),i!=n.vibratos.dictionary.none&&(this.effects=512|this.effects)}if(null!=t.pan?(this.pan=at(0,n.panMax+1,Math.round(n.panCenter+(0|t.pan)*n.panCenter/100)),this.pan!=n.panCenter&&(this.effects=4|this.effects)):(this.pan=n.panCenter,this.effects=4|this.effects),null!=t.panDelay?this.panDelay=0|t.panDelay:this.panDelay=10,null!=t.detune?this.detune=at(n.detuneMin,n.detuneMax+1,0|t.detune):null==t.detuneCents&&(this.detune=n.detuneCenter),null!=t.distortion&&(this.distortion=at(0,n.distortionRange,Math.round((n.distortionRange-1)*(0|t.distortion)/100))),null!=t.bitcrusherOctave&&(this.bitcrusherFreq=n.bitcrusherFreqRange-1-+t.bitcrusherOctave/n.bitcrusherOctaveStep),null!=t.bitcrusherQuantization&&(this.bitcrusherQuantization=at(0,n.bitcrusherQuantizationRange,Math.round((n.bitcrusherQuantizationRange-1)*(0|t.bitcrusherQuantization)/100))),null!=t.echoSustain&&(this.echoSustain=at(0,n.echoSustainRange,Math.round((n.echoSustainRange-1)*(0|t.echoSustain)/100))),null!=t.echoDelayBeats&&(this.echoDelay=at(0,n.echoDelayRange,Math.round(+t.echoDelayBeats*(n.ticksPerPart*n.partsPerBeat)/n.echoDelayStepTicks-1))),isNaN(t.chorus)||(this.chorus=at(0,n.chorusRange,Math.round((n.chorusRange-1)*(0|t.chorus)/100))),null!=t.reverb?this.reverb=at(0,n.reverbRange,Math.round((n.reverbRange-1)*(0|t.reverb)/100)):this.reverb=o,null!=t.pulseWidth?this.pulseWidth=at(1,n.pulseWidthRange+1,Math.round(t.pulseWidth)):this.pulseWidth=n.pulseWidthRange,null!=t.harmonics)for(let e=0;e<n.harmonicsControlPoints;e++)this.harmonicsWave.harmonics[e]=Math.max(0,Math.min(n.harmonicsMax,Math.round(n.harmonicsMax*+t.harmonics[e]/100)));else this.harmonicsWave.reset();if(null!=t.spectrum)for(let e=0;e<n.spectrumControlPoints;e++)this.spectrumWave.spectrum[e]=Math.max(0,Math.min(n.spectrumMax,Math.round(n.spectrumMax*+t.spectrum[e]/100)));else this.spectrumWave.reset(e);null!=t.stringSustain?this.stringSustain=at(0,n.stringSustainRange,Math.round((n.stringSustainRange-1)*(0|t.stringSustain)/100)):this.stringSustain=10,2==this.type&&(this.chipNoise=n.chipNoises.findIndex((e=>e.name==t.wave)),-1==this.chipNoise&&(this.chipNoise=1));const d={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},p=t=>null!=d[t]?n.envelopes.dictionary[d[t]]:n.envelopes.dictionary[t];if(4==this.type&&null!=t.drums)for(let e=0;e<n.drumCount;e++){const i=t.drums[e];if(null!=i){if(this.drumsetEnvelopes[e]=n.envelopes.dictionary["twang 2"].index,null!=i.filterEnvelope){const t=p(i.filterEnvelope);null!=t&&(this.drumsetEnvelopes[e]=t.index)}if(null!=i.spectrum)for(let t=0;t<n.spectrumControlPoints;t++)this.drumsetSpectrumWaves[e].spectrum[t]=Math.max(0,Math.min(n.spectrumMax,Math.round(n.spectrumMax*+i.spectrum[t]/100)))}}if(0==this.type){const e={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0};this.chipWave=null!=e[t.wave]?e[t.wave]:n.chipWaves.findIndex((e=>e.name==t.wave)),-1==this.chipWave&&(this.chipWave=1)}if(1==this.type||10==this.type){1==this.type?(this.algorithm=n.algorithms.findIndex((e=>e.name==t.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=n.feedbacks.findIndex((e=>e.name==t.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0)):(this.algorithm6Op=n.algorithms6Op.findIndex((e=>e.name==t.algorithm)),-1==this.algorithm6Op&&(this.algorithm6Op=1),0==this.algorithm6Op&&this.customAlgorithm.set(t.customAlgorithm.carrierCount,t.customAlgorithm.mods),this.feedbackType6Op=n.feedbacks6Op.findIndex((e=>e.name==t.feedbackType)),-1==this.feedbackType6Op&&(this.feedbackType6Op=1),0==this.feedbackType6Op&&this.customFeedbackType.set(t.customFeedback.mods)),null!=t.feedbackAmplitude?this.feedbackAmplitude=at(0,n.operatorAmplitudeMax+1,0|t.feedbackAmplitude):this.feedbackAmplitude=0;for(let e=0;e<n.operatorCount;e++){const i=this.operators[e];let a=void 0;null!=t.operators&&(a=t.operators[e]),null==a&&(a={}),i.frequency=n.operatorFrequencies.findIndex((t=>t.name==a.frequency)),-1==i.frequency&&(i.frequency=0),null!=a.amplitude?i.amplitude=at(0,n.operatorAmplitudeMax+1,0|a.amplitude):i.amplitude=0,null!=a.waveform?(i.waveform=n.operatorWaves.findIndex((t=>t.name==a.waveform)),-1==i.waveform&&("square"==a.waveform?(i.waveform=n.operatorWaves.dictionary["pulse width"].index,i.pulseWidth=5):i.waveform=0)):i.waveform=0,null!=a.pulseWidth?i.pulseWidth=0|a.pulseWidth:i.pulseWidth=5}}else if(8==this.type){if(t.customChipWave){for(let e=0;e<64;e++)this.customChipWave[e]=t.customChipWave[e];let e=0;for(let t=0;t<this.customChipWave.length;t++)e+=this.customChipWave[t];const n=e/this.customChipWave.length;let i=0,a=0;for(let t=0;t<this.customChipWave.length;t++)i+=a,a=this.customChipWave[t]-n,this.customChipWaveIntegral[t]=i;this.customChipWaveIntegral[64]=0}}else if(9==this.type&&null!=t.modChannels)for(let e=0;e<n.modCount;e++)this.modChannels[e]=t.modChannels[e],this.modInstruments[e]=t.modInstruments[e],this.modulators[e]=t.modSettings[e];if(9!=this.type){this.chord==n.chords.dictionary.arpeggio.index&&null!=t.arpeggioSpeed?this.arpeggioSpeed=t.arpeggioSpeed:this.arpeggioSpeed=a?9:12,null!=t.fastTwoNoteArp?this.fastTwoNoteArp=t.fastTwoNoteArp:this.fastTwoNoteArp=r,null!=t.clicklessTransition?this.clicklessTransition=t.clicklessTransition:this.clicklessTransition=!1,null!=t.aliases?this.aliases=t.aliases:this.aliases=!1,null!=t.noteFilterType&&(this.noteFilterType=t.noteFilterType),null!=t.noteSimpleCut&&(this.noteFilterSimpleCut=t.noteSimpleCut),null!=t.noteSimplePeak&&(this.noteFilterSimplePeak=t.noteSimplePeak),null!=t.noteFilter?this.noteFilter.fromJsonObject(t.noteFilter):this.noteFilter.reset();for(let e=0;e<n.filterMorphCount;e++)Array.isArray(t["noteSubFilters"+e])&&(this.noteSubFilters[e]=new ut,this.noteSubFilters[e].fromJsonObject(t["noteSubFilters"+e]));if(null!=t.eqFilterType&&(this.eqFilterType=t.eqFilterType),null!=t.eqSimpleCut&&(this.eqFilterSimpleCut=t.eqSimpleCut),null!=t.eqSimplePeak&&(this.eqFilterSimplePeak=t.eqSimplePeak),Array.isArray(t.eqFilter))this.eqFilter.fromJsonObject(t.eqFilter);else{this.eqFilter.reset();const e={},i=8e3,a=11,r=8;if(null!=t.filterCutoffHz?e.filterCutoff=at(0,a,Math.round(a-1+2*Math.log((0|t.filterCutoffHz)/i)/Math.LN2)):e.filterCutoff=0==this.type?6:10,null!=t.filterResonance?e.filterResonance=at(0,r,Math.round((r-1)*(0|t.filterResonance)/100)):e.filterResonance=0,e.filterEnvelope=p(t.filterEnvelope),e.pulseEnvelope=p(t.pulseEnvelope),e.feedbackEnvelope=p(t.feedbackEnvelope),Array.isArray(t.operators)){e.operatorEnvelopes=[];for(let i=0;i<n.operatorCount;i++){let a;null!=t.operators[i]&&(a=p(t.operators[i].envelope)),e.operatorEnvelopes[i]=null!=a?a:n.envelopes.dictionary.none}}if(null!=t.filter){const n=[10,6,3,0,8,5,2],i=["none","none","none","none","decay 1","decay 2","decay 3"],a=["none","bright","medium","soft","decay bright","decay medium","decay soft"],r={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let o=null!=r[t.filter]?r[t.filter]:a.indexOf(t.filter);-1==o&&(o=0),e.filterCutoff=n[o],e.filterEnvelope=p(i[o]),e.filterResonance=0}this.convertLegacySettings(e,!0)}for(let e=0;e<n.filterMorphCount;e++)Array.isArray(t["eqSubFilters"+e])&&(this.eqSubFilters[e]=new ut,this.eqSubFilters[e].fromJsonObject(t["eqSubFilters"+e]));if(Array.isArray(t.envelopes)){const e=t.envelopes;for(let t=0;t<e.length&&!(this.envelopeCount>=n.maxEnvelopeCount);t++){const n=new ft;n.fromJsonObject(e[t]),this.addEnvelope(n.target,n.index,n.envelope)}}}}static frequencyFromPitch(t){return 440*Math.pow(2,(t-69)/12)}static drumsetIndexReferenceDelta(t){return yt.frequencyFromPitch(n.spectrumBasePitch+6*t)/44100}static q(t){return 15+Math.log2(yt.drumsetIndexReferenceDelta(t))}addEnvelope(t,e,i){let a=!1;if(this.supportsEnvelopeTarget(t,e)||(a=!0),this.envelopeCount>=n.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new ft;const r=this.envelopes[this.envelopeCount];r.target=a?n.instrumentAutomationTargets.dictionary.none.index:t,r.index=a?0:e,r.envelope=i,this.envelopeCount++}supportsEnvelopeTarget(t,e){const i=n.instrumentAutomationTargets[t];if(e>=i.maxCount)return!1;if(null!=i.compatibleInstruments&&-1==i.compatibleInstruments.indexOf(this.type))return!1;if(null!=i.effect&&0==(this.effects&1<<i.effect))return!1;if(i.isFilter){let t=this.noteFilter.controlPointCount;if(this.noteFilterType&&(t=1),e>=t)return!1}return!0}clearInvalidEnvelopeTargets(){for(let t=0;t<this.envelopeCount;t++){const e=this.envelopes[t].target,i=this.envelopes[t].index;this.supportsEnvelopeTarget(e,i)||(this.envelopes[t].target=n.instrumentAutomationTargets.dictionary.none.index,this.envelopes[t].index=0)}}warmUp(t){if(this.LFOtime=0,this.nextLFOtime=0,this.arpTime=0,this.tmpEqFilterStart=this.eqFilter,this.tmpEqFilterEnd=null,this.tmpNoteFilterStart=this.noteFilter,this.tmpNoteFilterEnd=null,2==this.type)o(this.chipNoise,U,W);else if(5==this.type)this.harmonicsWave.getCustomWave(this.type);else if(7==this.type)this.harmonicsWave.getCustomWave(this.type);else if(3==this.type)this.spectrumWave.getCustomWave(8);else if(4==this.type)for(let t=0;t<n.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(yt.q(t))}getDrumWave(){if(2==this.type)return o(this.chipNoise,U,W);if(3==this.type)return this.spectrumWave.getCustomWave(8);throw new Error("Unhandled instrument type in getDrumWave")}getDrumsetWave(t){if(4==this.type)return this.drumsetSpectrumWaves[t].getCustomWave(yt.q(t));throw new Error("Unhandled instrument type in getDrumsetWave")}getTransition(){return p(this.effects)?n.transitions[this.transition]:9==this.type?n.transitions.dictionary.interrupt:n.transitions.dictionary.normal}getFadeInSeconds(){return 4==this.type?0:Ft.fadeInSettingToSeconds(this.fadeIn)}getFadeOutTicks(){return 4==this.type?n.drumsetFadeOutTicks:Ft.fadeOutSettingToTicks(this.fadeOut)}getChord(){return m(this.effects)?n.chords[this.chord]:n.chords.dictionary.simultaneous}getDrumsetEnvelope(t){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return n.envelopes[this.drumsetEnvelopes[t]]}}class gt{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class bt{constructor(t){this.scaleCustom=[],this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.getNewNoteVolume=(t,e,i,a)=>{if(t&&null!=e&&null!=i&&null!=a){a=n.modCount-a-1;let t=n.modulators[this.channels[e].instruments[i].modulators[a]].newNoteVol,r=n.modulators.dictionary.tempo.index;return this.channels[e].instruments[i].modulators[a]==r&&(t=this.tempo-n.modulators[r].convertRealFactor),null!=t?t:6}return 6},this.getVolumeCap=(t,e,i,a)=>{if(t&&null!=e&&null!=i&&null!=a){a=n.modCount-a-1;let t=this.channels[e].instruments[i],r=n.modulators[t.modulators[a]],o=r.maxRawVol;return null!=o?("eq filter"!=r.name&&"note filter"!=r.name||(o=n.filterMorphCount-1,t.modFilterTypes[a]>0&&t.modFilterTypes[a]%2?o=n.filterFreqRange:t.modFilterTypes[a]>0&&(o=n.filterGainRange)),o):6}return 6},this.getVolumeCapForSetting=(t,e,i)=>{if(t){let t=n.modulators[e].maxRawVol;return null!=t?(null==i||"eq filter"!=n.modulators[e].name&&"note filter"!=n.modulators[e].name||(t=n.filterMorphCount-1,i>0&&i%2?t=n.filterFreqRange:i>0&&(t=n.filterGainRange)),t):n.noteSizeMax}return n.noteSizeMax},null!=t?this.fromBase64String(t):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?n.layeredInstrumentCountMax:n.instrumentCountMin,this.patternInstruments?n.patternInstrumentCountMax:n.instrumentCountMin)}getMaxInstrumentsPerPattern(t){return this.getMaxInstrumentsPerPatternForChannel(this.channels[t])}getMaxInstrumentsPerPatternForChannel(t){return this.layeredInstruments?Math.min(n.layeredInstrumentCountMax,t.instruments.length):1}getChannelIsNoise(t){return t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(t){return t>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(t=!0){if(this.scale=0,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.title="Unnamed",document.title=$.versionDisplayName,t){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=0;for(let t=0;t<this.getChannelCount();t++){const e=t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount,i=t>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=t&&(this.channels[t]=new gt);const a=this.channels[t];a.octave=Math.max(3-t,0);for(let t=0;t<this.patternsPerChannel;t++)a.patterns.length<=t?a.patterns[t]=new st:a.patterns[t].reset();a.patterns.length=this.patternsPerChannel;for(let t=0;t<n.instrumentCountMin;t++)a.instruments.length<=t&&(a.instruments[t]=new yt(e,i)),a.instruments[t].setTypeAndReset(i?9:e?2:0,e,i);a.instruments.length=n.instrumentCountMin;for(let t=0;t<this.barCount;t++)a.bars[t]=t<4?1:0;a.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let t,e=[];e.push(bt.O),e.push(X[bt.R]),e.push(78);var i=encodeURIComponent(this.title);e.push(X[i.length>>6],X[63&i.length]);for(let t=0;t<i.length;t++)e.push(i.charCodeAt(t));if(e.push(110,X[this.pitchChannelCount],X[this.noiseChannelCount],X[this.modChannelCount]),e.push(115,X[this.scale]),this.scale==n.scales.dictionary.Custom.index)for(var a=1;a<n.pitchesPerOctave;a++)e.push(X[this.scaleCustom[a]?1:0]);e.push(107,X[this.key]),e.push(108,X[this.loopStart>>6],X[63&this.loopStart]),e.push(101,X[this.loopLength-1>>6],X[this.loopLength-1&63]),e.push(116,X[this.tempo>>6],X[63&this.tempo]),e.push(97,X[this.beatsPerBar-1]),e.push(103,X[this.barCount-1>>6],X[this.barCount-1&63]),e.push(106,X[this.patternsPerChannel-1>>6],X[this.patternsPerChannel-1&63]),e.push(114,X[this.rhythm]),e.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(e.push(X[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),e.push(X[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),e.push(X[this.limitDecay]),e.push(X[Math.round((this.limitRise-2e3)/250)]),e.push(X[Math.round(20*this.compressionThreshold)]),e.push(X[Math.round(20*this.limitThreshold)]),e.push(X[Math.round(50*this.masterGain)>>6],X[63&Math.round(50*this.masterGain)])):e.push(X[63]),e.push(85);for(let t=0;t<this.getChannelCount();t++){var r=encodeURIComponent(this.channels[t].name);e.push(X[r.length>>6],X[63&r.length]);for(let t=0;t<r.length;t++)e.push(r.charCodeAt(t))}if(e.push(105,X[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let t=0;t<this.getChannelCount();t++)e.push(X[this.channels[t].instruments.length-n.instrumentCountMin]);e.push(111);for(let t=0;t<this.pitchChannelCount;t++)e.push(X[this.channels[t].octave]);for(let t=0;t<this.getChannelCount();t++)for(let i=0;i<this.channels[t].instruments.length;i++){const a=this.channels[t].instruments[i];if(e.push(84,X[a.type]),e.push(118,X[a.volume+n.volumeRange/2>>6],X[a.volume+n.volumeRange/2&63]),e.push(117,X[a.preset>>6],X[63&a.preset]),e.push(102),e.push(X[+a.eqFilterType]),a.eqFilterType)e.push(X[a.eqFilterSimpleCut]),e.push(X[a.eqFilterSimplePeak]);else{if(null==a.eqFilter)e.push(X[0]),console.log("Null EQ filter settings detected in toBase64String for channelIndex "+t+", instrumentIndex "+i);else{e.push(X[a.eqFilter.controlPointCount]);for(let t=0;t<a.eqFilter.controlPointCount;t++){const n=a.eqFilter.controlPoints[t];e.push(X[n.type],X[Math.round(n.freq)],X[Math.round(n.gain)])}}let r=0;for(let t=0;t<n.filterMorphCount-1;t++)r|=+(null!=a.eqSubFilters[t+1])<<t;e.push(X[r>>6],X[63&r]);for(let t=0;t<n.filterMorphCount-1;t++)if(r&1<<t){e.push(X[a.eqSubFilters[t+1].controlPointCount]);for(let n=0;n<a.eqSubFilters[t+1].controlPointCount;n++){const i=a.eqSubFilters[t+1].controlPoints[n];e.push(X[i.type],X[Math.round(i.freq)],X[Math.round(i.gain)])}}}if(e.push(113,X[a.effects>>6],X[63&a.effects]),g(a.effects))if(e.push(X[+a.noteFilterType]),a.noteFilterType)e.push(X[a.noteFilterSimpleCut]),e.push(X[a.noteFilterSimplePeak]);else{if(null==a.noteFilter)e.push(X[0]),console.log("Null note filter settings detected in toBase64String for channelIndex "+t+", instrumentIndex "+i);else{e.push(X[a.noteFilter.controlPointCount]);for(let t=0;t<a.noteFilter.controlPointCount;t++){const n=a.noteFilter.controlPoints[t];e.push(X[n.type],X[Math.round(n.freq)],X[Math.round(n.gain)])}}let r=0;for(let t=0;t<n.filterMorphCount-1;t++)r|=+(null!=a.noteSubFilters[t+1])<<t;e.push(X[r>>6],X[63&r]);for(let t=0;t<n.filterMorphCount-1;t++)if(r&1<<t){e.push(X[a.noteSubFilters[t+1].controlPointCount]);for(let n=0;n<a.noteSubFilters[t+1].controlPointCount;n++){const i=a.noteSubFilters[t+1].controlPoints[n];e.push(X[i.type],X[Math.round(i.freq)],X[Math.round(i.gain)])}}}if(p(a.effects)&&e.push(X[a.transition]),m(a.effects)&&(e.push(X[a.chord]),a.chord==n.chords.dictionary.arpeggio.index&&(e.push(X[a.arpeggioSpeed]),e.push(X[+a.fastTwoNoteArp]))),u(a.effects)&&e.push(X[a.pitchShift]),f(a.effects)&&e.push(X[a.detune-n.detuneMin>>6],X[a.detune-n.detuneMin&63]),y(a.effects)&&(e.push(X[a.vibrato]),a.vibrato==n.vibratos.length&&(e.push(X[Math.round(25*a.vibratoDepth)]),e.push(X[a.vibratoSpeed]),e.push(X[Math.round(a.vibratoDelay)]),e.push(X[a.vibratoType]))),b(a.effects)&&(e.push(X[a.distortion]),e.push(X[+a.aliases])),v(a.effects)&&e.push(X[a.bitcrusherFreq],X[a.bitcrusherQuantization]),k(a.effects)&&(e.push(X[a.pan>>6],X[63&a.pan]),e.push(X[a.panDelay])),w(a.effects)&&e.push(X[a.chorus]),S(a.effects)&&e.push(X[a.echoSustain],X[a.echoDelay]),M(a.effects)&&e.push(X[a.reverb]),4!=a.type&&(e.push(100,X[a.fadeIn],X[a.fadeOut]),e.push(X[+a.clicklessTransition])),5==a.type||7==a.type){e.push(72);const t=new nt;for(let e=0;e<n.harmonicsControlPoints;e++)t.write(n.harmonicsControlPointBits,a.harmonicsWave.harmonics[e]);t.encodeBase64(e)}if(0==a.type)e.push(119,X[a.chipWave]),e.push(104,X[a.unison]);else if(1==a.type||10==a.type){if(1==a.type)e.push(65,X[a.algorithm]),e.push(70,X[a.feedbackType]);else{if(e.push(65,X[a.algorithm6Op]),0==a.algorithm6Op){e.push(67,X[a.customAlgorithm.carrierCount]),e.push(113);for(let t=0;t<a.customAlgorithm.modulatedBy.length;t++){for(let n=0;n<a.customAlgorithm.modulatedBy[t].length;n++)e.push(X[a.customAlgorithm.modulatedBy[t][n]]);e.push(82)}e.push(113)}if(e.push(70,X[a.feedbackType6Op]),0==a.feedbackType6Op){e.push(113);for(let t=0;t<a.customFeedbackType.indices.length;t++){for(let n=0;n<a.customFeedbackType.indices[t].length;n++)e.push(X[a.customFeedbackType.indices[t][n]]);e.push(82)}e.push(113)}}e.push(66,X[a.feedbackAmplitude]),e.push(81);for(let t=0;t<(10==a.type?6:n.operatorCount);t++)e.push(X[a.operators[t].frequency]);e.push(80);for(let t=0;t<(10==a.type?6:n.operatorCount);t++)e.push(X[a.operators[t].amplitude]);e.push(82);for(let t=0;t<(10==a.type?6:n.operatorCount);t++)e.push(X[a.operators[t].waveform]),2==a.operators[t].waveform&&e.push(X[a.operators[t].pulseWidth])}else if(8==a.type){e.push(119,X[a.chipWave]),e.push(104,X[a.unison]),e.push(77);for(let t=0;t<64;t++)e.push(X[a.customChipWave[t]+24])}else if(2==a.type)e.push(119,X[a.chipNoise]);else if(3==a.type){e.push(83);const t=new nt;for(let e=0;e<n.spectrumControlPoints;e++)t.write(n.spectrumControlPointBits,a.spectrumWave.spectrum[e]);t.encodeBase64(e)}else if(4==a.type){e.push(122);for(let t=0;t<n.drumCount;t++)e.push(X[a.drumsetEnvelopes[t]]);e.push(83);const t=new nt;for(let e=0;e<n.drumCount;e++)for(let i=0;i<n.spectrumControlPoints;i++)t.write(n.spectrumControlPointBits,a.drumsetSpectrumWaves[e].spectrum[i]);t.encodeBase64(e)}else if(5==a.type)e.push(104,X[a.unison]);else if(6==a.type)e.push(87,X[a.pulseWidth]);else if(7==a.type)e.push(104,X[a.unison]),e.push(73,X[a.stringSustain]);else if(9!=a.type)throw new Error("Unknown instrument type.");e.push(69,X[a.envelopeCount]);for(let t=0;t<a.envelopeCount;t++)e.push(X[a.envelopes[t].target]),n.instrumentAutomationTargets[a.envelopes[t].target].maxCount>1&&e.push(X[a.envelopes[t].index]),e.push(X[a.envelopes[t].envelope])}e.push(98),t=new nt;let o=0;for(;1<<o<this.patternsPerChannel+1;)o++;for(let e=0;e<this.getChannelCount();e++)for(let n=0;n<this.barCount;n++)t.write(o,this.channels[e].bars[n]);t.encodeBase64(e),e.push(112),t=new nt;const s=new nt,l=bt.getNeededBits(n.noteSizeMax);for(let e=0;e<this.getChannelCount();e++){const i=this.channels[e],a=this.getMaxInstrumentsPerPattern(e),r=this.getChannelIsNoise(e),o=this.getChannelIsMod(e),c=bt.getNeededBits(a-n.instrumentCountMin),h=bt.getNeededBits(i.instruments.length-1);if(o){const a=bt.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let r=0;r<i.instruments.length;r++){let i=this.channels[e].instruments[r];for(let e=0;e<n.modCount;e++){const r=i.modChannels[e],o=i.modInstruments[e],s=i.modulators[e],l=i.modFilterTypes[e];let c=n.modulators[s].forSong?2:0;s==n.modulators.dictionary.none.index&&(c=3),t.write(2,c),0!=c&&1!=c||(t.write(8,r),t.write(a,o)),3!=c&&t.write(6,s),"eq filter"!=n.modulators[i.modulators[e]].name&&"note filter"!=n.modulators[i.modulators[e]].name||t.write(6,l)}}}const d=r||o?0:i.octave*n.pitchesPerOctave;let p=r?4:d;const m=o?[0,1,2,3,4,5]:r?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],u=[];for(let t=0;t<m.length;t++)m[t]+=d;for(const e of i.patterns){if(this.patternInstruments){const i=rt(n.instrumentCountMin,a,e.instruments.length);t.write(c,i-n.instrumentCountMin);for(let n=0;n<i;n++)t.write(h,e.instruments[n])}if(e.notes.length>0){t.write(1,1);let i=0;for(const n of e.notes){n.start<i&&o&&(t.write(2,0),t.write(1,1),t.writePartDuration(i-n.start)),n.start>i&&(t.write(2,0),o&&t.write(1,0),t.writePartDuration(n.start-i)),s.clear(),1==n.pitches.length?s.write(1,0):(s.write(1,1),s.write(3,n.pitches.length-2)),s.writePinCount(n.pins.length-1),o?s.write(9,n.pins[0].size):s.write(l,n.pins[0].size);let e=0,a=n.pitches[0],r=a;const c=[];for(let t=1;t<n.pins.length;t++){const i=n.pins[t],h=a+i.interval;r!=h?(s.write(1,1),c.push(h),r=h):s.write(1,0),s.writePartDuration(i.time-e),e=i.time,o?s.write(9,i.size):s.write(l,i.size)}const h=String.fromCharCode.apply(null,s.encodeBase64([])),d=u.indexOf(h);-1==d?(t.write(2,1),t.concat(s)):(t.write(1,1),t.writeLongTail(0,0,d),u.splice(d,1)),u.unshift(h),u.length>10&&u.pop();const f=n.pitches.concat(c);for(let e=0;e<f.length;e++){const i=f[e],a=m.indexOf(i);if(-1==a){let e=0,n=p;if(n<i)for(;n!=i;)n++,-1==m.indexOf(n)&&e++;else for(;n!=i;)n--,-1==m.indexOf(n)&&e--;t.write(1,0),t.writePitchInterval(e)}else t.write(1,1),t.write(4,a),m.splice(a,1);m.unshift(i),m.length>16&&m.pop(),p=e==n.pitches.length-1?n.pitches[0]:i}0==n.start&&t.write(1,n.continuesLastPattern?1:0),i=n.end}i<this.beatsPerBar*n.partsPerBeat+ +o&&(t.write(2,0),o&&t.write(1,0),t.writePartDuration(this.beatsPerBar*n.partsPerBeat+ +o-i))}else t.write(1,0)}}let c=t.lengthBase64(),h=[];for(;c>0;)h.unshift(X[63&c]),c>>=6;e.push(X[h.length]),Array.prototype.push.apply(e,h),t.encodeBase64(e);const d=64e3;if(e.length<d)return String.fromCharCode.apply(null,e);{let t="";for(let n=0;n<e.length;n+=d)t+=String.fromCharCode.apply(null,e.slice(n,n+d));return t}}static L(t){return 0==t?t=1:1==t&&(t=0),n.envelopes[at(0,n.envelopes.length,t)]}fromBase64String(t){if(null==t||""==t)return void this.initToDefault(!0);let e=0;for(;t.charCodeAt(e)<=32;)e++;if(35==t.charCodeAt(e)&&e++,123==t.charCodeAt(e))return void this.fromJsonObject(JSON.parse(0==e?t:t.substring(e)));const i=t.charCodeAt(e);let a,r,o;106==i?(a=!1,r=!0,o=!1,e++):103==i?(a=!1,r=!1,o=!0,e++):(a=!0,r=!1,o=!1);const s=tt[t.charCodeAt(e++)];if(a&&(-1==s||s>bt.N||s<bt.H))return;if(r&&(-1==s||s>bt.V||s<bt.$))return;if(o&&(-1==s||s>bt.R||s<bt.W))return;const l=s<2,c=s<3,h=s<4,d=s<5,F=s<6,x=s<7,C=s<8,I=s<9;this.initToDefault(a&&I||r&&d||h&&o);const P=a&&I||r&&d;if(c&&a){for(const t of this.channels)t.instruments[0].transition=n.transitions.dictionary.interrupt.index,t.instruments[0].effects|=1024;this.channels[3].instruments[0].chipNoise=0}let D=null;if(a&&I||r&&d||h&&o){D=[];for(let t=D.length;t<this.getChannelCount();t++){D[t]=[];for(let e=0;e<n.instrumentCountMin;e++)D[t][e]={}}}let A,T=0,E=0,q=-1,O=!1,R=!1;for(;e<t.length;)switch(A=t.charCodeAt(e++)){case 78:var L=(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)];this.title=decodeURIComponent(t.substring(e,e+L)),document.title=this.title+" - "+$.versionDisplayName,e+=L;break;case 110:this.pitchChannelCount=tt[t.charCodeAt(e++)],this.noiseChannelCount=tt[t.charCodeAt(e++)],this.modChannelCount=a||l?0:tt[t.charCodeAt(e++)],this.pitchChannelCount=rt(n.pitchChannelCountMin,n.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=rt(n.noiseChannelCountMin,n.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=rt(n.modChannelCountMin,n.modChannelCountMax,this.modChannelCount);for(let t=this.channels.length;t<this.getChannelCount();t++)this.channels[t]=new gt;if(this.channels.length=this.getChannelCount(),a&&I||r&&d||h&&o)for(let t=D.length;t<this.getChannelCount();t++){D[t]=[];for(let e=0;e<n.instrumentCountMin;e++)D[t][e]={}}break;case 115:if(this.scale=tt[t.charCodeAt(e++)],this.scale==n.scales.dictionary.Custom.index)for(var N=1;N<n.pitchesPerOctave;N++)this.scaleCustom[N]=1==tt[t.charCodeAt(e++)];a&&(this.scale=0);break;case 107:this.key=at(0,n.keys.length,x&&a?11-tt[t.charCodeAt(e++)]:tt[t.charCodeAt(e++)]);break;case 108:this.loopStart=d&&a?tt[t.charCodeAt(e++)]:(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)];break;case 101:this.loopLength=d&&a?tt[t.charCodeAt(e++)]:(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)]+1;break;case 116:this.tempo=h&&a?[95,120,151,190][tt[t.charCodeAt(e++)]]:x&&a?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][tt[t.charCodeAt(e++)]]:tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)],this.tempo=at(n.tempoMin,n.tempoMax+1,this.tempo);break;case 109:I&&a?(T=12*tt[t.charCodeAt(e++)],T=at(0,n.reverbRange,T)):(r&&d||h&&o)&&(T=tt[t.charCodeAt(e++)],T=at(0,n.reverbRange,T));break;case 97:this.beatsPerBar=c&&a?[6,7,8,9,10][tt[t.charCodeAt(e++)]]:tt[t.charCodeAt(e++)]+1,this.beatsPerBar=Math.max(n.beatsPerBarMin,Math.min(n.beatsPerBarMax,this.beatsPerBar));break;case 103:{const i=(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)]+1;this.barCount=rt(n.barCountMin,n.barCountMax,i);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].bars.length;e<this.barCount;e++)this.channels[t].bars[e]=e<4?1:0;this.channels[t].bars.length=this.barCount}}break;case 106:{let i;i=C&&a?tt[t.charCodeAt(e++)]+1:(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)]+1,this.patternsPerChannel=rt(1,n.barCountMax,i);const r=this.getChannelCount();for(let t=0;t<r;t++){const e=this.channels[t].patterns;for(let t=e.length;t<this.patternsPerChannel;t++)e[t]=new st;e.length=this.patternsPerChannel}}break;case 105:if(I&&a||r&&d||h&&o){const i=rt(n.instrumentCountMin,n.patternInstrumentCountMax,tt[t.charCodeAt(e++)]+n.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=i>1;for(let t=0;t<this.getChannelCount();t++){const e=t>=this.pitchChannelCount&&t<this.pitchChannelCount+this.noiseChannelCount,n=t>=this.pitchChannelCount+this.noiseChannelCount;for(let a=this.channels[t].instruments.length;a<i;a++)this.channels[t].instruments[a]=new yt(e,n);if(this.channels[t].instruments.length=i,F&&a)for(let a=0;a<i;a++)this.channels[t].instruments[a].setTypeAndReset(e?2:0,e,n);for(let e=D[t].length;e<i;e++)D[t][e]={}}}else{const i=tt[t.charCodeAt(e++)];this.layeredInstruments=0!=(2&i),this.patternInstruments=0!=(1&i);for(let i=0;i<this.getChannelCount();i++){let a=1;(this.layeredInstruments||this.patternInstruments)&&(a=rt(n.instrumentCountMin,this.getMaxInstrumentsPerChannel(),tt[t.charCodeAt(e++)]+n.instrumentCountMin));const r=this.channels[i],o=this.getChannelIsNoise(i),s=this.getChannelIsMod(i);for(let t=r.instruments.length;t<a;t++)r.instruments[t]=new yt(o,s);r.instruments.length=a}}break;case 114:this.rhythm=tt[t.charCodeAt(e++)],(r&&c||a)&&(this.rhythm!=n.rhythms.dictionary["÷3 (triplets)"].index&&this.rhythm!=n.rhythms.dictionary["÷6"].index||(O=!0),this.rhythm>=n.rhythms.dictionary["÷6"].index&&(R=!0));break;case 111:if(c&&a){const i=tt[t.charCodeAt(e++)];this.channels[i].octave=at(0,n.pitchOctaves,tt[t.charCodeAt(e++)]+1),i>=this.pitchChannelCount&&(this.channels[i].octave=0)}else if(I&&a||r&&d||h&&o)for(let i=0;i<this.getChannelCount();i++)this.channels[i].octave=at(0,n.pitchOctaves,tt[t.charCodeAt(e++)]+1),i>=this.pitchChannelCount&&(this.channels[i].octave=0);else for(let i=0;i<this.pitchChannelCount;i++)this.channels[i].octave=at(0,n.pitchOctaves,tt[t.charCodeAt(e++)]);break;case 84:{q++,q>=this.channels[E].instruments.length&&(E++,q=0),rt(0,this.channels.length-1,E);const i=this.channels[E].instruments[q];let s=rt(0,10,tt[t.charCodeAt(e++)]);(r&&d||h&&o)&&(7==s?s=8:8==s&&(s=9)),i.setTypeAndReset(s,E>=this.pitchChannelCount&&E<this.pitchChannelCount+this.noiseChannelCount,E>=this.pitchChannelCount+this.noiseChannelCount),!(x&&a||l&&r)||0!=s&&8!=s&&6!=s||(i.aliases=!0),O&&(i.arpeggioSpeed=9),R&&(i.fastTwoNoteArp=!0),x&&a&&(i.effects=0,i.chord!=n.chords.dictionary.simultaneous.index&&(i.effects|=2048))}break;case 117:{const n=tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)];this.channels[E].instruments[q].preset=n,(r&&d||h&&o)&&7==this.channels[E].instruments[q].preset&&(this.channels[E].instruments[q].preset=8)}break;case 119:if(c&&a){const i=[1,2,3,4,5,6,7,8,0],a=tt[t.charCodeAt(e++)],r=this.channels[a].instruments[0];r.chipWave=at(0,n.chipWaves.length,0|i[tt[t.charCodeAt(e++)]]),r.convertLegacySettings(D[a][0],P)}else if(F&&a){const i=[1,2,3,4,5,6,7,8,0];for(let a=0;a<this.getChannelCount();a++)for(const r of this.channels[a].instruments)a>=this.pitchChannelCount?r.chipNoise=at(0,n.chipNoises.length,tt[t.charCodeAt(e++)]):r.chipWave=at(0,n.chipWaves.length,0|i[tt[t.charCodeAt(e++)]])}else if(x&&a){const i=[1,2,3,4,5,6,7,8,0];E>=this.pitchChannelCount?this.channels[E].instruments[q].chipNoise=at(0,n.chipNoises.length,tt[t.charCodeAt(e++)]):this.channels[E].instruments[q].chipWave=at(0,n.chipWaves.length,0|i[tt[t.charCodeAt(e++)]])}else E>=this.pitchChannelCount?this.channels[E].instruments[q].chipNoise=at(0,n.chipNoises.length,tt[t.charCodeAt(e++)]):this.channels[E].instruments[q].chipWave=at(0,n.chipWaves.length,tt[t.charCodeAt(e++)]);break;case 102:if(I&&a||d&&r||h&&o)if(x&&a){const i=[10,6,3,0,8,5,2],r=["none","none","none","none","decay 1","decay 2","decay 3"];if(c&&a){const a=tt[t.charCodeAt(e++)],o=this.channels[a].instruments[0],s=D[a][0],l=[1,3,4,5][at(0,i.length,tt[t.charCodeAt(e++)])];s.filterCutoff=i[l],s.filterResonance=0,s.filterEnvelope=n.envelopes.dictionary[r[l]],o.convertLegacySettings(s,P)}else if(F&&a)for(let a=0;a<this.getChannelCount();a++)for(let o=0;o<this.channels[a].instruments.length;o++){const s=this.channels[a].instruments[o],l=D[a][o],c=at(0,i.length,tt[t.charCodeAt(e++)]+1);a<this.pitchChannelCount?(l.filterCutoff=i[c],l.filterResonance=0,l.filterEnvelope=n.envelopes.dictionary[r[c]]):(l.filterCutoff=10,l.filterResonance=0,l.filterEnvelope=n.envelopes.dictionary.none),s.convertLegacySettings(l,P)}else{const n=at(0,i.length,tt[t.charCodeAt(e++)]),a=this.channels[E].instruments[q],r=D[E][q];r.filterCutoff=i[n],r.filterResonance=0,a.convertLegacySettings(r,P)}}else{const n=11,i=this.channels[E].instruments[q],a=D[E][q];a.filterCutoff=at(0,n,tt[t.charCodeAt(e++)]),i.convertLegacySettings(a,P)}else{const i=this.channels[E].instruments[q];let s=tt[t.charCodeAt(e++)];if(a||0==s){i.eqFilterType=!1,(r||o)&&(s=tt[t.charCodeAt(e++)]);const a=s;i.eqFilter.controlPointCount=at(0,n.filterMaxPoints+1,a);for(let t=i.eqFilter.controlPoints.length;t<i.eqFilter.controlPointCount;t++)i.eqFilter.controlPoints[t]=new mt;for(let a=0;a<i.eqFilter.controlPointCount;a++){const r=i.eqFilter.controlPoints[a];r.type=at(0,3,tt[t.charCodeAt(e++)]),r.freq=at(0,n.filterFreqRange,tt[t.charCodeAt(e++)]),r.gain=at(0,n.filterGainRange,tt[t.charCodeAt(e++)])}for(let t=i.eqFilter.controlPointCount;t<a;t++)e+=3;if(i.eqSubFilters[0]=i.eqFilter,r&&!d||o&&!h){let a=tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)];for(let r=0;r<n.filterMorphCount-1;r++)if(a&1<<r){const a=tt[t.charCodeAt(e++)];null==i.eqSubFilters[r+1]&&(i.eqSubFilters[r+1]=new ut),i.eqSubFilters[r+1].controlPointCount=at(0,n.filterMaxPoints+1,a);for(let t=i.eqSubFilters[r+1].controlPoints.length;t<i.eqSubFilters[r+1].controlPointCount;t++)i.eqSubFilters[r+1].controlPoints[t]=new mt;for(let a=0;a<i.eqSubFilters[r+1].controlPointCount;a++){const o=i.eqSubFilters[r+1].controlPoints[a];o.type=at(0,3,tt[t.charCodeAt(e++)]),o.freq=at(0,n.filterFreqRange,tt[t.charCodeAt(e++)]),o.gain=at(0,n.filterGainRange,tt[t.charCodeAt(e++)])}for(let t=i.eqSubFilters[r+1].controlPointCount;t<a;t++)e+=3}}}else i.eqFilterType=!0,i.eqFilterSimpleCut=at(0,n.filterSimpleCutRange,tt[t.charCodeAt(e++)]),i.eqFilterSimplePeak=at(0,n.filterSimplePeakRange,tt[t.charCodeAt(e++)])}break;case 121:if(I&&a||r&&d||h&&o){const n=8,i=this.channels[E].instruments[q],a=D[E][q];a.filterResonance=at(0,n,tt[t.charCodeAt(e++)]),i.convertLegacySettings(a,P)}break;case 122:{const i=this.channels[E].instruments[q],s=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(I&&a||d&&r||h&&o)if(4==i.type)for(let a=0;a<n.drumCount;a++){let n=tt[t.charCodeAt(e++)];(l&&o||!o)&&(n=s[n]),i.drumsetEnvelopes[a]=bt.L(n).index}else{const n=D[E][q];let a=tt[t.charCodeAt(e++)];(l&&o||!o)&&(a=s[a]),n.filterEnvelope=bt.L(a),i.convertLegacySettings(n,P)}else for(let a=0;a<n.drumCount;a++){let r=tt[t.charCodeAt(e++)];(l&&o||!o)&&(r=s[r]),i.drumsetEnvelopes[a]=at(0,n.envelopes.length,r)}}break;case 87:{const i=this.channels[E].instruments[q];if(i.pulseWidth=at(0,n.pulseWidthRange+ +r,tt[t.charCodeAt(e++)]),a&&(i.pulseWidth=Math.round(Math.pow(.5,(7-i.pulseWidth)*n.pulseWidthStepPower)*n.pulseWidthRange)),I&&a||d&&r||h&&o){const n=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],a=D[E][q];let r=tt[t.charCodeAt(e++)];(l&&o||!o)&&(r=n[r]),a.pulseEnvelope=bt.L(r),i.convertLegacySettings(a,P)}}break;case 73:this.channels[E].instruments[q].stringSustain=at(0,n.stringSustainRange,tt[t.charCodeAt(e++)]);break;case 100:if(I&&a||r&&d||h&&o){const i=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(c&&a){const a=tt[t.charCodeAt(e++)],r=i[at(0,i.length,tt[t.charCodeAt(e++)])],o=this.channels[a].instruments[0];o.fadeIn=Ft.secondsToFadeInSetting(r.fadeInSeconds),o.fadeOut=Ft.ticksToFadeOutSetting(r.fadeOutTicks),o.transition=n.transitions.dictionary[r.transition].index,o.transition!=n.transitions.dictionary.normal.index&&(o.effects|=1024)}else if(F&&a)for(let a=0;a<this.getChannelCount();a++)for(const r of this.channels[a].instruments){const a=i[at(0,i.length,tt[t.charCodeAt(e++)])];r.fadeIn=Ft.secondsToFadeInSetting(a.fadeInSeconds),r.fadeOut=Ft.ticksToFadeOutSetting(a.fadeOutTicks),r.transition=n.transitions.dictionary[a.transition].index,r.transition!=n.transitions.dictionary.normal.index&&(r.effects|=1024)}else if(h&&!o||a){const a=i[at(0,i.length,tt[t.charCodeAt(e++)])],r=this.channels[E].instruments[q];r.fadeIn=Ft.secondsToFadeInSetting(a.fadeInSeconds),r.fadeOut=Ft.ticksToFadeOutSetting(a.fadeOutTicks),r.transition=n.transitions.dictionary[a.transition].index,r.transition!=n.transitions.dictionary.normal.index&&(r.effects|=1024)}else{const a=i[at(0,i.length,tt[t.charCodeAt(e++)])],r=this.channels[E].instruments[q];r.fadeIn=Ft.secondsToFadeInSetting(a.fadeInSeconds),r.fadeOut=Ft.ticksToFadeOutSetting(a.fadeOutTicks),r.transition=n.transitions.dictionary[a.transition].index,tt[t.charCodeAt(e++)]>0&&(r.legacyTieOver=!0),r.clicklessTransition=!!tt[t.charCodeAt(e++)],(r.transition!=n.transitions.dictionary.normal.index||r.clicklessTransition)&&(r.effects|=1024)}}else{const i=this.channels[E].instruments[q];i.fadeIn=at(0,n.fadeInRange,tt[t.charCodeAt(e++)]),i.fadeOut=at(0,n.fadeOutTicks.length,tt[t.charCodeAt(e++)]),(r||o)&&(i.clicklessTransition=!!tt[t.charCodeAt(e++)])}break;case 99:if(I&&a||r&&d||h&&o)if(x&&a)if(c&&a){const i=[0,3,2,0],a=["none","none","none","tremolo2"],r=tt[t.charCodeAt(e++)],o=at(0,i.length,tt[t.charCodeAt(e++)]),s=this.channels[r].instruments[0],l=D[r][0];s.vibrato=i[o],null!=l.filterEnvelope&&1!=l.filterEnvelope.type||(l.filterEnvelope=n.envelopes.dictionary[a[o]],s.convertLegacySettings(l,P)),s.vibrato!=n.vibratos.dictionary.none.index&&(s.effects|=512)}else if(F&&a){const i=[0,1,2,3,0,0],a=["none","none","none","none","tremolo5","tremolo2"];for(let s=0;s<this.getChannelCount();s++)for(let l=0;l<this.channels[s].instruments.length;l++){const c=at(0,i.length,tt[t.charCodeAt(e++)]),p=this.channels[s].instruments[l],m=D[s][l];p.vibrato=i[c],null!=m.filterEnvelope&&1!=m.filterEnvelope.type||(m.filterEnvelope=n.envelopes.dictionary[a[c]],p.convertLegacySettings(m,P)),p.vibrato!=n.vibratos.dictionary.none.index&&(p.effects|=512),(0!=T||r&&d||h&&o)&&!this.getChannelIsNoise(s)&&(p.effects|=1,p.reverb=T)}}else{const i=[0,1,2,3,0,0],a=["none","none","none","none","tremolo5","tremolo2"],s=at(0,i.length,tt[t.charCodeAt(e++)]),l=this.channels[E].instruments[q],c=D[E][q];l.vibrato=i[s],null!=c.filterEnvelope&&1!=c.filterEnvelope.type||(c.filterEnvelope=n.envelopes.dictionary[a[s]],l.convertLegacySettings(c,P)),l.vibrato!=n.vibratos.dictionary.none.index&&(l.effects|=512),(0!=T||r&&d||h&&o)&&(l.effects|=1,l.reverb=T)}else{const i=this.channels[E].instruments[q],a=at(0,n.vibratos.length+1,tt[t.charCodeAt(e++)]);i.vibrato=a,i.vibrato!=n.vibratos.dictionary.none.index&&(i.effects|=512),a==n.vibratos.length?(i.vibratoDepth=at(0,n.modulators.dictionary["vibrato depth"].maxRawVol+1,tt[t.charCodeAt(e++)])/25,i.vibratoSpeed=at(0,n.modulators.dictionary["vibrato speed"].maxRawVol+1,tt[t.charCodeAt(e++)]),i.vibratoDelay=at(0,n.modulators.dictionary["vibrato delay"].maxRawVol+1,tt[t.charCodeAt(e++)])/2,i.vibratoType=at(0,n.vibratoTypes.length,tt[t.charCodeAt(e++)]),i.effects|=512):(i.vibratoDepth=n.vibratos[i.vibrato].amplitude,i.vibratoSpeed=10,i.vibratoDelay=n.vibratos[i.vibrato].delayTicks/2,i.vibratoType=n.vibratos[i.vibrato].type)}break;case 71:if(r&&d||h&&o){const i=this.channels[E].instruments[q];i.arpeggioSpeed=at(0,n.modulators.dictionary["arp speed"].maxRawVol+1,tt[t.charCodeAt(e++)]),i.fastTwoNoteArp=!!tt[t.charCodeAt(e++)]}break;case 104:if(c&&a){const i=tt[t.charCodeAt(e++)];this.channels[i].instruments[0].unison=at(0,n.unisons.length,tt[t.charCodeAt(e++)])}else if(F&&a)for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments){const i=tt[t.charCodeAt(e++)];let r=at(0,n.unisons.length,i);8==i&&(r=2,a.chord=3),a.unison=r}else if(x&&a){const i=tt[t.charCodeAt(e++)];let a=at(0,n.unisons.length,i);8==i&&(a=2,this.channels[E].instruments[q].chord=3),this.channels[E].instruments[q].unison=a}else this.channels[E].instruments[q].unison=at(0,n.unisons.length,tt[t.charCodeAt(e++)]);break;case 67:if(I&&a||r&&d||h&&o){const i=this.channels[E].instruments[q];i.chord=at(0,n.chords.length,tt[t.charCodeAt(e++)]),i.chord!=n.chords.dictionary.simultaneous.index&&(i.effects|=2048)}break;case 113:{const i=this.channels[E].instruments[q];if(I&&a||r&&d||h&&o){i.effects=4095&tt[t.charCodeAt(e++)],0!=T||r&&d||h&&o?M(i.effects)&&(i.reverb=T):i.effects&=-2,i.effects|=4,i.vibrato!=n.vibratos.dictionary.none.index&&(i.effects|=512),i.detune!=n.detuneCenter&&(i.effects|=256),i.effects&=-9;const a=D[E][q];i.convertLegacySettings(a,P)}else{if(i.effects=tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)],g(i.effects)){let s=tt[t.charCodeAt(e++)];if(a||0==s){i.noteFilterType=!1,(r||o)&&(s=tt[t.charCodeAt(e++)]),i.noteFilter.controlPointCount=at(0,n.filterMaxPoints+1,s);for(let t=i.noteFilter.controlPoints.length;t<i.noteFilter.controlPointCount;t++)i.noteFilter.controlPoints[t]=new mt;for(let a=0;a<i.noteFilter.controlPointCount;a++){const r=i.noteFilter.controlPoints[a];r.type=at(0,3,tt[t.charCodeAt(e++)]),r.freq=at(0,n.filterFreqRange,tt[t.charCodeAt(e++)]),r.gain=at(0,n.filterGainRange,tt[t.charCodeAt(e++)])}for(let t=i.noteFilter.controlPointCount;t<s;t++)e+=3;if(i.noteSubFilters[0]=i.noteFilter,r&&!d||o){let a=tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)];for(let r=0;r<n.filterMorphCount-1;r++)if(a&1<<r){const a=tt[t.charCodeAt(e++)];null==i.noteSubFilters[r+1]&&(i.noteSubFilters[r+1]=new ut),i.noteSubFilters[r+1].controlPointCount=at(0,n.filterMaxPoints+1,a);for(let t=i.noteSubFilters[r+1].controlPoints.length;t<i.noteSubFilters[r+1].controlPointCount;t++)i.noteSubFilters[r+1].controlPoints[t]=new mt;for(let a=0;a<i.noteSubFilters[r+1].controlPointCount;a++){const o=i.noteSubFilters[r+1].controlPoints[a];o.type=at(0,3,tt[t.charCodeAt(e++)]),o.freq=at(0,n.filterFreqRange,tt[t.charCodeAt(e++)]),o.gain=at(0,n.filterGainRange,tt[t.charCodeAt(e++)])}for(let t=i.noteSubFilters[r+1].controlPointCount;t<a;t++)e+=3}}}else i.noteFilterType=!0,i.noteFilter.reset(),i.noteFilterSimpleCut=at(0,n.filterSimpleCutRange,tt[t.charCodeAt(e++)]),i.noteFilterSimplePeak=at(0,n.filterSimplePeakRange,tt[t.charCodeAt(e++)])}p(i.effects)&&(i.transition=at(0,n.transitions.length,tt[t.charCodeAt(e++)])),m(i.effects)&&(i.chord=at(0,n.chords.length,tt[t.charCodeAt(e++)]),i.chord==n.chords.dictionary.arpeggio.index&&(r||o)&&(i.arpeggioSpeed=tt[t.charCodeAt(e++)],i.fastTwoNoteArp=!!tt[t.charCodeAt(e++)])),u(i.effects)&&(i.pitchShift=at(0,n.pitchShiftRange,tt[t.charCodeAt(e++)])),f(i.effects)&&(a?(i.detune=at(n.detuneMin,n.detuneMax+1,tt[t.charCodeAt(e++)]),i.detune=Math.round((i.detune-9)*(Math.abs(i.detune-9)+1)/2+n.detuneCenter)):i.detune=at(n.detuneMin,n.detuneMax+1,(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)])),y(i.effects)&&(i.vibrato=at(0,n.vibratos.length+1,tt[t.charCodeAt(e++)]),i.vibrato==n.vibratos.length&&(r||o)?(i.vibratoDepth=at(0,n.modulators.dictionary["vibrato depth"].maxRawVol+1,tt[t.charCodeAt(e++)])/25,i.vibratoSpeed=at(0,n.modulators.dictionary["vibrato speed"].maxRawVol+1,tt[t.charCodeAt(e++)]),i.vibratoDelay=at(0,n.modulators.dictionary["vibrato delay"].maxRawVol+1,tt[t.charCodeAt(e++)]),i.vibratoType=at(0,n.vibratoTypes.length,tt[t.charCodeAt(e++)])):(i.vibratoDepth=n.vibratos[i.vibrato].amplitude,i.vibratoSpeed=10,i.vibratoDelay=n.vibratos[i.vibrato].delayTicks/2,i.vibratoType=n.vibratos[i.vibrato].type)),b(i.effects)&&(i.distortion=at(0,n.distortionRange,tt[t.charCodeAt(e++)]),(r&&!d||o)&&(i.aliases=!!tt[t.charCodeAt(e++)])),v(i.effects)&&(i.bitcrusherFreq=at(0,n.bitcrusherFreqRange,tt[t.charCodeAt(e++)]),i.bitcrusherQuantization=at(0,n.bitcrusherQuantizationRange,tt[t.charCodeAt(e++)])),k(i.effects)&&(i.pan=at(0,n.panMax+1,a?Math.round(tt[t.charCodeAt(e++)]*(n.panMax/8)):(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)]),(r&&!l||o)&&(i.panDelay=tt[t.charCodeAt(e++)])),w(i.effects)&&(i.chorus=a?2*at(0,n.chorusRange/2+1,tt[t.charCodeAt(e++)]):at(0,n.chorusRange,tt[t.charCodeAt(e++)])),S(i.effects)&&(i.echoSustain=at(0,n.echoSustainRange,tt[t.charCodeAt(e++)]),i.echoDelay=at(0,n.echoDelayRange,tt[t.charCodeAt(e++)])),M(i.effects)&&(i.reverb=at(0,n.reverbRange,a?Math.round(tt[t.charCodeAt(e++)]*n.reverbRange/3):tt[t.charCodeAt(e++)]))}i.effects&=4095}break;case 118:if(c&&a){const i=tt[t.charCodeAt(e++)];this.channels[i].instruments[0].volume=Math.round(at(-n.volumeRange/2,1,5*-tt[t.charCodeAt(e++)]))}else if(F&&a)for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments)a.volume=Math.round(at(-n.volumeRange/2,1,5*-tt[t.charCodeAt(e++)]));else if(x&&a){this.channels[E].instruments[q].volume=Math.round(at(-n.volumeRange/2,1,5*-tt[t.charCodeAt(e++)]))}else if(a){this.channels[E].instruments[q].volume=Math.round(at(-n.volumeRange/2,1,25*-tt[t.charCodeAt(e++)]/7))}else{this.channels[E].instruments[q].volume=Math.round(at(-n.volumeRange/2,n.volumeRange/2+1,(tt[t.charCodeAt(e++)]<<6|tt[t.charCodeAt(e++)])-n.volumeRange/2))}break;case 76:if(I&&a){this.channels[E].instruments[q].pan=at(0,n.panMax+1,tt[t.charCodeAt(e++)]*(n.panMax/8))}else if(r&&d||h&&o){const i=this.channels[E].instruments[q];i.pan=at(0,n.panMax+1,(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)]),(r&&!c||o)&&(i.panDelay=tt[t.charCodeAt(e++)])}break;case 68:{const i=this.channels[E].instruments[q];(r&&d||h&&o)&&(i.detune=at(n.detuneMin,n.detuneMax+1,4*((tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)])),i.effects|=256)}break;case 77:{let n=this.channels[E].instruments[q];for(let i=0;i<64;i++)n.customChipWave[i]=at(-24,25,tt[t.charCodeAt(e++)]-24);let i=0;for(let t=0;t<n.customChipWave.length;t++)i+=n.customChipWave[t];const a=i/n.customChipWave.length;let r=0,o=0;for(let t=0;t<n.customChipWave.length;t++)r+=o,o=n.customChipWave[t]-a,n.customChipWaveIntegral[t]=r;n.customChipWaveIntegral[64]=0}break;case 79:{let n=tt[t.charCodeAt(e++)];63==n?this.restoreLimiterDefaults():(this.compressionRatio=n<10?n/10:1+(n-10)/60,n=tt[t.charCodeAt(e++)],this.limitRatio=n<10?n/10:n-9,this.limitDecay=tt[t.charCodeAt(e++)],this.limitRise=250*tt[t.charCodeAt(e++)]+2e3,this.compressionThreshold=tt[t.charCodeAt(e++)]/20,this.limitThreshold=tt[t.charCodeAt(e++)]/20,this.masterGain=((tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)])/50)}break;case 85:for(let n=0;n<this.getChannelCount();n++){var z;z=h&&!o?tt[t.charCodeAt(e++)]:(tt[t.charCodeAt(e++)]<<6)+tt[t.charCodeAt(e++)],this.channels[n].name=decodeURIComponent(t.substring(e,e+z)),e+=z}break;case 65:{const i=this.channels[E].instruments[q];if(1==i.type)i.algorithm=at(0,n.algorithms.length,tt[t.charCodeAt(e++)]);else if(i.algorithm6Op=at(0,n.algorithms6Op.length,tt[t.charCodeAt(e++)]),i.customAlgorithm.fromPreset(i.algorithm6Op),67==t.charCodeAt(e)){let a=at(0,n.operatorCount+2,tt[t.charCodeAt(e+1)]);e++,console.log(a);let r=[];if(113==t.charCodeAt(e+1)){e++;let o=0;for(e++;113!=t.charCodeAt(e);){r[o]=[];let i=0;for(;82!=t.charCodeAt(e);)r[o][i]=at(1,n.operatorCount+3,tt[t.charCodeAt(e)]),i++,e++;o++,e++}i.customAlgorithm.set(a,r),e++}}if(I&&a||d&&r||h&&o){const t=D[E][q];i.convertLegacySettings(t,P)}}break;case 70:{const i=this.channels[E].instruments[q];if(1==i.type)i.feedbackType=at(0,n.feedbacks.length,tt[t.charCodeAt(e++)]);else{i.feedbackType6Op=at(0,n.feedbacks6Op.length,tt[t.charCodeAt(e++)]),i.customFeedbackType.fromPreset(i.feedbackType6Op);let a=[];if(113==t.charCodeAt(e)){let r=0;for(e++;113!=t.charCodeAt(e);){a[r]=[];let i=0;for(;82!=t.charCodeAt(e);)a[r][i]=at(1,n.operatorCount+2,tt[t.charCodeAt(e)]),i++,e++;r++,e++}i.customFeedbackType.set(a),e++}}}break;case 66:this.channels[E].instruments[q].feedbackAmplitude=at(0,n.operatorAmplitudeMax+1,tt[t.charCodeAt(e++)]);break;case 86:if(I&&a||d&&r||h&&o){const n=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],i=this.channels[E].instruments[q],a=D[E][q];let r=tt[t.charCodeAt(e++)];(l&&o||!o)&&(r=n[r]),a.feedbackEnvelope=bt.L(tt[r]),i.convertLegacySettings(a,P)}break;case 81:{const i=this.channels[E].instruments[q];if(c&&o||!o){const a=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let r=0;r<(10==i.type?6:n.operatorCount);r++)i.operators[r].frequency=a[at(0,a.length,tt[t.charCodeAt(e++)])]}else for(let a=0;a<(10==i.type?6:n.operatorCount);a++)i.operators[a].frequency=at(0,n.operatorFrequencies.length,tt[t.charCodeAt(e++)])}break;case 80:{const i=this.channels[E].instruments[q];for(let a=0;a<(10==i.type?6:n.operatorCount);a++)i.operators[a].amplitude=at(0,n.operatorAmplitudeMax+1,tt[t.charCodeAt(e++)])}break;case 69:{const i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],s=this.channels[E].instruments[q];if(I&&a||d&&r||h&&o){const a=D[E][q];a.operatorEnvelopes=[];for(let r=0;r<(10==s.type?6:n.operatorCount);r++){let n=tt[t.charCodeAt(e++)];(l&&o||!o)&&(n=i[n]),a.operatorEnvelopes[r]=bt.L(n)}s.convertLegacySettings(a,P)}else{const a=at(0,n.maxEnvelopeCount+1,tt[t.charCodeAt(e++)]);for(let r=0;r<a;r++){const a=at(0,n.instrumentAutomationTargets.length,tt[t.charCodeAt(e++)]);let r=0;const c=n.instrumentAutomationTargets[a].maxCount;c>1&&(r=at(0,c,tt[t.charCodeAt(e++)]));let h=tt[t.charCodeAt(e++)];(l&&o||!o)&&(h=i[h]);const d=at(0,n.envelopes.length,h);s.addEnvelope(a,r,d)}}}break;case 82:{const i=this.channels[E].instruments[q];if(c&&o)for(let a=0;a<n.operatorCount;a++){const n=[0,1,3,2,2,2,4,5],r=at(0,n.length,tt[t.charCodeAt(e++)]);3==r?i.operators[a].pulseWidth=5:4==r?i.operators[a].pulseWidth=4:5==r&&(i.operators[a].pulseWidth=6),i.operators[a].waveform=n[r]}else for(let a=0;a<(10==i.type?6:n.operatorCount);a++){if(r){const r=[0,1,3,2,4,5];i.operators[a].waveform=r[at(0,n.operatorWaves.length,tt[t.charCodeAt(e++)])]}else i.operators[a].waveform=at(0,n.operatorWaves.length,tt[t.charCodeAt(e++)]);2==i.operators[a].waveform&&(i.operators[a].pulseWidth=at(0,n.pwmOperatorWaves.length,tt[t.charCodeAt(e++)]))}}break;case 83:{const i=this.channels[E].instruments[q];if(3==i.type){const a=Math.ceil(n.spectrumControlPoints*n.spectrumControlPointBits/6),r=new et(t,e,e+a);for(let t=0;t<n.spectrumControlPoints;t++)i.spectrumWave.spectrum[t]=r.read(n.spectrumControlPointBits);i.spectrumWave.markCustomWaveDirty(),e+=a}else{if(4!=i.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const a=Math.ceil(n.drumCount*n.spectrumControlPoints*n.spectrumControlPointBits/6),r=new et(t,e,e+a);for(let t=0;t<n.drumCount;t++){for(let e=0;e<n.spectrumControlPoints;e++)i.drumsetSpectrumWaves[t].spectrum[e]=r.read(n.spectrumControlPointBits);i.drumsetSpectrumWaves[t].markCustomWaveDirty()}e+=a}}}break;case 72:{const i=this.channels[E].instruments[q],a=Math.ceil(n.harmonicsControlPoints*n.harmonicsControlPointBits/6),r=new et(t,e,e+a);for(let t=0;t<n.harmonicsControlPoints;t++)i.harmonicsWave.harmonics[t]=r.read(n.harmonicsControlPointBits);i.harmonicsWave.markCustomWaveDirty(),e+=a}break;case 88:if(r&&d||o&&h){const n=this.channels[E].instruments[q];n.aliases=!!tt[t.charCodeAt(e++)],n.aliases&&(n.distortion=0,n.effects|=8)}break;case 98:{let n;if(c&&a){const i=tt[t.charCodeAt(e++)],a=tt[t.charCodeAt(e++)];n=Math.ceil(.5*a);const r=new et(t,e,e+n);for(let t=0;t<a;t++)this.channels[i].bars[t]=r.read(3)+1}else if(d&&a){let i=0;for(;1<<i<this.patternsPerChannel;)i++;n=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new et(t,e,e+n);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=a.read(i)+1}else{let i=0;for(;1<<i<this.patternsPerChannel+1;)i++;n=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new et(t,e,e+n);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=a.read(i)}e+=n}break;case 112:{let i,s=0,l=!(h&&r||a),p=l?4:3,m=l?16:8;if(c&&a)i=tt[t.charCodeAt(e++)],e++,s=tt[t.charCodeAt(e++)],s<<=6,s+=tt[t.charCodeAt(e++)];else{i=0;let n=rt(1,4,tt[t.charCodeAt(e++)]);for(;n>0;)s<<=6,s+=tt[t.charCodeAt(e++)],n--}const u=new et(t,e,e+s);e+=s;const f=bt.getNeededBits(n.noteSizeMax);let y=-1,b=-1,v=-1;for(;;){const t=this.channels[i],e=this.getChannelIsNoise(i),s=this.getChannelIsMod(i),k=this.getMaxInstrumentsPerPattern(i),w=bt.getNeededBits(k-n.instrumentCountMin),S=bt.getNeededBits(t.instruments.length-1);if(s){let e=d&&r||h&&o;const a=e?S:bt.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let r=0;r<t.instruments.length;r++){let o=t.instruments[r];for(let t=0;t<n.modCount;t++){let s=u.read(2);switch(s){case 0:o.modChannels[t]=at(0,this.pitchChannelCount+this.noiseChannelCount+1,u.read(8)),o.modInstruments[t]=at(0,this.channels[o.modChannels[t]].instruments.length+2,u.read(a));break;case 1:o.modChannels[t]=this.pitchChannelCount+at(0,this.noiseChannelCount+1,u.read(8)),o.modInstruments[t]=at(0,this.channels[o.modChannels[t]].instruments.length+2,u.read(S));break;case 2:o.modChannels[t]=-1;break;case 3:o.modChannels[t]=-2}if(3!=s&&(o.modulators[t]=u.read(6)),e||"eq filter"!=n.modulators[o.modulators[t]].name&&"note filter"!=n.modulators[o.modulators[t]].name||(o.modFilterTypes[t]=u.read(6)),e&&o.modChannels[t]>=0){let e=g(this.channels[o.modChannels[t]].instruments[o.modInstruments[t]].effects);7==o.modulators[t]?(o.modulators[t]=e?n.modulators.dictionary["note filt cut"].index:n.modulators.dictionary["eq filt cut"].index,o.modFilterTypes[t]=1):8==o.modulators[t]&&(o.modulators[t]=e?n.modulators.dictionary["note filt peak"].index:n.modulators.dictionary["eq filt peak"].index,o.modFilterTypes[t]=2)}else e&&o.modulators[t]==n.modulators.dictionary["song reverb"].index&&(y=i,b=r,v=t);e&&12!=n.modulators[o.modulators[t]].associatedEffect&&(this.channels[o.modChannels[t]].instruments[o.modInstruments[t]].effects|=1<<n.modulators[o.modulators[t]].associatedEffect)}}}const M=[];for(let e=0;e<t.instruments.length;e++){M[e]=[];for(let i=0;i<n.modCount;i++)M[e][n.modCount-1-i]=1+3*+((d&&r||h&&o)&&s&&t.instruments[e].modulators[i]==n.modulators.dictionary.detune.index)}const F=e||s?0:12*t.octave;let C=e||s?4:F;const P=s?[0,1,2,3,4,5]:e?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],D=[];for(let t=0;t<P.length;t++)P[t]+=F;for(let e=0;e<this.patternsPerChannel;e++){const i=t.patterns[e];if(I&&a||d&&r||h&&o)i.instruments[0]=rt(0,t.instruments.length-1,u.read(S)),i.instruments.length=1;else if(this.patternInstruments){const e=rt(n.instrumentCountMin,k,u.read(w)+n.instrumentCountMin);for(let n=0;n<e;n++)i.instruments[n]=rt(0,t.instruments.length-1+2*+s,u.read(S));i.instruments.length=e}else i.instruments[0]=0,i.instruments.length=n.instrumentCountMin;if(!(a&&c||0!=u.read(1))){i.notes.length=0;continue}let y=0;const g=i.notes;let b=0;for(;y<this.beatsPerBar*n.partsPerBeat+ +s;){const e=1==u.read(1);let c=!1,v=0;if(e?v=rt(0,D.length-1,u.readLongTail(0,0)):c=1==u.read(1),e||c){let c,k,w;if(e)c=D[v],D.splice(v,1);else{if(c={},l)1==u.read(1)?c.pitchCount=u.read(3)+2:c.pitchCount=1;else for(c.pitchCount=1;c.pitchCount<4&&1==u.read(1);)c.pitchCount++;c.pinCount=u.readPinCount(),c.initialSize=a?2*u.read(2):s?u.read(9):u.read(f),c.pins=[],c.length=0,c.bendCount=0;for(let t=0;t<c.pinCount;t++){let t={};t.pitchBend=1==u.read(1),t.pitchBend&&c.bendCount++,c.length+=x&&a?u.readLegacyPartDuration()*n.partsPerBeat/n.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration(),t.time=c.length,t.size=a?2*u.read(2):s?u.read(9):u.read(f),c.pins.push(t)}}D.unshift(c),D.length>10&&D.pop(),g.length<=b?(k=new ot(0,y,y+c.length,c.initialSize),g[b++]=k):(k=g[b++],k.start=y,k.end=y+c.length,k.pins[0].size=c.initialSize);let S=0;const F=[];for(let t=0;t<c.pitchCount+c.bendCount;t++){if(1==u.read(1)){const t=rt(0,P.length-1,u.read(p));w=P[t],P.splice(t,1)}else{const t=u.readPitchInterval();w=C;let e=t;for(;e>0;){for(w++;-1!=P.indexOf(w);)w++;e--}for(;e<0;){for(w--;-1!=P.indexOf(w);)w--;e++}}P.unshift(w),P.length>m&&P.pop(),t<c.pitchCount?k.pitches[S++]=w:F.push(w),C=t==c.pitchCount-1?k.pitches[0]:w}k.pitches.length=S,F.unshift(k.pitches[0]),s&&(k.pins[0].size*=M[i.instruments[0]][k.pitches[0]]);let A=1;for(const t of c.pins){t.pitchBend&&F.shift();const e=F[0]-k.pitches[0];if(k.pins.length<=A)k.pins[A++]=it(e,t.time,s?t.size*M[i.instruments[0]][k.pitches[0]]:t.size);else{const n=k.pins[A++];n.interval=e,n.time=t.time,n.size=s?t.size*M[i.instruments[0]][k.pitches[0]]:t.size}}k.pins.length=A,0==k.start&&(k.continuesLastPattern=I&&a||d&&r||h&&o?!h&&!a&&t.instruments[i.instruments[0]].legacyTieOver:1==u.read(1)),y=rt(0,this.beatsPerBar*n.partsPerBeat,k.end)}else if(s){const t=1==u.read(1),e=u.readPartDuration();t?y-=e:y+=e}else{y+=x&&a?u.readLegacyPartDuration()*n.partsPerBeat/n.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration()}}g.length=b}if(c&&a)break;if(i++,i>=this.getChannelCount())break}if((r&&d||h&&o)&&v>=0)for(let t=0;t<this.channels.length;t++)for(let e=0;e<this.channels[t].instruments.length;e++){const i=this.channels[t].instruments[e];if(M(i.effects)&&(i.reverb=n.reverbRange-1),y==t&&b==e){const e=this.channels[t].bars[0];if(e>0){const i=this.channels[t].patterns[e-1];let a=6;for(const t of i.notes)t.pitches[0]==n.modCount-1-v&&(a=Math.min(a,t.start));a>0&&i.notes.push(new ot(n.modCount-1-v,0,a,T))}else if(this.channels[t].patterns.length<n.barCountMax){const e=new st;if(this.channels[t].patterns.push(e),this.channels[t].bars[0]=this.channels[t].patterns.length,this.channels[t].patterns.length>this.patternsPerChannel){for(let t=0;t<this.channels.length;t++)this.channels[t].patterns.length<=this.patternsPerChannel&&this.channels[t].patterns.push(new st);this.patternsPerChannel++}e.instruments.length=1,e.instruments[0]=b,e.notes.length=0,e.notes.push(new ot(n.modCount-1-v,0,6,T))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(A)+" at index "+(e-1)+" "+t.substring(0,e))}}toJsonObject(t=!0,e=1,i=!0){const a=[];for(let r=0;r<this.getChannelCount();r++){const o=this.channels[r],s=[],l=this.getChannelIsNoise(r),c=this.getChannelIsMod(r);for(const t of o.instruments)s.push(t.toJsonObject());const h=[];for(const t of o.patterns){const e=[];for(const i of t.notes){let a=o.instruments[t.instruments[0]],r=Math.max(0,n.modCount-i.pitches[0]-1),s=this.getVolumeCapForSetting(c,a.modulators[r],a.modFilterTypes[r]);const l=[];for(const t of i.pins){let e=c?Math.round(t.size):Math.round(100*t.size/s);l.push({tick:(t.time+i.start)*n.rhythms[this.rhythm].stepsPerBeat/n.partsPerBeat,pitchBend:t.interval,volume:e,forMod:c})}const h={pitches:i.pitches,points:l};0==i.start&&(h.continuesLastPattern=i.continuesLastPattern),e.push(h)}const i={notes:e};this.patternInstruments&&(i.instruments=t.instruments.map((t=>t+1))),h.push(i)}const d=[];if(t)for(let t=0;t<this.loopStart;t++)d.push(o.bars[t]);for(let t=0;t<e;t++)for(let t=this.loopStart;t<this.loopStart+this.loopLength;t++)d.push(o.bars[t]);if(i)for(let t=this.loopStart+this.loopLength;t<this.barCount;t++)d.push(o.bars[t]);const p={type:c?"mod":l?"drum":"pitch",name:o.name,instruments:s,patterns:h,sequence:d};l||(p.octaveScrollBar=o.octave-1),a.push(p)}return{name:this.title,format:bt.j,version:bt.R,scale:n.scales[this.scale].name,customScale:this.scaleCustom,key:n.keys[this.key].name,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:n.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:a}}fromJsonObject(t){if(this.initToDefault(!0),!t)return;if(null!=t.name&&(this.title=t.name),this.scale=0,null!=t.scale){const i={"romani :)":"dbl harmonic :)","romani :(":"dbl harmonic :(",enigma:"strange"},a=null!=i[t.scale]?i[t.scale]:t.scale,r=n.scales.findIndex((t=>t.name==a));if(-1!=r&&(this.scale=r),this.scale==n.scales.dictionary.Custom.index&&null!=t.customScale)for(var e of t.customScale.keys())this.scaleCustom[e]=t.customScale[e]}if(null!=t.key)if("number"==typeof t.key)this.key=(t.key+1200>>>0)%n.keys.length;else if("string"==typeof t.key){const e=t.key,n=e.charAt(0).toUpperCase(),i=e.charAt(1).toLowerCase();let a={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[n];const r={"#":1,"♯":1,b:-1,"♭":-1}[i];null!=a&&(null!=r&&(a+=r),a<0&&(a+=12),a%=12,this.key=a)}null!=t.beatsPerMinute&&(this.tempo=at(n.tempoMin,n.tempoMax+1,0|t.beatsPerMinute));let i=0;null!=t.reverb&&(i=at(0,32,0|t.reverb)),null!=t.beatsPerBar&&(this.beatsPerBar=Math.max(n.beatsPerBarMin,Math.min(n.beatsPerBarMax,0|t.beatsPerBar)));let a=4;null!=t.ticksPerBeat&&(a=0|t.ticksPerBeat||4,this.rhythm=n.rhythms.findIndex((t=>t.stepsPerBeat==a)),-1==this.rhythm&&(this.rhythm=1)),null!=t.masterGain?this.masterGain=Math.max(0,Math.min(5,t.masterGain||0)):this.masterGain=1,null!=t.limitThreshold?this.limitThreshold=Math.max(0,Math.min(2,t.limitThreshold||0)):this.limitThreshold=1,null!=t.compressionThreshold?this.compressionThreshold=Math.max(0,Math.min(1.1,t.compressionThreshold||0)):this.compressionThreshold=1,null!=t.limitRise?this.limitRise=Math.max(2e3,Math.min(1e4,t.limitRise||0)):this.limitRise=4e3,null!=t.limitDecay?this.limitDecay=Math.max(1,Math.min(30,t.limitDecay||0)):this.limitDecay=4,null!=t.limitRatio?this.limitRatio=Math.max(0,Math.min(11,t.limitRatio||0)):this.limitRatio=1,null!=t.compressionRatio?this.compressionRatio=Math.max(0,Math.min(1.168,t.compressionRatio||0)):this.compressionRatio=1;let r=1,o=1,s=1;if(null!=t.channels)for(const e of t.channels)e.instruments&&(r=Math.max(r,0|e.instruments.length)),e.patterns&&(o=Math.max(o,0|e.patterns.length)),e.sequence&&(s=Math.max(s,0|e.sequence.length));null!=t.layeredInstruments?this.layeredInstruments=!!t.layeredInstruments:this.layeredInstruments=!1,null!=t.patternInstruments?this.patternInstruments=!!t.patternInstruments:this.patternInstruments=r>1,this.patternsPerChannel=Math.min(o,n.barCountMax),this.barCount=Math.min(s,n.barCountMax),null!=t.introBars&&(this.loopStart=at(0,this.barCount,0|t.introBars)),null!=t.loopBars&&(this.loopLength=at(1,this.barCount-this.loopStart+1,0|t.loopBars));const l=[],c=[],h=[];if(null!=t.channels)for(let e=0;e<t.channels.length;e++){let r=t.channels[e];const o=new gt;let s=!1,d=!1;if(null!=r.type?(s="drum"==r.type,d="mod"==r.type):s=e>=3,s?c.push(o):d?h.push(o):l.push(o),null!=r.octaveScrollBar&&(o.octave=at(0,n.pitchOctaves,1+(0|r.octaveScrollBar)),s&&(o.octave=0)),null!=r.name?o.name=r.name:o.name="",Array.isArray(r.instruments)){const t=r.instruments;for(let e=0;e<t.length&&!(e>=this.getMaxInstrumentsPerChannel());e++){const n=new yt(s,d);o.instruments[e]=n,n.fromJsonObject(t[e],s,d,!1,!1,i)}}for(let t=0;t<this.patternsPerChannel;t++){const e=new st;o.patterns[t]=e;let i=void 0;if(r.patterns&&(i=r.patterns[t]),null!=i){if(this.patternInstruments)if(Array.isArray(i.instruments)){const t=i.instruments,a=at(n.instrumentCountMin,this.getMaxInstrumentsPerPatternForChannel(o)+1,t.length);for(let n=0;n<a;n++)e.instruments[n]=at(0,o.instruments.length,(0|t[n])-1);e.instruments.length=a}else e.instruments[0]=at(0,o.instruments.length,(0|i.instrument)-1),e.instruments.length=1;if(i.notes&&i.notes.length>0){const t=Math.min(this.beatsPerBar*n.partsPerBeat*(d?n.modCount:1),i.notes.length>>>0);for(let r=0;r<i.notes.length&&!(r>=t);r++){const t=i.notes[r];if(!(t&&t.pitches&&t.pitches.length>=1&&t.points&&t.points.length>=2))continue;const l=new ot(0,0,0,0);l.pitches=[],l.pins=[];for(let e=0;e<t.pitches.length;e++){const i=0|t.pitches[e];if(-1==l.pitches.indexOf(i)&&(l.pitches.push(i),l.pitches.length>=n.maxChordSize))break}if(l.pitches.length<1)continue;let c=0;for(let i=0;i<t.points.length;i++){const r=t.points[i];if(null==r||null==r.tick)continue;const s=null==r.pitchBend?0:0|r.pitchBend,h=Math.round(+r.tick*n.partsPerBeat/a);let p,m=o.instruments[e.instruments[0]],u=Math.max(0,n.modCount-l.pitches[0]-1),f=this.getVolumeCapForSetting(d,m.modulators[u],m.modFilterTypes[u]);p=null==r.volume?f:null==r.forMod?Math.max(0,Math.min(f,Math.round((0|r.volume)*f/100))):(0|r.forMod)>0?Math.round(0|r.volume):Math.max(0,Math.min(f,Math.round((0|r.volume)*f/100))),h>this.beatsPerBar*n.partsPerBeat||(0==l.pins.length&&(l.start=h,c=s),l.pins.push(it(s-c,h-l.start,p)))}if(l.pins.length<2)continue;l.end=l.pins[l.pins.length-1].time+l.start;const h=s?n.drumCount-1:n.maxPitch;let p=h,m=0;for(let t=0;t<l.pitches.length;t++)l.pitches[t]+=c,(l.pitches[t]<0||l.pitches[t]>h)&&(l.pitches.splice(t,1),t--),l.pitches[t]<p&&(p=l.pitches[t]),l.pitches[t]>m&&(m=l.pitches[t]);if(!(l.pitches.length<1)){for(let t=0;t<l.pins.length;t++){const e=l.pins[t];e.interval+p<0&&(e.interval=-p),e.interval+m>h&&(e.interval=h-m),t>=2&&e.interval==l.pins[t-1].interval&&e.interval==l.pins[t-2].interval&&e.size==l.pins[t-1].size&&e.size==l.pins[t-2].size&&(l.pins.splice(t-1,1),t--)}0==l.start?l.continuesLastPattern=!0===t.continuesLastPattern:l.continuesLastPattern=!1,e.notes.push(l)}}}}}o.patterns.length=this.patternsPerChannel;for(let t=0;t<this.barCount;t++)o.bars[t]=null!=r.sequence?Math.min(this.patternsPerChannel,r.sequence[t]>>>0):0;o.bars.length=this.barCount}l.length>n.pitchChannelCountMax&&(l.length=n.pitchChannelCountMax),c.length>n.noiseChannelCountMax&&(c.length=n.noiseChannelCountMax),h.length>n.modChannelCountMax&&(h.length=n.modChannelCountMax),this.pitchChannelCount=l.length,this.noiseChannelCount=c.length,this.modChannelCount=h.length,this.channels.length=0,Array.prototype.push.apply(this.channels,l),Array.prototype.push.apply(this.channels,c),Array.prototype.push.apply(this.channels,h)}getPattern(t,e){if(e<0||e>=this.barCount)return null;const n=this.channels[t].bars[e];return 0==n?null:this.channels[t].patterns[n-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(t){return 32-Math.clz32(Math.ceil(t+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}}bt.j="BeepBox",bt.H=2,bt.N=9,bt.$=1,bt.V=5,bt.W=1,bt.R=4,bt.O=103;class vt{constructor(){this.delayLine=null,this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.shelfSample=0,this.shelfPrevInput=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}}class kt{constructor(){this.noteSecondsStart=0,this.noteSecondsEnd=0,this.noteTicksStart=0,this.noteTicksEnd=0,this.noteSizeStart=n.noteSizeMax,this.noteSizeEnd=n.noteSizeMax,this.prevNoteSize=n.noteSizeMax,this.nextNoteSize=n.noteSizeMax,this.U=n.noteSizeMax,this.prevNoteSecondsStart=0,this.prevNoteSecondsEnd=0,this.prevNoteTicksStart=0,this.prevNoteTicksEnd=0,this._=n.noteSizeMax,this.prevSlideStart=!1,this.prevSlideEnd=!1,this.nextSlideStart=!1,this.nextSlideEnd=!1,this.prevSlideRatioStart=0,this.prevSlideRatioEnd=0,this.nextSlideRatioStart=0,this.nextSlideRatioEnd=0,this.envelopeStarts=[],this.envelopeEnds=[],this.lowpassCutoffDecayVolumeCompensation=1;for(let t=0;t<33;t++)this.envelopeStarts[t]=1,this.envelopeEnds[t]=1;this.reset()}reset(){this.noteSecondsEnd=0,this.noteTicksEnd=0,this.U=n.noteSizeMax,this.prevNoteSecondsEnd=0,this.prevNoteTicksEnd=0,this._=n.noteSizeMax}computeEnvelopes(t,e,i,a,r,o){const s=t.getTransition();null==o||!o.atNoteStart||s.continues||o.forceContinueAtStart||(this.prevNoteSecondsEnd=this.noteSecondsEnd,this.prevNoteTicksEnd=this.noteTicksEnd,this._=this.U,this.noteSecondsEnd=0,this.noteTicksEnd=0),null!=o&&(null!=o.note?this.U=o.note.pins[o.note.pins.length-1].size:this.U=n.noteSizeMax);const l=a-i,c=this.noteSecondsEnd,h=c+r,d=this.noteTicksEnd,p=d+l,m=this.prevNoteSecondsEnd,u=m+r,f=this.prevNoteTicksEnd,y=f+l,g=1/(n.ticksPerPart*n.partsPerBeat),b=g*i,v=g*a;let k=this.U,w=this.U,S=this._,M=0,F=!1,x=!1,C=!1,I=!1,P=0,D=0,A=0,T=0;if(null!=o&&null!=o.note&&!o.passedEndOfNote){const t=o.note.getEndPinIndex(e),r=o.note.pins[t-1],l=o.note.pins[t],c=(o.note.start+r.time)*n.ticksPerPart,h=(o.note.start+l.time)*n.ticksPerPart,d=(i-c)/(h-c),p=(a-c)/(h-c);if(k=r.size+(l.size-r.size)*d,w=r.size+(l.size-r.size)*p,s.slides){const t=o.noteStartPart*n.ticksPerPart,e=o.noteEndPart*n.ticksPerPart,r=.5*(e-t),l=Math.min(r,s.slideTicks);null==o.prevNote||o.forceContinueAtStart||(i-t<l&&(F=!0,P=.5*(1-(i-t)/l)),a-t<l&&(x=!0,D=.5*(1-(a-t)/l))),null==o.nextNote||o.forceContinueAtEnd||(M=o.nextNote.pins[0].size,e-i<l&&(C=!0,A=.5*(1-(e-i)/l)),e-a<l&&(I=!0,T=.5*(1-(e-a)/l)))}}let E=1,q=!1;for(let e=0;e<=t.envelopeCount;e++){let i,a,r;if(e==t.envelopeCount){if(q)break;i=n.instrumentAutomationTargets.dictionary.noteVolume,a=0,r=n.envelopes.dictionary["note size"]}else{let o=t.envelopes[e];i=n.instrumentAutomationTargets[o.target],a=o.index,r=n.envelopes[o.envelope],0==r.type&&(q=!0)}if(null!=i.computeIndex){const e=i.computeIndex+a;let n=kt.computeEnvelope(r,c,b,k),o=kt.computeEnvelope(r,h,v,w);if(F){n+=(kt.computeEnvelope(r,m,b,S)-n)*P}if(x){o+=(kt.computeEnvelope(r,u,v,S)-o)*D}if(C){n+=(kt.computeEnvelope(r,0,b,M)-n)*A}if(I){o+=(kt.computeEnvelope(r,0,v,M)-o)*T}if(this.envelopeStarts[e]*=n,this.envelopeEnds[e]*=o,i.isFilter){const e=null!=t.tmpNoteFilterStart?t.tmpNoteFilterStart:t.noteFilter;e.controlPointCount>a&&0==e.controlPoints[a].type&&(E=Math.max(E,kt.getLowpassCutoffDecayVolumeCompensation(r)))}}}this.noteSecondsStart=c,this.noteSecondsEnd=h,this.noteTicksStart=d,this.noteTicksEnd=p,this.prevNoteSecondsStart=m,this.prevNoteSecondsEnd=u,this.prevNoteTicksStart=f,this.prevNoteTicksEnd=y,this.prevNoteSize=S,this.nextNoteSize=M,this.noteSizeStart=k,this.noteSizeEnd=w,this.prevSlideStart=F,this.prevSlideEnd=x,this.nextSlideStart=C,this.nextSlideEnd=I,this.prevSlideRatioStart=P,this.prevSlideRatioEnd=D,this.nextSlideRatioStart=A,this.nextSlideRatioEnd=T,this.lowpassCutoffDecayVolumeCompensation=E}clearEnvelopes(t){for(let e=0;e<t.envelopeCount;e++){const i=t.envelopes[e],a=n.instrumentAutomationTargets[i.target];if(null!=a.computeIndex){const t=a.computeIndex+i.index;this.envelopeStarts[t]=1,this.envelopeEnds[t]=1}}this.envelopeStarts[0]=1,this.envelopeEnds[0]=1}static computeEnvelope(t,e,n,i){switch(t.type){case 0:return Ft.noteSizeToVolumeMult(i);case 1:return 1;case 4:return 1/(1+e*t.speed);case 5:return 1-1/(1+e*t.speed);case 6:return.5-.5*Math.cos(2*n*Math.PI*t.speed);case 7:return.75-.25*Math.cos(2*n*Math.PI*t.speed);case 2:return Math.max(1,2-10*e);case 3:const a=.25/Math.sqrt(t.speed);return e<a?e/a:1/(1+(e-a)*t.speed);case 8:return Math.pow(2,-t.speed*e);case 9:let r=.5-.5*Math.cos(n*t.speed);return r=1/(1+e*(t.speed-r/(1.5/t.speed))),r=r>0?r:0,r;case 11:{let n=1-e/(16/t.speed);return n=n>0?n:0,n}case 12:{let n=e/(16/t.speed);return n=n<1?n:1,n}default:throw new Error("Unrecognized operator envelope type.")}}static getLowpassCutoffDecayVolumeCompensation(t){return 8==t.type?1.25+.025*t.speed:4==t.type?1+.02*t.speed:1}}class wt{constructor(){this.pitches=Array(n.maxChordSize+2).fill(0),this.pitchCount=0,this.chordSize=0,this.drumsetPitch=null,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.freshlyAllocated=!0,this.atNoteStart=!1,this.isOnLastTick=!1,this.passedEndOfNote=!1,this.forceContinueAtStart=!1,this.forceContinueAtEnd=!1,this.noteStartPart=0,this.noteEndPart=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.sample=0,this.stringSustainStart=0,this.stringSustainEnd=0,this.phases=[],this.phaseDeltas=[],this.expressionStarts=[],this.expressionDeltas=[],this.phaseDeltaScales=[],this.prevVibrato=null,this.pulseWidth=0,this.pulseWidthDelta=0,this.pickedStrings=[],this.noteFilters=[],this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.specialIntervalMult=0,this.specialIntervalExpressionMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.envelopeComputer=new kt,this.reset()}reset(){this.sample=0;const t=Math.max(n.maxChordSize,n.operatorCount+2);for(let e=0;e<t;e++)this.phases[e]=0,this.feedbackOutputs[e]=0;for(let t=0;t<this.noteFilterCount;t++)this.noteFilters[t].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.liveInputSamplesHeld=0;for(const t of this.pickedStrings)t.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.drumsetPitch=null}}class St{constructor(){this.awake=!1,this.computed=!1,this.tonesAddedInThisTick=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0,this.activeTones=new Q,this.activeModTones=new Q,this.releasedTones=new Q,this.liveInputTones=new Q,this.eqFilterVolumeStart=1,this.eqFilterVolumeDelta=0,this.mixVolumeStart=1,this.mixVolumeDelta=0,this.delayInputMultStart=0,this.delayInputMultDelta=0,this.distortionStart=0,this.distortionEnd=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1,this.bitcrusherPhaseDelta=0,this.bitcrusherPhaseDeltaScale=1,this.bitcrusherScale=1,this.bitcrusherScaleScale=1,this.bitcrusherFoldLevel=1,this.bitcrusherFoldLevelScale=1,this.eqFilters=[],this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.panningDelayLine=null,this.panningDelayPos=0,this.panningVolumeStartL=0,this.panningVolumeStartR=0,this.panningVolumeDeltaL=0,this.panningVolumeDeltaR=0,this.panningOffsetStartL=0,this.panningOffsetStartR=0,this.panningOffsetDeltaL=0,this.panningOffsetDeltaR=0,this.chorusDelayLineL=null,this.chorusDelayLineR=null,this.chorusDelayLineDirty=!1,this.chorusDelayPos=0,this.chorusPhase=0,this.chorusStart=0,this.chorusEnd=0,this.echoDelayLineL=null,this.echoDelayLineR=null,this.echoDelayLineDirty=!1,this.echoDelayPos=0,this.echoDelayOffsetStart=0,this.echoDelayOffsetEnd=0,this.echoDelayOffsetLastTick=0,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=0,this.echoDelayOffsetLastTickIsComputed=!1,this.echoMultStart=0,this.echoMultDelta=0,this.echoShelfA1=0,this.echoShelfB0=0,this.echoShelfB1=0,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbDelayLine=null,this.reverbDelayLineDirty=!1,this.reverbDelayPos=0,this.reverbMultStart=0,this.reverbMultDelta=0,this.reverbShelfA1=0,this.reverbShelfB0=0,this.reverbShelfB1=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0}allocateNecessaryBuffers(t,e,i){if(k(e.effects)&&(null==this.panningDelayLine||this.panningDelayLine.length<t.panningDelayBufferSize)&&(this.panningDelayLine=new Float32Array(t.panningDelayBufferSize)),w(e.effects)&&((null==this.chorusDelayLineL||this.chorusDelayLineL.length<t.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(t.chorusDelayBufferSize)),(null==this.chorusDelayLineR||this.chorusDelayLineR.length<t.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(t.chorusDelayBufferSize))),S(e.effects)){const t=Math.max(n.echoDelayRange>>1,e.echoDelay+1),a=2*Ft.fittingPowerOfTwo(t*n.echoDelayStepTicks*i);if(null==this.echoDelayLineL||null==this.echoDelayLineR)this.echoDelayLineL=new Float32Array(a),this.echoDelayLineR=new Float32Array(a);else if(this.echoDelayLineL.length<a||this.echoDelayLineR.length<a){const t=new Float32Array(a),e=new Float32Array(a),n=this.echoDelayLineL.length-1;for(let i=0;i<this.echoDelayLineL.length;i++)t[i]=this.echoDelayLineL[this.echoDelayPos+i&n],e[i]=this.echoDelayLineL[this.echoDelayPos+i&n];this.echoDelayPos=this.echoDelayLineL.length,this.echoDelayLineL=t,this.echoDelayLineR=e}}M(e.effects)&&null==this.reverbDelayLine&&(this.reverbDelayLine=new Float32Array(n.reverbDelayBufferSize))}deactivate(){this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1;for(let t=0;t<this.eqFilterCount;t++)this.eqFilters[t].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.panningDelayPos=0,null!=this.panningDelayLine)for(let t=0;t<this.panningDelayLine.length;t++)this.panningDelayLine[t]=0;this.echoDelayOffsetLastTickIsComputed=!1,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){if(this.deactivate(),this.chorusDelayLineDirty){for(let t=0;t<this.chorusDelayLineL.length;t++)this.chorusDelayLineL[t]=0;for(let t=0;t<this.chorusDelayLineR.length;t++)this.chorusDelayLineR[t]=0}if(this.echoDelayLineDirty){for(let t=0;t<this.echoDelayLineL.length;t++)this.echoDelayLineL[t]=0;for(let t=0;t<this.echoDelayLineR.length;t++)this.echoDelayLineR[t]=0}if(this.reverbDelayLineDirty)for(let t=0;t<this.reverbDelayLine.length;t++)this.reverbDelayLine[t]=0;this.chorusPhase=0}compute(t,e,i,a,r,o,s){this.computed=!0,this.allocateNecessaryBuffers(t,e,i);const l=t.samplesPerSecond,c=t.tickSampleCountdown,h=c/i,d=(c-a)/i,p=b(e.effects),m=v(e.effects),u=k(e.effects),f=w(e.effects),y=S(e.effects),g=M(e.effects);if(p){let i=e.distortion,a=e.distortion;t.isModActive(n.modulators.dictionary.distortion.index,o,s)&&(i=t.getModValue(n.modulators.dictionary.distortion.index,o,s,!1),a=t.getModValue(n.modulators.dictionary.distortion.index,o,s,!0)),this.distortionStart=Math.min(1,i/(n.distortionRange-1)),this.distortionEnd=Math.min(1,a/(n.distortionRange-1))}if(m){let i=e.bitcrusherFreq,r=e.bitcrusherFreq;t.isModActive(n.modulators.dictionary["freq crush"].index,o,s)&&(i=t.getModValue(n.modulators.dictionary["freq crush"].index,o,s,!1),r=t.getModValue(n.modulators.dictionary["freq crush"].index,o,s,!0));let c=e.bitcrusherQuantization,h=e.bitcrusherQuantization;t.isModActive(n.modulators.dictionary["bit crush"].index,o,s)&&(c=t.getModValue(n.modulators.dictionary["bit crush"].index,o,s,!1),h=t.getModValue(n.modulators.dictionary["bit crush"].index,o,s,!0));const d=n.keys[t.song.key].basePitch,p=yt.frequencyFromPitch(d+60)*Math.pow(2,(n.bitcrusherFreqRange-1-i)*n.bitcrusherOctaveStep),m=yt.frequencyFromPitch(d+60)*Math.pow(2,(n.bitcrusherFreqRange-1-r)*n.bitcrusherOctaveStep),u=Math.min(1,p/l),f=Math.min(1,m/l);this.bitcrusherPhaseDelta=u,this.bitcrusherPhaseDeltaScale=Math.pow(f/u,1/a);const y=2*n.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(n.bitcrusherQuantizationRange-1-c))),g=2*n.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(n.bitcrusherQuantizationRange-1-h)));this.bitcrusherScale=y,this.bitcrusherScaleScale=Math.pow(g/y,1/a);const b=2*n.bitcrusherBaseVolume*Math.pow(1.5,n.bitcrusherQuantizationRange-1-c),v=2*n.bitcrusherBaseVolume*Math.pow(1.5,n.bitcrusherQuantizationRange-1-h);this.bitcrusherFoldLevel=b,this.bitcrusherFoldLevelScale=Math.pow(v/b,1/a)}let F=1;if(e.eqFilterType){const i=e.eqFilter;null==e.eqSubFilters[1]&&(e.eqSubFilters[1]=new ut);const r=e.eqSubFilters[1];let c,h=e.eqFilterSimpleCut,d=e.eqFilterSimplePeak,p=e.eqFilterSimpleCut,m=e.eqFilterSimplePeak,u=!1;if(t.isModActive(n.modulators.dictionary["eq filt cut"].index,o,s)&&(h=t.getModValue(n.modulators.dictionary["eq filt cut"].index,o,s,!1),p=t.getModValue(n.modulators.dictionary["eq filt cut"].index,o,s,!0),u=!0),t.isModActive(n.modulators.dictionary["eq filt peak"].index,o,s)&&(d=t.getModValue(n.modulators.dictionary["eq filt peak"].index,o,s,!1),m=t.getModValue(n.modulators.dictionary["eq filt peak"].index,o,s,!0),u=!0),u){i.convertLegacySettingsForSynth(h,d),r.convertLegacySettingsForSynth(p,m),c=i.controlPoints[0];let t=r.controlPoints[0];c.toCoefficients(Ft.tempFilterStartCoefficients,l,1,1),t.toCoefficients(Ft.tempFilterEndCoefficients,l,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new Z),this.eqFilters[0].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterEndCoefficients,1/a,0==c.type)}else i.convertLegacySettingsForSynth(h,d,!0),c=i.controlPoints[0],c.toCoefficients(Ft.tempFilterStartCoefficients,l,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new Z),this.eqFilters[0].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterStartCoefficients,1/a,0==c.type);F*=c.getVolumeCompensationMult(),this.eqFilterCount=1,F=Math.min(3,F)}else{const t=null!=e.tmpEqFilterStart?e.tmpEqFilterStart:e.eqFilter;for(let n=0;n<t.controlPointCount;n++){let i=t.controlPoints[n],r=null!=e.tmpEqFilterEnd&&null!=e.tmpEqFilterEnd.controlPoints[n]?e.tmpEqFilterEnd.controlPoints[n]:t.controlPoints[n];i.type!=r.type&&(i=r),i.toCoefficients(Ft.tempFilterStartCoefficients,l,1,1),r.toCoefficients(Ft.tempFilterEndCoefficients,l,1,1),this.eqFilters.length<=n&&(this.eqFilters[n]=new Z),this.eqFilters[n].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterEndCoefficients,1/a,0==i.type),F*=i.getVolumeCompensationMult()}this.eqFilterCount=t.controlPointCount,F=Math.min(3,F)}const x=Ft.instrumentVolumeToVolumeMult(e.volume);this.mixVolumeStart=x;let C=x;if(t.isModActive(n.modulators.dictionary["mix volume"].index,o,s)){const e=t.getModValue(n.modulators.dictionary["mix volume"].index,o,s,!1),i=t.getModValue(n.modulators.dictionary["mix volume"].index,o,s,!0);this.mixVolumeStart*=e<=0?(e+n.volumeRange/2)/(n.volumeRange/2):Ft.instrumentVolumeToVolumeMult(e),C*=i<=0?(i+n.volumeRange/2)/(n.volumeRange/2):Ft.instrumentVolumeToVolumeMult(i)}t.isModActive(n.modulators.dictionary["song volume"].index)&&(this.mixVolumeStart*=t.getModValue(n.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,C*=t.getModValue(n.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(C-this.mixVolumeStart)/a;let I=F,P=F,D=1,A=1;if(u){let i=e.pan,r=e.pan;t.isModActive(n.modulators.dictionary.pan.index,o,s)&&(i=t.getModValue(n.modulators.dictionary.pan.index,o,s,!1),r=t.getModValue(n.modulators.dictionary.pan.index,o,s,!0));let c=Math.max(-1,Math.min(1,(i-n.panCenter)/n.panCenter)),h=Math.max(-1,Math.min(1,(r-n.panCenter)/n.panCenter));const d=1.414*Math.cos((1+c)*Math.PI*.25),p=1.414*Math.cos((1-c)*Math.PI*.25),m=1.414*Math.cos((1+h)*Math.PI*.25),u=1.414*Math.cos((1-h)*Math.PI*.25),f=l*n.panDelaySecondsMax;let y=e.panDelay,g=e.panDelay;t.isModActive(n.modulators.dictionary["pan delay"].index,o,s)&&(y=t.getModValue(n.modulators.dictionary["pan delay"].index,o,s,!1),g=t.getModValue(n.modulators.dictionary["pan delay"].index,o,s,!0));const b=c*y*f/10,v=h*g*f/10,k=Math.max(0,b),w=Math.max(0,-b),S=Math.max(0,v),M=Math.max(0,-v);this.panningVolumeStartL=d,this.panningVolumeStartR=p,this.panningVolumeDeltaL=(m-d)/a,this.panningVolumeDeltaR=(u-p)/a,this.panningOffsetStartL=k,this.panningOffsetStartR=w,this.panningOffsetDeltaL=(S-k)/a,this.panningOffsetDeltaR=(M-w)/a}if(f){let i=e.chorus,a=e.chorus;t.isModActive(n.modulators.dictionary.chorus.index,o,s)&&(i=t.getModValue(n.modulators.dictionary.chorus.index,o,s,!1),a=t.getModValue(n.modulators.dictionary.chorus.index,o,s,!0));const r=Math.min(1,i/(n.chorusRange-1)),l=Math.min(1,a/(n.chorusRange-1));this.chorusStart=.6*r+.4*Math.pow(r,6),this.chorusEnd=.6*l+.4*Math.pow(l,6)}let T=0;if(y){let r=e.echoSustain,l=e.echoSustain;t.isModActive(n.modulators.dictionary.echo.index,o,s)&&(r=t.getModValue(n.modulators.dictionary.echo.index,o,s,!1),l=t.getModValue(n.modulators.dictionary.echo.index,o,s,!0));const c=.9*Math.min(1,Math.pow(r/n.echoSustainRange,1.1)),p=.9*Math.min(1,Math.pow(l/n.echoSustainRange,1.1));this.echoMultStart=c,this.echoMultDelta=(p-c)/a,T=Math.max(c,p);let m=e.echoDelay,u=e.echoDelay,f=!1;t.isModActive(n.modulators.dictionary["echo delay"].index,o,s)&&(m=t.getModValue(n.modulators.dictionary["echo delay"].index,o,s,!1),u=t.getModValue(n.modulators.dictionary["echo delay"].index,o,s,!0),f=!0);const y=Math.round((m+1)*n.echoDelayStepTicks*i),g=Math.round((u+1)*n.echoDelayStepTicks*i);this.echoDelayOffsetLastTickIsComputed&&!f?this.echoDelayOffsetStart=this.echoDelayOffsetLastTick:this.echoDelayOffsetStart=y,t.isAtEndOfTick&&!f&&(this.echoDelayOffsetLastTick=g,this.echoDelayOffsetLastTickIsComputed=!0),this.echoDelayOffsetEnd=g,this.echoDelayOffsetRatio=1-h,this.echoDelayOffsetRatioDelta=(h-d)/a;const b=2*Math.PI*n.echoShelfHz/t.samplesPerSecond;Ft.tempFilterStartCoefficients.highShelf1stOrder(b,n.echoShelfGain),this.echoShelfA1=Ft.tempFilterStartCoefficients.a[1],this.echoShelfB0=Ft.tempFilterStartCoefficients.b[0],this.echoShelfB1=Ft.tempFilterStartCoefficients.b[1]}let E=0;if(g){let i=e.reverb,r=e.reverb;t.isModActive(n.modulators.dictionary.reverb.index,o,s)&&(i=t.getModValue(n.modulators.dictionary.reverb.index,o,s,!1),r=t.getModValue(n.modulators.dictionary.reverb.index,o,s,!0)),t.isModActive(n.modulators.dictionary["song reverb"].index,o,s)&&(i*=(t.getModValue(n.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-n.modulators.dictionary["song reverb"].convertRealFactor)/n.reverbRange,r*=(t.getModValue(n.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-n.modulators.dictionary["song reverb"].convertRealFactor)/n.reverbRange);const l=.425*Math.min(1,Math.pow(i/n.reverbRange,.667)),c=.425*Math.min(1,Math.pow(r/n.reverbRange,.667));this.reverbMultStart=l,this.reverbMultDelta=(c-l)/a,E=Math.max(l,c);const h=2*Math.PI*n.reverbShelfHz/t.samplesPerSecond;Ft.tempFilterStartCoefficients.highShelf1stOrder(h,n.reverbShelfGain),this.reverbShelfA1=Ft.tempFilterStartCoefficients.a[1],this.reverbShelfB0=Ft.tempFilterStartCoefficients.b[0],this.reverbShelfB1=Ft.tempFilterStartCoefficients.b[1]}if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines){I=0,P=0,D=0,A=0;let e=0;f&&(e+=t.chorusDelayBufferSize),y&&(e+=this.echoDelayLineL.length),g&&(e+=n.reverbDelayBufferSize),this.flushedSamples+=a,this.flushedSamples>=e&&(this.deactivateAfterThisTick=!0)}else{0==this.attentuationProgress?(I*=h,P*=d):(I=0,P=0);const e=1/256,a=-Math.log2(e);let r=0;if(f&&(r+=n.chorusMaxDelay),y){const t=.5*(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)/l,e=Math.pow(T,1/t);r+=-1/Math.log2(e)*a}if(g){const t=2*E,e=n.reverbDelayBufferSize/4/l,i=Math.pow(t,1/e);r+=-1/Math.log2(i)*a}const o=i/l/r,s=this.attentuationProgress+o;s>=1&&(D*=h,A*=d),t.isAtEndOfTick&&(this.attentuationProgress=s,this.attentuationProgress>=1&&(this.flushingDelayLines=!0))}this.eqFilterVolumeStart=I,this.eqFilterVolumeDelta=(P-I)/a,this.delayInputMultStart=D,this.delayInputMultDelta=(A-D)/a}}class Mt{constructor(){this.instruments=[],this.muted=!1,this.singleSeamlessInstrument=null}}class Ft{constructor(t=null){this.samplesPerSecond=44100,this.song=null,this.liveInputDuration=0,this.liveInputStarted=!1,this.liveInputPitches=[],this.liveInputChannel=0,this.liveInputInstruments=[],this.loopRepeatCount=-1,this.volume=1,this.exposedBuffer=[],this.reloadbuffer=!0,this.copybroken=!1,this.copybuffertimer=0,this.renderingSong=!1,this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.prevBar=null,this.nextBar=null,this.beat=0,this.part=0,this.tick=0,this.isAtStartOfTick=!0,this.isAtEndOfTick=!0,this.tickSampleCountdown=0,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.isPlayingSong=!1,this.liveInputEndTime=0,this.browserAutomaticallyClearsAudioBuffer=!0,this.tempDrumSetControlPoint=new mt,this.tempFrequencyResponse=new J,this.channels=[],this.tonePool=new Q,this.tempMatchedPitchTones=Array(n.maxChordSize).fill(null),this.limit=0,this.tempMonoInstrumentSampleBuffer=null,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=t=>{const e=t.outputBuffer,n=e.getChannelData(0),i=e.getChannelData(1);if(!this.browserAutomaticallyClearsAudioBuffer||0==n[0]&&0==i[0]&&0==n[e.length-1]&&0==i[e.length-1]||(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){const t=e.length;for(let e=0;e<t;e++)n[e]=0,i[e]=0}performance.now()<this.liveInputEndTime||this.isPlayingSong?(this.synthesize(n,i,e.length,this.isPlayingSong),this.reloadbuffer&&(this.exposedBuffer[0]=e.getChannelData(0),this.exposedBuffer[1]=e.getChannelData(1),this.reloadbuffer=!1),0==this.exposedBuffer[0].length&&(this.exposedBuffer[0]=new Float32Array(144),this.exposedBuffer[1]=new Float32Array(144),this.copybroken=!0),this.copybroken&&this.copybuffertimer<=0?(_.raise("oscillascopeUpdate",n,i),this.copybuffertimer=2):this.copybroken&&this.copybuffertimer--):this.deactivateAudio()},this.computeDelayBufferSizes(),null!=t&&this.setSong(t)}syncSongState(){const t=this.song.getChannelCount();for(let e=this.channels.length;e<t;e++)this.channels[e]=new Mt;this.channels.length=t;for(let e=0;e<t;e++){const t=this.song.channels[e],n=this.channels[e];for(let e=n.instruments.length;e<t.instruments.length;e++)n.instruments[e]=new St;if(n.instruments.length=t.instruments.length,n.muted!=t.muted&&(n.muted=t.muted,n.muted))for(const t of n.instruments)t.resetAllEffects()}}warmUpSynthesizer(t){if(null!=t){this.syncSongState();const e=this.getSamplesPerTick();for(let n=0;n<t.getChannelCount();n++)for(let i=0;i<t.channels[n].instruments.length;i++){const a=t.channels[n].instruments[i],r=this.channels[n].instruments[i];Ft.getInstrumentSynthFunction(a),a.warmUp(this.samplesPerSecond),r.allocateNecessaryBuffers(this,a,e)}}}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let t=[],e=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[];for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++){e[t]=[],this.modInsValues[t]=[],this.nextModInsValues[t]=[];for(let n=0;n<this.song.channels[t].instruments.length;n++)this.modInsValues[t][n]=[],this.nextModInsValues[t][n]=[],e[t][n]=[]}let i=this.beat*n.partsPerBeat+this.part;for(let a=this.song.pitchChannelCount+this.song.noiseChannelCount;a<this.song.getChannelCount();a++)if(!this.song.channels[a].muted){let r;for(let o=this.bar;o>=0;o--)if(r=this.song.getPattern(a,o),null!=r){let s=r.instruments[0],l=this.song.channels[a].instruments[s],c=[],h=[],d=o==this.bar?i:this.findPartsInBar(o);for(const t of r.notes)if(t.start<d&&(null==c[n.modCount-1-t.pitches[0]]||t.end>c[n.modCount-1-t.pitches[0]]))if(t.end<=d)c[n.modCount-1-t.pitches[0]]=t.end,h[n.modCount-1-t.pitches[0]]=t.pins[t.pins.length-1].size;else{c[n.modCount-1-t.pitches[0]]=d;for(let e=0;e<t.pins.length;e++)if(t.pins[e].time+t.start>d){const i=t.pins[e].time-t.pins[e-1].time,a=d-t.start-t.pins[e-1].time,r=t.pins[e].size-t.pins[e-1].size;h[n.modCount-1-t.pitches[0]]=Math.round(t.pins[e-1].size+r*a/i),e=t.pins.length}}for(let i=0;i<n.modCount;i++)if(null!=c[i])if(n.modulators[l.modulators[i]].forSong)(null==t[l.modulators[i]]||o*n.partsPerBeat*this.song.beatsPerBar+c[i]>t[l.modulators[i]])&&(this.setModValue(h[i],h[i],i,l.modChannels[i],l.modInstruments[i],l.modulators[i]),t[l.modulators[i]]=o*n.partsPerBeat*this.song.beatsPerBar+c[i]);else{let t=[];if(l.modInstruments[i]==this.channels[l.modChannels[i]].instruments.length)for(let e=0;e<this.channels[l.modChannels[i]].instruments.length;e++)t.push(e);else if(l.modInstruments[i]>this.channels[l.modChannels[i]].instruments.length){const e=this.song.getPattern(l.modChannels[i],o);null!=e&&(t=e.instruments)}else t.push(l.modInstruments[i]);for(let a=0;a<t.length;a++){const r=l.modulators[i]==n.modulators.dictionary["eq filter"].index,s=l.modulators[i]==n.modulators.dictionary["note filter"].index;let d=l.modulators[i];if(r?d=n.modulators.length+l.modFilterTypes[i]:s&&(d=n.modulators.length+1+2*n.filterMaxPoints+l.modFilterTypes[i]),null==e[l.modChannels[i]][t[a]][d]||o*n.partsPerBeat*this.song.beatsPerBar+c[i]>e[l.modChannels[i]][a][d]){if(r){let e=this.song.channels[l.modChannels[i]].instruments[t[a]];if(0==l.modFilterTypes[i])e.tmpEqFilterStart=e.eqSubFilters[h[i]];else{for(let t=0;t<n.filterMorphCount;t++)e.tmpEqFilterStart==e.eqSubFilters[t]&&(e.tmpEqFilterStart=new ut,e.tmpEqFilterStart.fromJsonObject(e.eqSubFilters[t].toJsonObject()),t=n.filterMorphCount);Math.floor((l.modFilterTypes[i]-1)/2)<e.tmpEqFilterStart.controlPointCount&&(l.modFilterTypes[i]%2?e.tmpEqFilterStart.controlPoints[Math.floor((l.modFilterTypes[i]-1)/2)].freq=h[i]:e.tmpEqFilterStart.controlPoints[Math.floor((l.modFilterTypes[i]-1)/2)].gain=h[i])}e.tmpEqFilterEnd=e.tmpEqFilterStart}else if(s){let e=this.song.channels[l.modChannels[i]].instruments[t[a]];if(0==l.modFilterTypes[i])e.tmpNoteFilterStart=e.noteSubFilters[h[i]];else{for(let t=0;t<n.filterMorphCount;t++)e.tmpNoteFilterStart==e.noteSubFilters[t]&&(e.tmpNoteFilterStart=new ut,e.tmpNoteFilterStart.fromJsonObject(e.noteSubFilters[t].toJsonObject()),t=n.filterMorphCount);Math.floor((l.modFilterTypes[i]-1)/2)<e.tmpNoteFilterStart.controlPointCount&&(l.modFilterTypes[i]%2?e.tmpNoteFilterStart.controlPoints[Math.floor((l.modFilterTypes[i]-1)/2)].freq=h[i]:e.tmpNoteFilterStart.controlPoints[Math.floor((l.modFilterTypes[i]-1)/2)].gain=h[i])}e.tmpNoteFilterEnd=e.tmpNoteFilterStart}else this.setModValue(h[i],h[i],i,l.modChannels[i],t[a],d);e[l.modChannels[i]][t[a]][d]=o*n.partsPerBeat*this.song.beatsPerBar+c[i]}}}}}}}determineInvalidModulators(t){if(null!=this.song)for(let e=0;e<n.modCount;e++){if(t.invalidModulators[e]=!0,-1==t.modChannels[e]){0!=t.modulators[e]&&(t.invalidModulators[e]=!1);continue}const i=this.song.channels[t.modChannels[e]];if(null==i)continue;let a=[];a=t.modInstruments[e]>=i.instruments.length?i.instruments:[i.instruments[t.modInstruments[e]]];for(let i=0;i<a.length;i++){const r=a[i];if(null==r)continue;const o=n.modulators[t.modulators[e]].name;12!=n.modulators[t.modulators[e]].associatedEffect&&!(r.effects&1<<n.modulators[t.modulators[e]].associatedEffect)||1!=r.type&&("fm slider 1"==o||"fm slider 2"==o||"fm slider 3"==o||"fm slider 4"==o||"fm feedback"==o)||6!=r.type&&"pulse width"==o||!r.getChord().arpeggiates&&("arp speed"==o||"reset arp"==o)||r.eqFilterType&&"eq filter"==o||!r.eqFilterType&&("eq filt cut"==o||"eq filt peak"==o)||"eq filter"==o&&Math.floor((t.modFilterTypes[e]+1)/2)>r.eqFilter.controlPointCount||r.noteFilterType&&"note filter"==o||!r.noteFilterType&&("note filt cut"==o||"note filt peak"==o)||"note filter"==o&&Math.floor((t.modFilterTypes[e]+1)/2)>r.noteFilter.controlPointCount||(t.invalidModulators[e]=!1,i=a.length)}}}static operatorAmplitudeCurve(t){return(Math.pow(16,t/15)-1)/15}get playing(){return this.isPlayingSong}get playhead(){return this.playheadInternal}set playhead(t){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,t));let e=this.playheadInternal;this.bar=Math.floor(e),e=this.song.beatsPerBar*(e-this.bar),this.beat=Math.floor(e),e=n.partsPerBeat*(e-this.beat),this.part=Math.floor(e),e=n.ticksPerPart*(e-this.part),this.tick=Math.floor(e);const i=this.getSamplesPerTick();e=i*(e-this.tick),this.tickSampleCountdown=i-e,this.prevBar=null}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*n.ticksPerPart*n.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*n.partsPerBeat+this.part)*n.ticksPerPart+this.tick}getCurrentPart(){return this.beat*n.partsPerBeat+this.part}findPartsInBar(t){if(null==this.song)return 0;let e=n.partsPerBeat*this.song.beatsPerBar;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++){let a=this.song.getPattern(i,t);if(null!=a){let t=this.song.channels[i].instruments[a.instruments[0]];for(let i=0;i<n.modCount;i++)if(t.modulators[i]==n.modulators.dictionary["next bar"].index)for(const t of a.notes)t.pitches[0]==n.modCount-1-i&&e>t.start&&(e=t.start)}}return e}getTotalSamples(t,e,i){if(null==this.song)return-1;let a=t?0:this.song.loopStart,r=e?this.song.barCount:this.song.loopStart+this.song.loopLength,o=!1,s=!1,l=this.song.tempo;for(let t=this.song.pitchChannelCount+this.song.noiseChannelCount;t<this.song.getChannelCount();t++)for(let e=a;e<r;e++){let i=this.song.getPattern(t,e);if(null!=i){let e=this.song.channels[t].instruments[i.instruments[0]];for(let t=0;t<n.modCount;t++)e.modulators[t]==n.modulators.dictionary.tempo.index&&(o=!0),e.modulators[t]==n.modulators.dictionary["next bar"].index&&(s=!0)}}if(a>0){let t=null,e=0;for(let i=a-1;i>=0;i--){for(let a=this.song.pitchChannelCount+this.song.noiseChannelCount;a<this.song.getChannelCount();a++){let r=this.song.getPattern(a,i);if(null!=r){let o=r.instruments[0],s=this.song.channels[a].instruments[o],l=this.findPartsInBar(i);for(const i of r.notes)if(s.modulators[n.modCount-1-i.pitches[0]]==n.modulators.dictionary.tempo.index&&i.start<l&&(null==t||i.end>t))if(i.end<=l)t=i.end,e=i.pins[i.pins.length-1].size;else{t=l;for(let t=0;t<i.pins.length;t++)if(i.pins[t].time+i.start>l){const n=i.pins[t].time-i.pins[t-1].time,a=l-i.start-i.pins[t-1].time,r=i.pins[t].size-i.pins[t-1].size;e=Math.round(i.pins[t-1].size+r*a/n),t=i.pins.length}}}}null!=t&&(l=e+n.modulators.dictionary.tempo.convertRealFactor,i=-1)}}if(o||s){let t=a,e=!1,c=0;for(;!e;){let a=n.partsPerBeat*this.song.beatsPerBar,h=0;if(s&&(a=this.findPartsInBar(t)),o){let e=!1;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++)if(0==e){let r=this.song.getPattern(i,t);if(null!=r){let t=this.song.channels[i].instruments[r.instruments[0]];for(let i=0;i<n.modCount;i++)if(0==e&&t.modulators[i]==n.modulators.dictionary.tempo.index&&r.notes.find((t=>t.pitches[0]==n.modCount-1-i))){e=!0,r.notes.sort((function(t,e){return t.start==e.start?t.pitches[0]-e.pitches[0]:t.start-e.start}));for(const t of r.notes)if(t.pitches[0]==n.modCount-1-i&&(c+=Math.min(a-h,t.start-h)*n.ticksPerPart*this.getSamplesPerTickSpecificBPM(l),t.start<a))for(let e=1;e<t.pins.length;e++){if(t.pins[e-1].time+t.start<=a){const i=n.ticksPerPart*Math.min(a-(t.start+t.pins[e-1].time),t.pins[e].time-t.pins[e-1].time),r=t.pins[e-1].size+n.modulators.dictionary.tempo.convertRealFactor;let o=t.pins[e].size+n.modulators.dictionary.tempo.convertRealFactor;t.pins[e].time+t.start>a&&(o=t.pins[e-1].size+(t.pins[e].size-t.pins[e-1].size)*(a-(t.start+t.pins[e-1].time))/(t.pins[e].time-t.pins[e-1].time)+n.modulators.dictionary.tempo.convertRealFactor);let s=n.partsPerBeat*n.ticksPerPart/60;c+=o!=r?-this.samplesPerSecond*i*(Math.log(s*o*i)-Math.log(s*r*i))/(s*(r-o)):i*this.getSamplesPerTickSpecificBPM(o),l=o}h=Math.min(t.start+t.pins[e].time,a)}}}}}c+=(a-h)*n.ticksPerPart*this.getSamplesPerTickSpecificBPM(l),t++,0!=i&&t==this.song.loopStart+this.song.loopLength&&(t=this.song.loopStart,i>0&&i--),t>=r&&(e=!0)}return Math.ceil(c)}return this.getSamplesPerBar()*this.getTotalBars(t,e,i)}getTotalBars(t,e,n=this.loopRepeatCount){if(null==this.song)throw new Error;let i=this.song.loopLength*(n+1);return t&&(i+=this.song.loopStart),e&&(i+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),i}setSong(t){"string"==typeof t?this.song=new bt(t):t instanceof bt&&(this.song=t),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=Ft.fittingPowerOfTwo(this.samplesPerSecond*n.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.chorusDelayBufferSize=Ft.fittingPowerOfTwo(this.samplesPerSecond*n.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){null!=this.audioCtx&&null!=this.scriptNode||(this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(2048,0,2):this.audioCtx.createJavaScriptNode(2048,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.reloadbuffer=!0,this.computeDelayBufferSizes()),this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.isPlayingSong=!0,this.activateAudio(),this.warmUpSynthesizer(this.song),this.computeLatestModValues())}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.modValues=[],this.nextModValues=[],null!=this.song)){this.song.inVolumeCap=0,this.song.outVolumeCap=0;for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)this.modInsValues[t]=[],this.nextModInsValues[t]=[]}}resetEffects(){if(this.limit=0,this.freeAllTones(),null!=this.song)for(const t of this.channels)for(const e of t.instruments)e.resetAllEffects()}setModValue(t,e,i,a,r,o){let s=t+n.modulators[o].convertRealFactor,l=e+n.modulators[o].convertRealFactor;return n.modulators[o].forSong?null!=this.modValues[o]&&this.modValues[o]==s&&this.nextModValues[o]==l||(this.modValues[o]=s,this.nextModValues[o]=l):null!=this.modInsValues[a][r][o]&&this.modInsValues[a][r][o]==s&&this.nextModInsValues[a][r][o]==l||(this.modInsValues[a][r][o]=s,this.nextModInsValues[a][r][o]=l),s}getModValue(t,e,i,a){if(n.modulators[t].forSong){if(null!=this.modValues[t]&&null!=this.nextModValues[t])return a?this.nextModValues[t]:this.modValues[t]}else if(null!=e&&null!=i&&null!=this.modInsValues[e][i][t]&&null!=this.nextModInsValues[e][i][t])return a?this.nextModInsValues[e][i][t]:this.modInsValues[e][i][t];return-1}isAnyModActive(t,e){for(let i=0;i<n.modulators.length;i++)if(null!=this.modValues&&null!=this.modValues[i]||null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][e]&&null!=this.modInsValues[t][e][i])return!0;return!1}unsetMod(t,e,n){(this.isModActive(t)||null!=e&&null!=n&&this.isModActive(t,e,n))&&(this.modValues[t]=null,this.nextModValues[t]=null,null!=e&&null!=n&&(this.modInsValues[e][n][t]=null,this.nextModInsValues[e][n][t]=null))}isFilterModActive(t,e,n){const i=this.song.channels[e].instruments[n];if(t){if(i.noteFilterType)return!1;if(null!=i.tmpNoteFilterEnd)return!0}else{if(i.eqFilterType)return!1;if(null!=i.tmpEqFilterEnd)return!0}return!1}isModActive(t,e,i){return n.modulators[t].forSong?null!=this.modValues&&null!=this.modValues[t]:null!=e&&null!=i&&null!=this.modInsValues&&null!=this.modInsValues[e]&&null!=this.modInsValues[e][i]&&null!=this.modInsValues[e][i][t]}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(t){this.bar=t,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const t=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;const t=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;const t=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-t,this.playing&&this.computeLatestModValues()}skipBar(){if(!this.song)return;const t=this.getSamplesPerTick();this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=t,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)}synthesize(t,e,i,a=!0){if(null==this.song){for(let n=0;n<i;n++)t[n]=0,e[n]=0;return void this.deactivateAudio()}const r=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0;let o=this.getSamplesPerTick(),s=!1;for(;this.tickSampleCountdown<=0;)this.tickSampleCountdown+=o;this.tickSampleCountdown>o&&(this.tickSampleCountdown=o),a&&(this.beat>=r.beatsPerBar&&(this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=o,0!=this.loopRepeatCount&&this.bar==r.loopStart+r.loopLength&&(this.bar=r.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)),this.bar>=r.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(s=!0,this.pause()))),this.syncSongState(),(null==this.tempMonoInstrumentSampleBuffer||this.tempMonoInstrumentSampleBuffer.length<i)&&(this.tempMonoInstrumentSampleBuffer=new Float32Array(i));const l=+this.volume,c=1-Math.pow(.5,4/this.samplesPerSecond),h=1-Math.pow(.5,4e3/this.samplesPerSecond);let d=+this.limit,p=0;for(;p<i&&!s;){this.nextBar=this.bar+1,0!=this.loopRepeatCount&&this.nextBar==r.loopStart+r.loopLength&&(this.nextBar=r.loopStart),this.nextBar>=r.barCount&&(this.nextBar=null);const m=i-p,u=Math.ceil(this.tickSampleCountdown),f=Math.min(u,m);if(this.isAtEndOfTick=f>=this.tickSampleCountdown,this.isPlayingSong||this.renderingSong)for(let t=r.pitchChannelCount+r.noiseChannelCount;t<r.getChannelCount();t++){const e=r.channels[t],n=this.channels[t];this.determineCurrentActiveTones(r,t,a);for(let i=0;i<e.instruments.length;i++){const e=n.instruments[i];for(let n=0;n<e.activeModTones.count();n++){const i=e.activeModTones.get(n);this.playModTone(r,t,o,p,f,i,!1,!1)}}}this.wantToSkip&&(this.wantToSkip=!1,this.skipBar());for(let i=0;i<r.pitchChannelCount+r.noiseChannelCount;i++){const s=r.channels[i],l=this.channels[i];this.determineCurrentActiveTones(r,i,a),this.determineLiveInputTones(r,i);for(let a=0;a<s.instruments.length;a++){const c=s.instruments[a],h=l.instruments[a];let d=0;for(let t=0;t<h.activeTones.count();t++){const e=h.activeTones.get(t);this.playTone(r,i,o,p,f,e,!1,!1),d++}for(let t=0;t<h.liveInputTones.count();t++){const e=h.liveInputTones.get(t);this.playTone(r,i,o,p,f,e,!1,!1),d++}for(let t=0;t<h.releasedTones.count();t++){const e=h.releasedTones.get(t);if(e.ticksSinceReleased>=Math.abs(c.getFadeOutTicks())){this.freeReleasedTone(h,t),t--;continue}const a=d>=n.maximumTonesPerChannel;this.playTone(r,i,o,p,f,e,!0,a),d++}h.awake&&(h.computed||h.compute(this,c,o,f,null,i,a),Ft.effectsSynth(this,t,e,p,f,c,h),h.computed=!1);const m=this.tickSampleCountdown,u=1-m/o,y=1-(m-f)/o,g=(this.beat*n.partsPerBeat+this.part)*n.ticksPerPart+this.tick,b=g/n.ticksPerPart,v=(g+1)/n.ticksPerPart,k=b+(v-b)*u,w=b+(v-b)*y;let S=c.vibratoSpeed;c.LFOtime=c.nextLFOtime,this.isModActive(n.modulators.dictionary["vibrato speed"].index,i,a)&&(S=this.getModValue(n.modulators.dictionary["vibrato speed"].index,i,a)),0==S?(c.LFOtime=0,c.nextLFOtime=0):c.nextLFOtime+=.1*S*(w-k)}}const y=p+f;for(let n=p;n<y;n++){const i=t[n]*r.masterGain*r.masterGain,a=e[n]*r.masterGain*r.masterGain,o=i<0?-i:i,s=a<0?-a:a,p=o>s?o:s;this.song.inVolumeCap=this.song.inVolumeCap>p?this.song.inVolumeCap:p;const m=+(p>r.compressionThreshold)+ +(p>r.limitThreshold),u=+(0==m)*((.8*(p+1-r.compressionThreshold)+.25)*r.compressionRatio+1.05*(1-r.compressionRatio))+1.05*+(1==m)+ +(2==m)*(1.05*((p+1-r.limitThreshold)*r.limitRatio+(1-r.limitThreshold)));d+=(u-d)*(d<u?h:c);const f=l/(d>=1?1.05*d:.8*d+.25);t[n]=i*f,e[n]=a*f,this.song.outVolumeCap=this.song.outVolumeCap>p*f?this.song.outVolumeCap:p*f}if(p+=f,this.isAtStartOfTick=!1,this.tickSampleCountdown-=f,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(const t of this.channels)for(const e of t.instruments){for(let t=0;t<e.releasedTones.count();t++){const n=e.releasedTones.get(t);n.isOnLastTick?(this.freeReleasedTone(e,t),t--):n.ticksSinceReleased++}e.deactivateAfterThisTick&&e.deactivate(),e.tonesAddedInThisTick=!1}for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let e=0;e<this.song.channels[t].instruments.length;e++){let i=this.song.channels[t].instruments[e],a=i.arpeggioSpeed;this.isModActive(n.modulators.dictionary["arp speed"].index,t,e)?(a=this.getModValue(n.modulators.dictionary["arp speed"].index,t,e,!1),Number.isInteger(a)?i.arpTime+=n.arpSpeedScale[a]:i.arpTime+=(1-a%1)*n.arpSpeedScale[Math.floor(a)]+a%1*n.arpSpeedScale[Math.ceil(a)]):i.arpTime+=n.arpSpeedScale[a]}for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let e=0;e<this.song.channels[t].instruments.length;e++){let n=this.song.channels[t].instruments[e];null!=n.tmpEqFilterEnd?n.tmpEqFilterStart=n.tmpEqFilterEnd:n.tmpEqFilterStart=n.eqFilter,null!=n.tmpNoteFilterEnd?n.tmpNoteFilterStart=n.tmpNoteFilterEnd:n.tmpNoteFilterStart=n.noteFilter}this.tick++,this.tickSampleCountdown+=o,this.tick==n.ticksPerPart&&(this.tick=0,this.part++,this.liveInputDuration--,this.part==n.partsPerBeat&&(this.part=0,a&&(this.beat++,this.beat==r.beatsPerBar&&(this.beat=0,this.prevBar=this.bar,this.bar++,0!=this.loopRepeatCount&&this.bar==r.loopStart+r.loopLength&&(this.bar=r.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=r.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(s=!0,this.resetEffects(),this.pause()))))))}for(let t=0;t<n.modulators.length;t++)null!=this.nextModValues&&null!=this.nextModValues[t]&&(this.modValues[t]=this.nextModValues[t]);this.isModActive(n.modulators.dictionary.tempo.index)&&(o=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,o));for(let t=0;t<this.song.pitchChannelCount;t++)for(let e of this.song.channels[t].instruments)e.nextLFOtime=e.nextLFOtime%(n.vibratoTypes[e.vibratoType].period/(n.ticksPerPart*o/this.samplesPerSecond)),e.arpTime=e.arpTime%(2520*n.ticksPerArpeggio);for(let t=0;t<n.modulators.length;t++)for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let n=0;n<this.song.getMaxInstrumentsPerChannel();n++)null!=this.nextModInsValues&&null!=this.nextModInsValues[e]&&null!=this.nextModInsValues[e][n]&&null!=this.nextModInsValues[e][n][t]&&(this.modInsValues[e][n][t]=this.nextModInsValues[e][n][t])}(!Number.isFinite(d)||Math.abs(d)<Y)&&(d=0),this.limit=d,a&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/o)/2+this.part)/n.partsPerBeat+this.beat)/r.beatsPerBar+this.bar)}freeTone(t){this.tonePool.pushBack(t)}newTone(){if(this.tonePool.count()>0){const t=this.tonePool.popBack();return t.freshlyAllocated=!0,t}return new wt}releaseTone(t,e){t.releasedTones.pushFront(e),e.atNoteStart=!1,e.passedEndOfNote=!0}freeReleasedTone(t,e){this.freeTone(t.releasedTones.get(e)),t.releasedTones.remove(e)}freeAllTones(){for(const t of this.channels)for(const e of t.instruments){for(;e.activeTones.count()>0;)this.freeTone(e.activeTones.popBack());for(;e.activeModTones.count()>0;)this.freeTone(e.activeModTones.popBack());for(;e.releasedTones.count()>0;)this.freeTone(e.releasedTones.popBack());for(;e.liveInputTones.count()>0;)this.freeTone(e.liveInputTones.popBack())}}determineLiveInputTones(t,e){const n=t.channels[e],i=this.channels[e],a=this.liveInputPitches;for(let t=0;t<n.instruments.length;t++){const r=i.instruments[t],o=r.liveInputTones;let s=0;if(this.liveInputDuration>0&&e==this.liveInputChannel&&a.length>0&&-1!=this.liveInputInstruments.indexOf(t)){const e=n.instruments[t];if(e.getChord().singleTone){let n;o.count()<=s?(n=this.newTone(),o.pushBack(n)):!e.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(r,o.get(s)),n=this.newTone(),o.set(s,n)):n=o.get(s),s++;for(let t=0;t<a.length;t++)n.pitches[t]=a[t];n.pitchCount=a.length,n.chordSize=1,n.instrumentIndex=t,n.note=n.prevNote=n.nextNote=null,n.atNoteStart=this.liveInputStarted,n.forceContinueAtStart=!1,n.forceContinueAtEnd=!1}else for(let n=0;n<a.length;n++){let i;o.count()<=s?(i=this.newTone(),o.pushBack(i)):!e.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(r,o.get(s)),i=this.newTone(),o.set(s,i)):i=o.get(s),s++,i.pitches[0]=a[n],i.pitchCount=1,i.chordSize=a.length,i.instrumentIndex=t,i.note=i.prevNote=i.nextNote=null,i.atNoteStart=this.liveInputStarted,i.forceContinueAtStart=!1,i.forceContinueAtEnd=!1}}for(;o.count()>s;)this.releaseTone(r,o.popBack())}this.liveInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(t,e,n,i,a,r,o,s,l,c){if(t.patternInstruments&&-1==i.instruments.indexOf(a)){if(n.instruments.length>1||i.instruments.length>1)return null;const t=e.instruments[i.instruments[0]];if(c)return t.getChord();const a=t.getTransition();return r.includeAdjacentPatterns&&a.includeAdjacentPatterns&&a.slides==r.slides?t.getChord():null}return c||r.includeAdjacentPatterns?o:null}static adjacentNotesHaveMatchingPitches(t,e){if(t.pitches.length!=e.pitches.length)return!1;const n=t.pins[t.pins.length-1].interval;for(const i of t.pitches)if(-1==e.pitches.indexOf(i+n))return!1;return!0}determineCurrentActiveTones(t,e,i){const a=t.channels[e],r=this.channels[e],o=t.getPattern(e,this.bar),s=this.getCurrentPart(),l=this.tick+n.ticksPerPart*s;if(i&&t.getChannelIsMod(e)){let i=[],c=[],h=[],d=n.modCount;for(;d--;)i.push(null),c.push(null),h.push(null);if(null!=o&&!a.muted)for(let t=0;t<o.notes.length;t++)o.notes[t].end<=s?(null==c[o.notes[t].pitches[0]]||o.notes[t].end>c[o.notes[t].pitches[0]].start)&&(c[o.notes[t].pitches[0]]=o.notes[t]):o.notes[t].start<=s&&o.notes[t].end>s?i[o.notes[t].pitches[0]]=o.notes[t]:o.notes[t].start>s&&(null==h[o.notes[t].pitches[0]]||o.notes[t].start<h[o.notes[t].pitches[0]].start)&&(h[o.notes[t].pitches[0]]=o.notes[t]);let p=0;const m=t.patternInstruments&&null!=o?o.instruments[0]:0,u=r.instruments[m],f=u.activeModTones;for(let t=0;t<n.modCount;t++){if(null!=i[t]&&(null!=c[t]&&c[t].end!=i[t].start&&(c[t]=null),null!=h[t]&&h[t].start!=i[t].end&&(h[t]=null)),null!=r.singleSeamlessInstrument&&r.singleSeamlessInstrument!=m&&r.singleSeamlessInstrument<r.instruments.length){const t=r.instruments[r.singleSeamlessInstrument],e=r.instruments[m];for(;t.activeModTones.count()>0;)e.activeModTones.pushFront(t.activeModTones.popBack())}if(r.singleSeamlessInstrument=m,null!=i[t]){let e=c[t],a=h[t],r=!1,o=!1;const s=n.ticksPerPart*i[t].start==l&&this.isAtStartOfTick;let d;if(f.count()<=p)d=this.newTone(),f.pushBack(d);else if(s&&null==e){const t=f.get(p);t.isOnLastTick?this.freeTone(t):this.releaseTone(u,t),d=this.newTone(),f.set(p,d)}else d=f.get(p);p++;for(let e=0;e<i[t].pitches.length;e++)d.pitches[e]=i[t].pitches[e];d.pitchCount=i[t].pitches.length,d.chordSize=1,d.instrumentIndex=m,d.note=i[t],d.noteStartPart=i[t].start,d.noteEndPart=i[t].end,d.prevNote=e,d.nextNote=a,d.prevNotePitchIndex=0,d.nextNotePitchIndex=0,d.atNoteStart=s,d.passedEndOfNote=!1,d.forceContinueAtStart=r,d.forceContinueAtEnd=o}}for(;f.count()>p;){const n=f.popBack(),i=t.channels[e];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const t=this.channels[e].instruments[n.instrumentIndex];this.releaseTone(t,n)}else this.freeTone(n)}}else if(!t.getChannelIsMod(e)){let c=null,h=null,d=null;if(i&&null!=o&&!a.muted){for(let t=0;t<o.notes.length;t++)if(o.notes[t].end<=s)h=o.notes[t];else if(o.notes[t].start<=s&&o.notes[t].end>s)c=o.notes[t];else if(o.notes[t].start>s){d=o.notes[t];break}null!=c&&(null!=h&&h.end!=c.start&&(h=null),null!=d&&d.start!=c.end&&(d=null))}if(null!=o&&(!t.layeredInstruments||1==a.instruments.length||t.patternInstruments&&1==o.instruments.length)){const e=t.patternInstruments?o.instruments[0]:0;if(null!=r.singleSeamlessInstrument&&r.singleSeamlessInstrument!=e&&r.singleSeamlessInstrument<r.instruments.length){const t=r.instruments[r.singleSeamlessInstrument],n=r.instruments[e];for(;t.activeTones.count()>0;)n.activeTones.pushFront(t.activeTones.popBack())}r.singleSeamlessInstrument=e}else r.singleSeamlessInstrument=null;for(let i=0;i<a.instruments.length;i++){const p=r.instruments[i],m=p.activeTones;let u=0;if(null!=c&&(!t.patternInstruments||-1!=o.instruments.indexOf(i))){const r=a.instruments[i];let f=h,y=d;const g=n.partsPerBeat*t.beatsPerBar,b=r.getTransition(),v=r.getChord();let k=!1,w=!1,S=0,M=0;if(0==c.start){let n=null==this.prevBar?null:t.getPattern(e,this.prevBar);if(null!=n){const e=n.notes.length<=0?null:n.notes[n.notes.length-1];if(null!=e&&e.end==g){const r=c.continuesLastPattern&&Ft.adjacentNotesHaveMatchingPitches(e,c),s=this.adjacentPatternHasCompatibleInstrumentTransition(t,a,o,n,i,b,v,c,e,r);null!=s&&(f=e,S=s.singleTone?1:f.pitches.length,k=r)}}}else null!=f&&(S=v.singleTone?1:f.pitches.length);if(c.end==g){let n=null==this.nextBar?null:t.getPattern(e,this.nextBar);if(null!=n){const e=n.notes.length<=0?null:n.notes[0];if(null!=e&&0==e.start){const r=e.continuesLastPattern&&Ft.adjacentNotesHaveMatchingPitches(c,e),s=this.adjacentPatternHasCompatibleInstrumentTransition(t,a,o,n,i,b,v,c,e,r);null!=s&&(y=e,M=s.singleTone?1:y.pitches.length,w=r)}}}else null!=y&&(M=v.singleTone?1:y.pitches.length);if(v.singleTone){const t=n.ticksPerPart*c.start==l&&this.isAtStartOfTick;let e;if(m.count()<=u)e=this.newTone(),m.pushBack(e);else if(!t||(b.isSeamless||r.clicklessTransition||k)&&null!=f)e=m.get(u);else{const t=m.get(u);t.isOnLastTick?this.freeTone(t):this.releaseTone(p,t),e=this.newTone(),m.set(u,e)}u++;for(let t=0;t<c.pitches.length;t++)e.pitches[t]=c.pitches[t];e.pitchCount=c.pitches.length,e.chordSize=1,e.instrumentIndex=i,e.note=c,e.noteStartPart=c.start,e.noteEndPart=c.end,e.prevNote=f,e.nextNote=y,e.prevNotePitchIndex=0,e.nextNotePitchIndex=0,e.atNoteStart=t,e.passedEndOfNote=!1,e.forceContinueAtStart=k,e.forceContinueAtEnd=w}else{const t=r.getTransition();if((t.isSeamless&&!t.slides&&0==v.strumParts||k)&&n.ticksPerPart*c.start==l&&this.isAtStartOfTick&&null!=f){for(let t=0;t<m.count();t++){const e=m.get(t),n=e.pitches[0]+e.lastInterval;for(let i=0;i<c.pitches.length;i++)if(c.pitches[i]==n){this.tempMatchedPitchTones[i]=e,m.remove(t),t--;break}}for(;m.count()>0;){const t=m.popFront();for(let e=0;e<this.tempMatchedPitchTones.length;e++)if(null==this.tempMatchedPitchTones[e]){this.tempMatchedPitchTones[e]=t;break}}}let e=0;for(let a=0;a<c.pitches.length;a++){let r=S>a?f:null,o=c,h=M>a?y:null,d=o.start+e,g=!1;if(d>s){if(!(m.count()>a&&(t.isSeamless||k)&&null!=r))break;h=o,o=r,r=null,d=o.start+e,g=!0}let b=o.end;(t.isSeamless||k)&&null!=h&&(b=Math.min(n.partsPerBeat*this.song.beatsPerBar,b+e)),(t.continues||k)&&null!=r||(e+=v.strumParts);const F=n.ticksPerPart*d==l&&this.isAtStartOfTick;let x;if(null!=this.tempMatchedPitchTones[u])x=this.tempMatchedPitchTones[u],this.tempMatchedPitchTones[u]=null,m.pushBack(x);else if(m.count()<=u)x=this.newTone(),m.pushBack(x);else if(!F||(t.isSeamless||k)&&null!=r)x=m.get(u);else{const t=m.get(u);t.isOnLastTick?this.freeTone(t):this.releaseTone(p,t),x=this.newTone(),m.set(u,x)}u++,x.pitches[0]=o.pitches[a],x.pitchCount=1,x.chordSize=o.pitches.length,x.instrumentIndex=i,x.note=o,x.noteStartPart=d,x.noteEndPart=b,x.prevNote=r,x.nextNote=h,x.prevNotePitchIndex=a,x.nextNotePitchIndex=a,x.atNoteStart=F,x.passedEndOfNote=g,x.forceContinueAtStart=k&&null!=r,x.forceContinueAtEnd=w&&null!=h}}}for(;m.count()>u;){const n=m.popBack(),i=t.channels[e];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const t=this.channels[e].instruments[n.instrumentIndex];this.releaseTone(t,n)}else this.freeTone(n)}for(let t=u;t<this.tempMatchedPitchTones.length;t++){const e=this.tempMatchedPitchTones[t];null!=e&&(e.isOnLastTick?this.freeTone(e):this.releaseTone(p,e),this.tempMatchedPitchTones[t]=null)}}}}playTone(t,e,n,i,a,r,o,s){const l=t.channels[e],c=this.channels[e],h=l.instruments[r.instrumentIndex],d=c.instruments[r.instrumentIndex];d.awake=!0,d.tonesAddedInThisTick=!0,d.computed||d.compute(this,h,n,a,r,e,r.instrumentIndex),Ft.computeTone(this,t,e,n,a,r,o,s);Ft.getInstrumentSynthFunction(h)(this,i,a,r,h),r.envelopeComputer.clearEnvelopes(h)}playModTone(t,e,i,a,r,o,s,l){const c=t.channels[e].instruments[o.instrumentIndex];if(null!=o.note){const t=this.getTicksIntoBar(),e=t/n.ticksPerPart,s=(t+1)/n.ticksPerPart,l=this.tickSampleCountdown,h=e+(s-e)*(1-l/i),d=e+(s-e)*(1-(l-r)/i),p=n.ticksPerPart*h,m=n.ticksPerPart*d,u=o.note.getEndPinIndex(this.getCurrentPart()),f=o.note.pins[u-1],y=o.note.pins[u],g=(o.note.start+f.time)*n.ticksPerPart,b=(o.note.start+y.time)*n.ticksPerPart,v=(p-g)/(b-g),k=(m-g)/(b-g);o.expressionStarts[0]=f.size+(y.size-f.size)*v,o.expressionDeltas[0]=f.size+(y.size-f.size)*k-o.expressionStarts[0],Ft.modSynth(this,a,r,o,c)}}static computeChordExpression(t){return 1/(.25*(t-1)+1)}static computeTone(t,e,i,a,r,o,s,l){const c=e.channels[i].instruments[o.instrumentIndex],d=c.getTransition(),p=c.getChord(),m=p.singleTone?1:Ft.computeChordExpression(o.chordSize),b=e.getChannelIsNoise(i),v=b?n.noiseInterval:1,k=n.ticksPerPart*a/t.samplesPerSecond,w=1/t.samplesPerSecond,S=1/n.partsPerBeat,M=t.tickSampleCountdown,F=1-M/a,x=1-(M-r)/a,C=t.getTicksIntoBar(),I=C/n.ticksPerPart,P=(C+1)/n.ticksPerPart,D=I+(P-I)*F,A=I+(P-I)*x,T=t.getCurrentPart();o.specialIntervalMult=1,o.specialIntervalExpressionMult=1;let E=l,q=0,O=0,R=1,L=1,N=m,z=m,B=16,H=n.keys[e.key].basePitch,G=1,V=48;if(3==c.type)G=n.spectrumBaseExpression,b&&(H=n.spectrumBasePitch,G*=2),B=n.spectrumBasePitch,V=28;else if(4==c.type)H=n.spectrumBasePitch,G=n.drumsetBaseExpression,B=H;else if(2==c.type)H=n.chipNoises[c.chipNoise].basePitch,G=n.noiseBaseExpression,B=H,V=n.chipNoises[c.chipNoise].isSoft?24:60;else if(1==c.type||10==c.type)G=n.fmBaseExpression;else if(0==c.type||8==c.type)G=n.chipBaseExpression;else if(5==c.type)G=n.harmonicsBaseExpression;else if(6==c.type)G=n.pwmBaseExpression;else if(7==c.type)G=n.pickedStringBaseExpression;else{if(9!=c.type)throw new Error("Unknown instrument type in computeTone.");G=1,B=0,V=1,H=0}(o.atNoteStart&&!d.isSeamless&&!o.forceContinueAtStart||o.freshlyAllocated)&&o.reset(),o.freshlyAllocated=!1;const $=Math.max(n.maxChordSize,n.operatorCount+2);for(let t=0;t<$;t++)o.phaseDeltas[t]=0,o.expressionStarts[t]=0,o.expressionDeltas[t]=0,o.phaseDeltaScales[t]=0;if(s){const t=o.ticksSinceReleased+F,e=o.ticksSinceReleased+x;q=O=o.lastInterval;const i=Math.abs(c.getFadeOutTicks());R=Ft.noteSizeToVolumeMult((1-t/i)*n.noteSizeMax),L=Ft.noteSizeToVolumeMult((1-e/i)*n.noteSizeMax),l&&(R*=1-F,L*=1-x),o.ticksSinceReleased+1>=i&&(E=!0)}else if(null==o.note)R=L=1,o.lastInterval=0,o.ticksSinceReleased=0,o.liveInputSamplesHeld+=r;else{const e=o.note,i=o.nextNote,a=o.noteStartPart,r=o.noteEndPart,s=e.getEndPinIndex(T),l=e.pins[s-1],h=e.pins[s],p=a*n.ticksPerPart,m=r*n.ticksPerPart,u=(e.start+l.time)*n.ticksPerPart,f=(e.start+h.time)*n.ticksPerPart;o.ticksSinceReleased=0;const y=T*n.ticksPerPart+t.tick,g=T*n.ticksPerPart+t.tick+1,b=y-p,v=g-p,k=Math.min(1,(y-u)/(f-u)),w=Math.min(1,(g-u)/(f-u));let S=1,M=1,C=l.interval+(h.interval-l.interval)*k,I=l.interval+(h.interval-l.interval)*w;if(o.lastInterval=I,!d.isSeamless&&!o.forceContinueAtEnd||null==i){const t=-c.getFadeOutTicks();if(t>0){const e=m-p;S*=Math.min(1,(e-b)/t),M*=Math.min(1,(e-v)/t),g>=p+e&&(E=!0)}}q=C+(I-C)*F,O=C+(I-C)*x,R=S+(M-S)*F,L=S+(M-S)*x}o.isOnLastTick=E;let W,j,U=c.noteFilter;if(c.noteFilterType){const e=c.noteFilter;null==c.noteSubFilters[1]&&(c.noteSubFilters[1]=new ut);const a=c.noteSubFilters[1];let r=c.noteFilterSimpleCut,s=c.noteFilterSimplePeak,l=c.noteFilterSimpleCut,h=c.noteFilterSimplePeak,d=!1;t.isModActive(n.modulators.dictionary["note filt cut"].index,i,o.instrumentIndex)&&(r=t.getModValue(n.modulators.dictionary["note filt cut"].index,i,o.instrumentIndex,!1),l=t.getModValue(n.modulators.dictionary["note filt cut"].index,i,o.instrumentIndex,!0),d=!0),t.isModActive(n.modulators.dictionary["note filt peak"].index,i,o.instrumentIndex)&&(s=t.getModValue(n.modulators.dictionary["note filt peak"].index,i,o.instrumentIndex,!1),h=t.getModValue(n.modulators.dictionary["note filt peak"].index,i,o.instrumentIndex,!0),d=!0),e.convertLegacySettingsForSynth(r,s,!d),a.convertLegacySettingsForSynth(l,h,!d),W=e.controlPoints[0],j=a.controlPoints[0],c.noteFilter=e,c.tmpNoteFilterStart=e}const Q=o.envelopeComputer;Q.computeEnvelopes(c,T,n.ticksPerPart*D,n.ticksPerPart*A,k*(A-D),o);const _=o.envelopeComputer.envelopeStarts,K=o.envelopeComputer.envelopeEnds;if(c.noteFilter=U,null!=o.note&&d.slides){const t=o.prevNote,e=o.nextNote;if(null!=t){const e=t.pitches[o.prevNotePitchIndex]+t.pins[t.pins.length-1].interval-o.pitches[0];if(Q.prevSlideStart&&(q+=e*Q.prevSlideRatioStart),Q.prevSlideEnd&&(O+=e*Q.prevSlideRatioEnd),!p.singleTone){const e=t.pitches.length-o.chordSize;Q.prevSlideStart&&(N=Ft.computeChordExpression(o.chordSize+e*Q.prevSlideRatioStart)),Q.prevSlideEnd&&(z=Ft.computeChordExpression(o.chordSize+e*Q.prevSlideRatioEnd))}}if(null!=e){const t=e.pitches[o.nextNotePitchIndex]-(o.pitches[0]+o.note.pins[o.note.pins.length-1].interval);if(Q.nextSlideStart&&(q+=t*Q.nextSlideRatioStart),Q.nextSlideEnd&&(O+=t*Q.nextSlideRatioEnd),!p.singleTone){const t=e.pitches.length-o.chordSize;Q.nextSlideStart&&(N=Ft.computeChordExpression(o.chordSize+t*Q.nextSlideRatioStart)),Q.nextSlideEnd&&(z=Ft.computeChordExpression(o.chordSize+t*Q.nextSlideRatioEnd))}}}if(u(c.effects)){let e=n.justIntonationSemitones[c.pitchShift]/v,a=1,r=1;t.isModActive(n.modulators.dictionary["pitch shift"].index,i,o.instrumentIndex)&&(e=n.justIntonationSemitones[n.justIntonationSemitones.length-1],a=t.getModValue(n.modulators.dictionary["pitch shift"].index,i,o.instrumentIndex,!1)/n.pitchShiftCenter,r=t.getModValue(n.modulators.dictionary["pitch shift"].index,i,o.instrumentIndex,!0)/n.pitchShiftCenter);q+=e*_[14]*a,O+=e*K[14]*r}if(f(c.effects)||t.isModActive(n.modulators.dictionary["song detune"].index,i,o.instrumentIndex)){const e=_[15],a=K[15];let r=c.detune,s=c.detune;t.isModActive(n.modulators.dictionary.detune.index,i,o.instrumentIndex)&&(r=t.getModValue(n.modulators.dictionary.detune.index,i,o.instrumentIndex,!1)+n.detuneCenter,s=t.getModValue(n.modulators.dictionary.detune.index,i,o.instrumentIndex,!0)+n.detuneCenter),t.isModActive(n.modulators.dictionary["song detune"].index,i,o.instrumentIndex)&&(r+=4*t.getModValue(n.modulators.dictionary["song detune"].index,i,o.instrumentIndex,!1),s+=4*t.getModValue(n.modulators.dictionary["song detune"].index,i,o.instrumentIndex,!0)),q+=Ft.detuneToCents(r*e)*n.pitchesPerOctave/1200,O+=Ft.detuneToCents(s*a)*n.pitchesPerOctave/1200}if(y(c.effects)){let e,a,r,s;if(c.vibrato==n.vibratos.length?(e=2*c.vibratoDelay,c.vibratoDelay==n.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY),a=c.vibratoDepth,r=a):(e=n.vibratos[c.vibrato].delayTicks,a=n.vibratos[c.vibrato].amplitude,r=a),t.isModActive(n.modulators.dictionary["vibrato delay"].index,i,o.instrumentIndex)&&(e=2*t.getModValue(n.modulators.dictionary["vibrato delay"].index,i,o.instrumentIndex,!1),e==2*n.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY)),t.isModActive(n.modulators.dictionary["vibrato depth"].index,i,o.instrumentIndex)&&(a=t.getModValue(n.modulators.dictionary["vibrato depth"].index,i,o.instrumentIndex,!1)/25,r=t.getModValue(n.modulators.dictionary["vibrato depth"].index,i,o.instrumentIndex,!0)/25),null!=o.prevVibrato)s=o.prevVibrato;else{if(s=a*Ft.getLFOAmplitude(c,k*c.LFOtime)*_[16],e>0){const t=e-Q.noteTicksStart;s*=Math.max(0,Math.min(1,1-t/2))}}let l=Ft.getLFOAmplitude(c,k*c.nextLFOtime);const h=K[16];if(9!=c.type){let t=r*l*h;if(e>0){const n=e-Q.noteTicksEnd;t*=Math.max(0,Math.min(1,1-n/2))}o.prevVibrato=t,q+=s,O+=t}}if(!d.isSeamless&&!o.forceContinueAtStart||null==o.prevNote){const t=c.getFadeInSeconds();t>0&&(R*=Math.min(1,Q.noteSecondsStart/t),L*=Math.min(1,Q.noteSecondsEnd/t))}4==c.type&&null==o.drumsetPitch&&(o.drumsetPitch=o.pitches[0],null!=o.note&&(o.drumsetPitch+=o.note.pickMainInterval()),o.drumsetPitch=Math.max(0,Math.min(n.drumCount-1,o.drumsetPitch)));let J=Q.lowpassCutoffDecayVolumeCompensation;if(g(c.effects)){const e=_[1],n=K[1];if(c.noteFilterType){const i=_[17],a=K[17],s=_[25],l=K[25];W.toCoefficients(Ft.tempFilterStartCoefficients,t.samplesPerSecond,e*i,s),j.toCoefficients(Ft.tempFilterEndCoefficients,t.samplesPerSecond,n*a,l),o.noteFilters.length<1&&(o.noteFilters[0]=new Z),o.noteFilters[0].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterEndCoefficients,1/r,0==W.type),J*=W.getVolumeCompensationMult(),o.noteFilterCount=1}else{const i=null!=c.tmpNoteFilterStart?c.tmpNoteFilterStart:c.noteFilter;for(let a=0;a<i.controlPointCount;a++){const s=_[17+a],l=K[17+a],h=_[25+a],d=K[25+a];let p=i.controlPoints[a];const m=null!=c.tmpNoteFilterEnd&&null!=c.tmpNoteFilterEnd.controlPoints[a]?c.tmpNoteFilterEnd.controlPoints[a]:i.controlPoints[a];p.type!=m.type&&(p=m),p.toCoefficients(Ft.tempFilterStartCoefficients,t.samplesPerSecond,e*s,h),m.toCoefficients(Ft.tempFilterEndCoefficients,t.samplesPerSecond,n*l,d),o.noteFilters.length<=a&&(o.noteFilters[a]=new Z),o.noteFilters[a].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterEndCoefficients,1/r,0==p.type),J*=p.getVolumeCompensationMult()}o.noteFilterCount=i.controlPointCount}}else o.noteFilterCount=0;if(4==c.type){const e=c.getDrumsetEnvelope(o.drumsetPitch);J*=kt.getLowpassCutoffDecayVolumeCompensation(e);let n=kt.computeEnvelope(e,Q.noteSecondsStart,S*D,Q.noteSizeStart),i=kt.computeEnvelope(e,Q.noteSecondsEnd,S*A,Q.noteSizeEnd);if(Q.prevSlideStart){n+=(kt.computeEnvelope(e,Q.prevNoteSecondsStart,S*D,Q.prevNoteSize)-n)*Q.prevSlideRatioStart}if(Q.prevSlideEnd){i+=(kt.computeEnvelope(e,Q.prevNoteSecondsEnd,S*A,Q.prevNoteSize)-i)*Q.prevSlideRatioEnd}if(Q.nextSlideStart){n+=(kt.computeEnvelope(e,0,S*D,Q.nextNoteSize)-n)*Q.nextSlideRatioStart}if(Q.nextSlideEnd){i+=(kt.computeEnvelope(e,0,S*A,Q.nextNoteSize)-i)*Q.nextSlideRatioEnd}const a=t.tempDrumSetControlPoint;a.type=0,a.gain=mt.getRoundedSettingValueFromLinearGain(.5),a.freq=mt.getRoundedSettingValueFromHz(8e3),a.toCoefficients(Ft.tempFilterStartCoefficients,t.samplesPerSecond,n*(1+n),1),a.toCoefficients(Ft.tempFilterEndCoefficients,t.samplesPerSecond,i*(1+i),1),o.noteFilters.length==o.noteFilterCount&&(o.noteFilters[o.noteFilterCount]=new Z),o.noteFilters[o.noteFilterCount].loadCoefficientsWithGradient(Ft.tempFilterStartCoefficients,Ft.tempFilterEndCoefficients,1/r,!0),o.noteFilterCount++}if(J=Math.min(3,J),1==c.type||10==c.type){let e=1,a=0,s=0;const l=p.arpeggiates;if(o.pitchCount>1&&l){const t=Math.floor(c.arpTime/n.ticksPerArpeggio);s=o.pitches[h(o.pitchCount,c.fastTwoNoteArp,t)]-o.pitches[0]}const d=10==c.type?c.customAlgorithm.carrierCount:n.algorithms[c.algorithm].carrierCount;for(let h=0;h<(10==c.type?6:n.operatorCount);h++){const p=10==c.type?c.customAlgorithm.associatedCarrier[h]-1:n.algorithms[c.algorithm].associatedCarrier[h]-1,m=o.pitches[l?0:h<o.pitchCount?h:p<o.pitchCount?p:0],u=n.operatorFrequencies[c.operators[h].frequency].mult,f=n.operatorCarrierInterval[p]+s,y=H+(m+q)*v+f,g=H+(m+O)*v+f,b=yt.frequencyFromPitch(y),k=yt.frequencyFromPitch(g),S=n.operatorFrequencies[c.operators[h].frequency].hzOffset,M=u*b+S,F=u*k+S,x=_[5+h],C=K[5+h];let I,P;1!=x||1!=C?(I=Math.pow(2,Math.log2(M/b)*x)*b,P=Math.pow(2,Math.log2(F/k)*C)*k):(I=M,P=F),o.phaseDeltas[h]=I*w*n.sineWaveLength,o.phaseDeltaScales[h]=Math.pow(P/I,1/r);let D=c.operators[h].amplitude,A=c.operators[h].amplitude;h<4?t.isModActive(n.modulators.dictionary["fm slider 1"].index+h,i,o.instrumentIndex)&&(D*=t.getModValue(n.modulators.dictionary["fm slider 1"].index+h,i,o.instrumentIndex,!1)/15,A*=t.getModValue(n.modulators.dictionary["fm slider 1"].index+h,i,o.instrumentIndex,!0)/15):t.isModActive(n.modulators.dictionary["fm slider 5"].index+h-4,i,o.instrumentIndex)&&(D*=t.getModValue(n.modulators.dictionary["fm slider 5"].index+h-4,i,o.instrumentIndex,!1)/15,A*=t.getModValue(n.modulators.dictionary["fm slider 5"].index+h-4,i,o.instrumentIndex,!0)/15);const T=Ft.operatorAmplitudeCurve(D),E=Ft.operatorAmplitudeCurve(A);let $=T*n.operatorFrequencies[c.operators[h].frequency].amplitudeSign,W=E*n.operatorFrequencies[c.operators[h].frequency].amplitudeSign;if(h<d){const t=Math.pow(2,-(y-B)/V),e=Math.pow(2,-(g-B)/V);$*=G*t*R*J*N,W*=G*e*L*J*z,$*=_[0],W*=K[0],a+=E}else $*=1.5*n.sineWaveLength,W*=1.5*n.sineWaveLength,e*=1-Math.min(1,c.operators[h].amplitude/15);if($*=_[9+h],W*=K[9+h],t.isModActive(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex)){const e=t.getModValue(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex,!1),a=t.getModValue(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex,!0);$*=e<=0?(e+n.volumeRange/2)/(n.volumeRange/2):this.instrumentVolumeToVolumeMult(e),W*=a<=0?(a+n.volumeRange/2)/(n.volumeRange/2):this.instrumentVolumeToVolumeMult(a)}o.expressionStarts[h]=$,o.expressionDeltas[h]=(W-$)/r}e*=(Math.pow(2,2-1.4*c.feedbackAmplitude/15)-1)/3,e*=1-Math.min(1,Math.max(0,a-1)/2),e=1+3*e;for(let t=0;t<d;t++)o.expressionStarts[t]*=e,o.expressionDeltas[t]*=e;let m=c.feedbackAmplitude,u=c.feedbackAmplitude;t.isModActive(n.modulators.dictionary["fm feedback"].index,i,o.instrumentIndex)&&(m*=t.getModValue(n.modulators.dictionary["fm feedback"].index,i,o.instrumentIndex,!1)/15,u*=t.getModValue(n.modulators.dictionary["fm feedback"].index,i,o.instrumentIndex,!0)/15);let f=.3*n.sineWaveLength*m/15;const y=.3*n.sineWaveLength*u/15;let g=f*_[13],b=y*K[13];o.feedbackMult=g,o.feedbackDelta=(b-o.feedbackMult)/r}else{const e=Math.pow(2,(O-q)*v/12/r);let a=o.pitches[0];if(o.pitchCount>1&&(p.arpeggiates||p.customInterval)){const t=Math.floor(c.arpTime/n.ticksPerArpeggio);if(p.customInterval){const e=o.pitches[1+h(o.pitchCount-1,c.fastTwoNoteArp,t)]-o.pitches[0];o.specialIntervalMult=Math.pow(2,e/12),o.specialIntervalExpressionMult=Math.pow(2,-e/V)}else a=o.pitches[h(o.pitchCount,c.fastTwoNoteArp,t)]}const s=H+(a+q)*v,l=H+(a+O)*v;let m=Math.pow(2,-(s-B)/V),u=Math.pow(2,-(l-B)/V),f=G*J;if(2==c.type&&(f*=n.chipNoises[c.chipNoise].expression),0==c.type&&(f*=n.chipWaves[c.chipWave].expression),6==c.type){const e=c.pulseWidth/(2*n.pulseWidthRange);let a=e,s=e;t.isModActive(n.modulators.dictionary["pulse width"].index,i,o.instrumentIndex)&&(a=t.getModValue(n.modulators.dictionary["pulse width"].index,i,o.instrumentIndex,!1)/(2*n.pulseWidthRange),s=t.getModValue(n.modulators.dictionary["pulse width"].index,i,o.instrumentIndex,!0)/(2*n.pulseWidthRange));const l=a*_[2],h=s*K[2];o.pulseWidth=l,o.pulseWidthDelta=(h-l)/r}if(7==c.type){let e=c.stringSustain,a=c.stringSustain;t.isModActive(n.modulators.dictionary.sustain.index,i,o.instrumentIndex)&&(e=t.getModValue(n.modulators.dictionary.sustain.index,i,o.instrumentIndex,!1),a=t.getModValue(n.modulators.dictionary.sustain.index,i,o.instrumentIndex,!1)),o.stringSustainStart=e,o.stringSustainEnd=a,f*=Math.pow(2,.7*(1-e/(n.stringSustainRange-1)));const r=n.unisons[c.unison];for(let t=o.pickedStrings.length;t<r.voices;t++)o.pickedStrings[t]=new vt;if(o.atNoteStart&&!d.continues&&!o.forceContinueAtStart)for(const t of o.pickedStrings)t.delayIndex=-1}const y=yt.frequencyFromPitch(s);if(0==c.type||8==c.type||5==c.type||7==c.type){const t=n.unisons[c.unison],i=7==c.type?1:t.voices/2;f*=t.expression*i;const a=_[4],s=K[4],l=Math.pow(2,(t.offset+t.spread)*a/12),h=Math.pow(2,(t.offset+t.spread)*s/12),d=Math.pow(2,(t.offset-t.spread)*a/12)*o.specialIntervalMult,p=Math.pow(2,(t.offset-t.spread)*s/12)*o.specialIntervalMult;o.phaseDeltas[0]=y*w*l,o.phaseDeltas[1]=y*w*d,o.phaseDeltaScales[0]=e*Math.pow(h/l,1/r),o.phaseDeltaScales[1]=e*Math.pow(p/d,1/r)}else o.phaseDeltas[0]=y*w,o.phaseDeltaScales[0]=e;let g=f*R*N*m*_[0],b=f*L*z*u*K[0];if(t.isModActive(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex)){const e=t.getModValue(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex,!1),a=t.getModValue(n.modulators.dictionary["note volume"].index,i,o.instrumentIndex,!0);g*=e<=0?(e+n.volumeRange/2)/(n.volumeRange/2):this.instrumentVolumeToVolumeMult(e),b*=a<=0?(a+n.volumeRange/2)/(n.volumeRange/2):this.instrumentVolumeToVolumeMult(a)}o.expressionStarts[0]=g,o.expressionDeltas[0]=(b-g)/r}}static getLFOAmplitude(t,e){let i=0;for(const a of n.vibratoTypes[t.vibratoType].periodsSeconds)i+=Math.sin(2*Math.PI*e/a);return i}static getInstrumentSynthFunction(t){if(1==t.type){const e=t.algorithm+"_"+t.feedbackType;if(null==Ft.fmSynthFunctionCache[e]){const i=[];for(const e of Ft.fmSourceTemplate)if(-1!=e.indexOf("// CARRIER OUTPUTS")){const a=[];for(let e=0;e<n.algorithms[t.algorithm].carrierCount;e++)a.push("operator"+e+"Scaled");i.push(e.replace("/*operator#Scaled*/",a.join(" + ")))}else if(-1!=e.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let e=n.operatorCount-1;e>=0;e--)for(const a of Ft.operatorSourceTemplate)if(-1!=a.indexOf("/* + operator@Scaled*/")){let r="";for(const i of n.algorithms[t.algorithm].modulatedBy[e])r+=" + operator"+(i-1)+"Scaled";const o=n.feedbacks[t.feedbackType].indices[e];if(o.length>0){r+=" + feedbackMult * (";const t=[];for(const e of o)t.push("operator"+(e-1)+"Output");r+=t.join(" + ")+")"}i.push(a.replace(/\#/g,e+"").replace("/* + operator@Scaled*/",r))}else i.push(a.replace(/\#/g,e+""));else if(-1!=e.indexOf("#"))for(let t=0;t<n.operatorCount;t++)i.push(e.replace(/\#/g,t+""));else i.push(e);Ft.fmSynthFunctionCache[e]=new Function("synth","bufferIndex","runLength","tone","instrument",i.join("\n"))}return Ft.fmSynthFunctionCache[e]}if(0==t.type)return Ft.chipSynth;if(8==t.type)return Ft.chipSynth;if(5==t.type)return Ft.harmonicsSynth;if(6==t.type)return Ft.pulseWidthSynth;if(7==t.type)return Ft.pickedStringSynth;if(2==t.type)return Ft.noiseSynth;if(3==t.type)return Ft.spectrumSynth;if(4==t.type)return Ft.drumsetSynth;if(9==t.type)return Ft.modSynth;if(10==t.type){const e=t.customAlgorithm.name+"_"+t.customFeedbackType.name;if(null==Ft.fm6SynthFunctionCache[e]){const i=[];for(const e of Ft.fmSourceTemplate)if(-1!=e.indexOf("// CARRIER OUTPUTS")){const n=[];for(let e=0;e<t.customAlgorithm.carrierCount;e++)n.push("operator"+e+"Scaled");i.push(e.replace("/*operator#Scaled*/",n.join(" + ")))}else if(-1!=e.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let e=n.operatorCount+2-1;e>=0;e--)for(const n of Ft.operatorSourceTemplate)if(-1!=n.indexOf("/* + operator@Scaled*/")){let a="";for(const n of t.customAlgorithm.modulatedBy[e])a+=" + operator"+(n-1)+"Scaled";const r=t.customFeedbackType.indices[e];if(r.length>0){a+=" + feedbackMult * (";const t=[];for(const e of r)t.push("operator"+(e-1)+"Output");a+=t.join(" + ")+")"}i.push(n.replace(/\#/g,e+"").replace("/* + operator@Scaled*/",a))}else i.push(n.replace(/\#/g,e+""));else if(-1!=e.indexOf("#"))for(let t=0;t<n.operatorCount+2;t++)i.push(e.replace(/\#/g,t+""));else i.push(e);Ft.fm6SynthFunctionCache[e]=new Function("synth","bufferIndex","runLength","tone","instrument",i.join("\n"))}return Ft.fm6SynthFunctionCache[e]}throw new Error("Unrecognized instrument type: "+t.type)}static chipSynth(t,e,i,a,r){const o=b(r.effects)&&r.aliases,s=8==r.type,l=t.tempMonoInstrumentSampleBuffer;var c,h=1;s?o?(c=r.customChipWave,h=.05):(c=r.customChipWaveIntegral,h=.05):c=o?n.rawChipWaves[r.chipWave].samples:n.chipWaves[r.chipWave].samples;const d=c.length-1,p=a.specialIntervalExpressionMult*n.unisons[r.unison].sign;0!=r.unison||r.getChord().customInterval||(a.phases[1]=a.phases[0]);let m=a.phaseDeltas[0]*d,u=a.phaseDeltas[1]*d;const f=+a.phaseDeltaScales[0],y=+a.phaseDeltaScales[1];let g=+a.expressionStarts[0];const v=+a.expressionDeltas[0];let k=a.phases[0]%1*d,w=a.phases[1]%1*d;const S=a.noteFilters,M=0|a.noteFilterCount;let F=+a.initialNoteFilterInput1,x=+a.initialNoteFilterInput2;const C=Ft.applyFilters;let I=0,P=0;if(!o){const t=0|k,e=0|w,n=t%d,i=e%d,a=k-t,r=w-e;I=+c[n],P=+c[i],I+=(c[n+1]-I)*a,P+=(c[i+1]-P)*r}const D=e+i;for(let t=e;t<D;t++){let e,n,i;if(k+=m,w+=u,o)e=c[(0|k)%d],n=c[(0|w)%d],i=e+n;else{const t=0|k,a=0|w,r=t%d,o=a%d;let s=c[r],l=c[o];const h=k-t,f=w-a;s+=(c[r+1]-s)*h,l+=(c[o+1]-l)*f,e=(s-I)/m,n=(l-P)/u,I=s,P=l,i=e+n*p}const a=C(i,F,x,M,S);x=F,F=i,m*=f,u*=y;const r=a*g*h;g+=v,l[t]+=r}a.phases[0]=k/d,a.phases[1]=w/d,t.sanitizeFilters(S),a.initialNoteFilterInput1=F,a.initialNoteFilterInput2=x}static harmonicsSynth(t,e,i,a,r){const o=t.tempMonoInstrumentSampleBuffer,s=r.harmonicsWave.getCustomWave(r.type),l=s.length-1,c=a.specialIntervalExpressionMult*n.unisons[r.unison].sign;0!=r.unison||r.getChord().customInterval||(a.phases[1]=a.phases[0]);let h=a.phaseDeltas[0]*l,d=a.phaseDeltas[1]*l;const p=+a.phaseDeltaScales[0],m=+a.phaseDeltaScales[1];let u=+a.expressionStarts[0];const f=+a.expressionDeltas[0];let y=a.phases[0]%1*l,g=a.phases[1]%1*l;const b=a.noteFilters,v=0|a.noteFilterCount;let k=+a.initialNoteFilterInput1,w=+a.initialNoteFilterInput2;const S=Ft.applyFilters,M=0|y,F=0|g,x=M%l,C=F%l,I=y-M,P=g-F;let D=+s[x],A=+s[C];D+=(s[x+1]-D)*I,A+=(s[C+1]-A)*P;const T=e+i;for(let t=e;t<T;t++){y+=h,g+=d;const e=0|y,n=0|g,i=e%l,a=n%l;let r=s[i],M=s[a];const F=y-e,x=g-n;r+=(s[i+1]-r)*F,M+=(s[a+1]-M)*x;const C=(r-D)/h,I=(M-A)/d;D=r,A=M;const P=C+I*c,T=S(P,k,w,v,b);w=k,k=P,h*=p,d*=m;const E=T*u;u+=f,o[t]+=E}a.phases[0]=y/l,a.phases[1]=g/l,t.sanitizeFilters(b),a.initialNoteFilterInput1=k,a.initialNoteFilterInput2=w}static pickedStringSynth(t,e,i,a,r){const o=n.unisons[r.unison].voices;let s=Ft.pickedStringFunctionCache[o];if(null==s){let t="";t+=`\n\t\t\t\t\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst NoteAutomationStringSustainIndex = 3;\n\t\t\t\tconst voiceCount = ${o};\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tconst sustainEnvelopeStart = tone.envelopeComputer.envelopeStarts[NoteAutomationStringSustainIndex];\n\t\t\t\tconst sustainEnvelopeEnd   = tone.envelopeComputer.envelopeEnds[  NoteAutomationStringSustainIndex];\n\t\t\t\tconst stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n\t\t\t\tconst stringDecayEnd   = 1.0 - Math.min(1.0, sustainEnvelopeEnd   * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\t\n\t\t\t\tconst prevDelayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet shelfSample# = +pickedString#.shelfSample;\n\t\t\t\tlet shelfPrevInput# = +pickedString#.shelfPrevInput;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expressionStarts[0];\n\t\t\t\tconst expressionDelta = +tone.expressionDeltas[0];\n\t\t\t\t\n\t\t\t\tconst phaseDeltaStart# = +tone.phaseDeltas[#];\n\t\t\t\tconst phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\t\t\t\tconst phaseDeltaEnd# = phaseDeltaStart# * Math.pow(phaseDeltaScale#, runLength);\n\t\t\t\t\n\t\t\t\tconst radiansPerSampleStart# = Math.PI * 2.0 * phaseDeltaStart#;\n\t\t\t\tconst radiansPerSampleEnd#   = Math.PI * 2.0 * phaseDeltaEnd#;\n\t\t\t\t\n\t\t\t\tconst centerHarmonicStart# = radiansPerSampleStart# * 2.0;\n\t\t\t\tconst centerHarmonicEnd#   = radiansPerSampleEnd# * 2.0;\n\t\t\t\t\n\t\t\t\tconst allPassCenter = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n\t\t\t\tconst allPassRadiansStart# = Math.min(Math.PI, radiansPerSampleStart# * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart#, Config.pickedStringDispersionFreqScale));\n\t\t\t\tconst allPassRadiansEnd# = Math.min(Math.PI, radiansPerSampleEnd# * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd#, Config.pickedStringDispersionFreqScale));\n\t\t\t\t\n\t\t\t\tconst shelfRadians = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n\t\t\t\tconst decayCurveStart = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n\t\t\t\tconst decayCurveEnd   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\n\t\t\t\tconst decayRateStart# = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart#);\n\t\t\t\tconst decayRateEnd#   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd#);\n\t\t\t\tconst shelfGainStart# = Math.pow(decayRateStart#, Config.stringDecayRate);\n\t\t\t\tconst shelfGainEnd#   = Math.pow(decayRateEnd#,   Config.stringDecayRate);\n\t\t\t\tconst expressionDecayStart# = Math.pow(decayRateStart#, 0.002);\n\t\t\t\tconst expressionDecayEnd#   = Math.pow(decayRateEnd#,   0.002);`;for(let e=0;e<o;e++)t+="\n\t\t\t\t\n\t\t\t\tSynth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart#);\n\t\t\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart#);\n\t\t\t\tlet allPassG# = +Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n\t\t\t\tconst allPassPhaseDelayStart# = -synth.tempFrequencyResponse.angle() / centerHarmonicStart#;\n\t\t\t\t\n\t\t\t\tSynth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd#);\n\t\t\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd#);\n\t\t\t\tconst allPassGEnd# = +Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n\t\t\t\tconst allPassPhaseDelayEnd# = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd#;\n\t\t\t\t\n\t\t\t\tSynth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, shelfGainStart#);\n\t\t\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart#)\n\t\t\t\tlet shelfA1# = +Synth.tempFilterStartCoefficients.a[1]\n\t\t\t\tlet shelfB0# = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart#\n\t\t\t\tlet shelfB1# = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart#\n\t\t\t\tconst shelfPhaseDelayStart# = -synth.tempFrequencyResponse.angle() / centerHarmonicStart#;\n\t\t\t\t\n\t\t\t\tSynth.tempFilterEndCoefficients.highShelf1stOrder(shelfRadians, shelfGainEnd#)\n\t\t\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd#)\n\t\t\t\tconst shelfA1End# = +Synth.tempFilterEndCoefficients.a[1]\n\t\t\t\tconst shelfB0End# = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd#\n\t\t\t\tconst shelfB1End# = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd#\n\t\t\t\tconst shelfPhaseDelayEnd# = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd#;".replace(/\#/g,String(e));t+="\n\t\t\t\t\n\t\t\t\tconst periodLengthStart# = 1.0 / phaseDeltaStart#;\n\t\t\t\tconst periodLengthEnd# = 1.0 / phaseDeltaEnd#;\n\t\t\t\tconst minBufferLength# = Math.ceil(Math.max(periodLengthStart#, periodLengthEnd#) * 2);\n\t\t\t\tlet delayLength# = periodLengthStart# - allPassPhaseDelayStart# - shelfPhaseDelayStart#;\n\t\t\t\tconst delayLengthEnd# = periodLengthEnd# - allPassPhaseDelayEnd# - shelfPhaseDelayEnd#;\n\t\t\t\t\n\t\t\t\tconst delayLengthDelta# = (delayLengthEnd# - delayLength#) / runLength;\n\t\t\t\tconst allPassGDelta# = (allPassGEnd# - allPassG#) / runLength;\n\t\t\t\tconst shelfA1Delta# = (shelfA1End# - shelfA1#) / runLength;\n\t\t\t\tconst shelfB0Delta# = (shelfB0End# - shelfB0#) / runLength;\n\t\t\t\tconst shelfB1Delta# = (shelfB1End# - shelfB1#) / runLength;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst pitchChanged# = Math.abs(Math.log2(delayLength# / prevDelayLength#)) > 0.01;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;";for(let e=0;e<o;e++)t+="\n\t\t\t\t\t\n\t\t\t\tconst reinitializeImpulse# = (delayIndex# == -1 || pitchChanged#);\n\t\t\t\tif (pickedString#.delayLine == null || pickedString#.delayLine.length <= minBufferLength#) {\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\t\t\tconst likelyMaximumLength = Math.ceil(2 * synth.samplesPerSecond / beepbox.Instrument.frequencyFromPitch(12));\n\t\t\t\t\tconst newDelayLine = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength#)));\n\t\t\t\t\tif (!reinitializeImpulse# && pickedString#.delayLine != null) {\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\t\t\tconst oldDelayBufferMask = (pickedString#.delayLine.length - 1) >> 0;\n\t\t\t\t\t\tconst startCopyingFromIndex = delayIndex# + pickedString#.delayResetOffset;\n\t\t\t\t\t\tdelayIndex# = pickedString#.delayLine.length - pickedString#.delayResetOffset;\n\t\t\t\t\t\tfor (let i = 0; i < pickedString#.delayLine.length; i++) {\n\t\t\t\t\t\t\tnewDelayLine[i] = pickedString#.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpickedString#.delayLine = newDelayLine;\n\t\t\t\t}\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\n\t\t\t\tif (reinitializeImpulse#) {\n\t\t\t\t\t// -1 delay index means the tone was reset.\n\t\t\t\t\t// Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\t\t\t\t\t\n\t\t\t\t\tdelayIndex# = 0;\n\t\t\t\t\tallPassSample# = 0.0;\n\t\t\t\t\tallPassPrevInput# = 0.0;\n\t\t\t\t\tshelfSample# = 0.0;\n\t\t\t\t\tshelfPrevInput# = 0.0;\n\t\t\t\t\tfractionalDelaySample# = 0.0;\n\t\t\t\t\t\n\t\t\t\t\t// Clear away a region of the delay buffer for the new impulse.\n\t\t\t\t\tconst startImpulseFrom = -delayLength#;\n\t\t\t\t\tconst startZerosFrom = Math.floor(startImpulseFrom - periodLengthStart# / 2);\n\t\t\t\t\tconst stopZerosAt = Math.ceil(startZerosFrom + periodLengthStart# * 2);\n\t\t\t\t\tpickedString#.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n\t\t\t\t\tfor (let i = startZerosFrom; i <= stopZerosAt; i++) {\n\t\t\t\t\t\tdelayLine#[i & delayBufferMask#] = 0.0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst impulseWave = instrument.harmonicsWave.getCustomWave(instrument.type);\n\t\t\t\t\tconst impulseWaveLength = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\t\t\t\t\tconst impulsePhaseDelta = impulseWaveLength / periodLengthStart#;\n\t\t\t\t\t\n\t\t\t\t\tconst fadeDuration = Math.min(periodLengthStart# * 0.2, synth.samplesPerSecond * 0.003);\n\t\t\t\t\tconst startImpulseFromSample = Math.ceil(startImpulseFrom);\n\t\t\t\t\tconst stopImpulseAt = startImpulseFrom + periodLengthStart# + fadeDuration;\n\t\t\t\t\tconst stopImpulseAtSample = stopImpulseAt;\n\t\t\t\t\tlet impulsePhase = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n\t\t\t\t\tlet prevWaveIntegral = 0.0;\n\t\t\t\t\tfor (let i = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n\t\t\t\t\t\tconst impulsePhaseInt = impulsePhase|0;\n\t\t\t\t\t\tconst index = impulsePhaseInt % impulseWaveLength;\n\t\t\t\t\t\tlet nextWaveIntegral = impulseWave[index];\n\t\t\t\t\t\tconst phaseRatio = impulsePhase - impulsePhaseInt;\n\t\t\t\t\t\tnextWaveIntegral += (impulseWave[index+1] - nextWaveIntegral) * phaseRatio;\n\t\t\t\t\t\tconst sample = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n\t\t\t\t\t\tconst fadeIn = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n\t\t\t\t\t\tconst fadeOut = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n\t\t\t\t\t\tconst combinedFade = fadeIn * fadeOut;\n\t\t\t\t\t\tconst curvedFade = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n\t\t\t\t\t\tdelayLine#[i & delayBufferMask#] += sample * curvedFade;\n\t\t\t\t\t\tprevWaveIntegral = nextWaveIntegral;\n\t\t\t\t\t\timpulsePhase += impulsePhaseDelta;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;".replace(/\#/g,String(e));t+="\n\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * Config.unisons[instrument.unison].sign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n            //const floorStereoDelay: number = absStereoDelay | 0;\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tshelfSample# = shelfB0# * allPassSample# + shelfB1# * shelfPrevInput# - shelfA1# * shelfSample#;\n\t\t\t\t\tshelfPrevInput# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += shelfSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (";const e=[];for(let t=0;t<o;t++)e.push("fractionalDelaySample"+t+(1==t?" * unisonSign":""));t+=e.join(" + "),t+=") * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tshelfA1# += shelfA1Delta#;\n\t\t\t\t\tshelfB0# += shelfB0Delta#;\n\t\t\t\t\tshelfB1# += shelfB1Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(shelfSample#) || Math.abs(shelfSample#) < epsilon) shelfSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(shelfPrevInput#) || Math.abs(shelfPrevInput#) < epsilon) shelfPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.shelfSample = shelfSample#;\n\t\t\t\tpickedString#.shelfPrevInput = shelfPrevInput#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;",t=t.replace(/^.*\#.*$/gm,(t=>{const e=[];for(let n=0;n<o;n++)e.push(t.replace(/\#/g,String(n)));return e.join("\n")})),s=new Function("synth","bufferIndex","runLength","tone","instrument",t),Ft.pickedStringFunctionCache[o]=s}s(t,e,i,a,r)}static effectsSynth(t,e,n,i,a,r,o){const s=b(r.effects),l=v(r.effects),c=o.eqFilterCount>0,h=k(r.effects),d=w(r.effects),p=S(r.effects),m=M(r.effects);let u=0;s&&(u|=1),u<<=1,l&&(u|=1),u<<=1,c&&(u|=1),u<<=1,h&&(u|=1),u<<=1,d&&(u|=1),u<<=1,p&&(u|=1),u<<=1,m&&(u|=1);let f=Ft.effectsFunctionCache[u];if(null==f){let t="";const e=d||m||p;t+="\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolumeStart;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;",e&&(t+="\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMultStart;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;"),s&&(t+="\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +beepbox.Config.distortionBaseVolume;\n\t\t\t\tconst distortionStart = +Math.pow(1.0 - 0.895 * (Math.pow(20.0, instrumentState.distortionStart) - 1.0) / 19.0, 2.0)\n\t\t\t\tconst distortionEnd   = +Math.pow(1.0 - 0.895 * (Math.pow(20.0, instrumentState.distortionEnd  ) - 1.0) / 19.0, 2.0)\n\t\t\t\tlet distortion = distortionStart;\n\t\t\t\tconst distortionDelta = (distortionEnd - distortionStart) / runLength;\n\t\t\t\tconst distortionDriveStart = (1.0 + 2.0 * instrumentState.distortionStart) / distortionBaseVolume;\n\t\t\t\tconst distortionDriveEnd   = (1.0 + 2.0 * instrumentState.distortionEnd)   / distortionBaseVolume;\n\t\t\t\tlet distortionDrive = distortionDriveStart;\n\t\t\t\tconst distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / runLength;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;"),l&&(t+="\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;"),c&&(t+="\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = beepbox.Synth.applyFilters;"),t+="\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolumeStart;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;",h&&(t+="\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeStartL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeStartR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = panningDelayPos - instrumentState.panningOffsetStartL + synth.panningDelayBufferSize;\n\t\t\t\tlet   panningOffsetR      = panningDelayPos - instrumentState.panningOffsetStartR + synth.panningDelayBufferSize;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;"),d&&(t+="\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tconst chorusStart = +instrumentState.chorusStart;\n\t\t\t\tconst chorusEnd   = +instrumentState.chorusEnd;\n\t\t\t\tlet chorusVoiceMult = chorusStart;\n\t\t\t\tconst chorusVoiceMultDelta = (chorusEnd - chorusStart) / runLength;\n\t\t\t\tlet chorusCombinedMult = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n\t\t\t\tconst chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n\t\t\t\tconst chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMult) / runLength;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;"),p&&(t+="\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMultStart;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;"),m&&(t+="\n\t\t\t\t\n\t\t\t\tconst reverbMask = beepbox.Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMultStart;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;"),t+="\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;",s&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;"),l&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;"),c&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;"),t+="\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;",t+=h?"\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;":"\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;",d&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;"),p&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;"),m&&(t+="\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;"),t+="\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;",e&&(t+="\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;"),t+="\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);",s&&(t+="\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;"),l&&(t+="\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;"),c&&(t+="\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;"),h&&(t+="\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;"),d&&(t+="\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;"),p&&(t+="\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;"),m&&(t+="\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos  = reverbDelayPos;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;"),f=new Function("synth","outputDataL","outputDataR","bufferIndex","runLength","instrument","instrumentState",t),Ft.effectsFunctionCache[u]=f}f(t,e,n,i,a,r,o)}static pulseWidthSynth(t,e,n,i,a){const r=t.tempMonoInstrumentSampleBuffer;let o=i.phaseDeltas[0];const s=+i.phaseDeltaScales[0];let l=+i.expressionStarts[0];const c=+i.expressionDeltas[0];let h=i.phases[0]%1,d=i.pulseWidth;const p=i.pulseWidthDelta,m=i.noteFilters,u=0|i.noteFilterCount;let f=+i.initialNoteFilterInput1,y=+i.initialNoteFilterInput2;const g=Ft.applyFilters,b=e+n;for(let t=e;t<b;t++){const e=h%1,n=(h+d)%1;let i=n-e;if(!a.aliases){if(e<o)i+=.5*((v=e/o)+v-v*v-1);else if(e>1-o){i+=.5*((v=(e-1)/o)+v+v*v+1)}if(n<o)i-=.5*((v=n/o)+v-v*v-1);else if(n>1-o){var v;i-=.5*((v=(n-1)/o)+v+v*v+1)}}const b=i,k=g(b,f,y,u,m);y=f,f=b,h+=o,o*=s,d+=p;const w=k*l;l+=c,r[t]+=w}i.phases[0]=h,t.sanitizeFilters(m),i.initialNoteFilterInput1=f,i.initialNoteFilterInput2=y}static noiseSynth(t,e,i,a,r){const o=t.tempMonoInstrumentSampleBuffer;let s=r.getDrumWave(),l=+a.phaseDeltas[0];const c=+a.phaseDeltaScales[0];let h=+a.expressionStarts[0];const d=+a.expressionDeltas[0];let p=a.phases[0]%1*n.chipNoiseLength;0==a.phases[0]&&(p=Math.random()*n.chipNoiseLength);const m=n.chipNoiseLength-1;let u=+a.sample;const f=a.noteFilters,y=0|a.noteFilterCount;let g=+a.initialNoteFilterInput1,b=+a.initialNoteFilterInput2;const v=Ft.applyFilters,k=Math.min(1,a.phaseDeltas[0]*n.chipNoises[r.chipNoise].pitchFilterMult),w=e+i;for(let t=e;t<w;t++){u+=(s[p&m]-u)*k;const e=u,n=v(e,g,b,y,f);b=g,g=e,p+=l,l*=c;const i=n*h;h+=d,o[t]+=i}a.phases[0]=p/n.chipNoiseLength,a.sample=u,t.sanitizeFilters(f),a.initialNoteFilterInput1=g,a.initialNoteFilterInput2=b}static spectrumSynth(t,e,i,a,r){const o=t.tempMonoInstrumentSampleBuffer;let s=r.getDrumWave(),l=128*a.phaseDeltas[0];const c=+a.phaseDeltaScales[0];let h=+a.expressionStarts[0];const d=+a.expressionDeltas[0];let p=+a.sample;const m=a.noteFilters,u=0|a.noteFilterCount;let f=+a.initialNoteFilterInput1,y=+a.initialNoteFilterInput2;const g=Ft.applyFilters;let b=a.phases[0]%1*n.spectrumNoiseLength;0==a.phases[0]&&(b=Ft.findRandomZeroCrossing(s,n.spectrumNoiseLength)+l);const v=n.spectrumNoiseLength-1,k=Math.min(1,l),w=e+i;for(let t=e;t<w;t++){const e=0|b,n=e&v;let i=s[n];const a=b-e;i+=(s[n+1]-i)*a,p+=(i-p)*k;const r=p,w=g(r,f,y,u,m);y=f,f=r,b+=l,l*=c;const S=w*h;h+=d,o[t]+=S}a.phases[0]=b/n.spectrumNoiseLength,a.sample=p,t.sanitizeFilters(m),a.initialNoteFilterInput1=f,a.initialNoteFilterInput2=y}static drumsetSynth(t,e,i,a,r){const o=t.tempMonoInstrumentSampleBuffer;let s=r.getDrumsetWave(a.drumsetPitch),l=a.phaseDeltas[0]/yt.drumsetIndexReferenceDelta(a.drumsetPitch);const c=+a.phaseDeltaScales[0];let h=+a.expressionStarts[0];const d=+a.expressionDeltas[0],p=a.noteFilters,m=0|a.noteFilterCount;let u=+a.initialNoteFilterInput1,f=+a.initialNoteFilterInput2;const y=Ft.applyFilters;let g=a.phases[0]%1*n.spectrumNoiseLength;0==a.phases[0]&&(g=Ft.findRandomZeroCrossing(s,n.spectrumNoiseLength)+l);const b=n.spectrumNoiseLength-1,v=e+i;for(let t=e;t<v;t++){const e=0|g,n=e&b;let i=s[n];const a=g-e;i+=(s[n+1]-i)*a;const r=i,v=y(r,u,f,m,p);f=u,u=r,g+=l,l*=c;const k=v*h;h+=d,o[t]+=k}a.phases[0]=g/n.spectrumNoiseLength,t.sanitizeFilters(p),a.initialNoteFilterInput1=u,a.initialNoteFilterInput2=f}static modSynth(t,e,i,a,r){if(!t.song)return;let o=n.modCount-1-a.pitches[0];if(r.invalidModulators[o])return;let s=r.modulators[o],l=[];if(n.modulators[r.modulators[o]].forSong)l.push(0);else if(r.modInstruments[o]==t.song.channels[r.modChannels[o]].instruments.length)for(let e=0;e<t.song.channels[r.modChannels[o]].instruments.length;e++)l.push(e);else r.modInstruments[o]>t.song.channels[r.modChannels[o]].instruments.length?null!=t.song.getPattern(r.modChannels[o],t.bar)&&(l=t.song.getPattern(r.modChannels[o],t.bar).instruments):l.push(r.modInstruments[o]);for(let e=0;e<l.length;e++)if(t.setModValue(a.expressionStarts[0],a.expressionStarts[0]+a.expressionDeltas[0],o,r.modChannels[o],l[e],s),s==n.modulators.dictionary["reset arp"].index&&0==t.tick&&a.noteStartPart==t.beat*n.partsPerBeat+t.part)t.song.channels[r.modChannels[o]].instruments[l[e]].arpTime=0;else if(s==n.modulators.dictionary["next bar"].index)t.wantToSkip=!0;else if(s==n.modulators.dictionary["eq filter"].index){const s=t.song.channels[r.modChannels[o]].instruments[l[e]];if(!s.eqFilterType){let e=0|r.modFilterTypes[o];if(0==e){let e=0;const r=t.getTicksIntoBar()/n.ticksPerPart;for(;a.note.start+a.note.pins[e].time<=r;)e++;let o=(r-a.note.start+i/(t.getSamplesPerTick()*n.ticksPerPart)*n.ticksPerPart-a.note.pins[e-1].time)/(a.note.pins[e].time-a.note.pins[e-1].time);null!=s.eqSubFilters[a.note.pins[e-1].size]||null!=s.eqSubFilters[a.note.pins[e].size]?s.tmpEqFilterEnd=ut.lerpFilters(s.eqSubFilters[a.note.pins[e-1].size],s.eqSubFilters[a.note.pins[e].size],o):s.tmpEqFilterEnd=s.eqFilter}else{for(let t=0;t<n.filterMorphCount;t++)s.tmpEqFilterEnd==s.eqSubFilters[t]&&null!=s.tmpEqFilterEnd&&(s.tmpEqFilterEnd=new ut,s.tmpEqFilterEnd.fromJsonObject(s.eqSubFilters[t].toJsonObject()));null==s.tmpEqFilterEnd&&(s.tmpEqFilterEnd=new ut,s.tmpEqFilterEnd.fromJsonObject(s.eqFilter.toJsonObject())),s.tmpEqFilterEnd.controlPointCount>Math.floor((e-1)/2)&&(e%2?s.tmpEqFilterEnd.controlPoints[Math.floor((e-1)/2)].freq=a.expressionStarts[0]+a.expressionDeltas[0]:s.tmpEqFilterEnd.controlPoints[Math.floor((e-1)/2)].gain=a.expressionStarts[0]+a.expressionDeltas[0])}}}else if(s==n.modulators.dictionary["note filter"].index){const s=t.song.channels[r.modChannels[o]].instruments[l[e]];if(!s.noteFilterType){let e=0|r.modFilterTypes[o];if(0==e){let e=0;const r=t.getTicksIntoBar()/n.ticksPerPart;for(;a.note.start+a.note.pins[e].time<=r;)e++;let o=(r-a.note.start+i/(t.getSamplesPerTick()*n.ticksPerPart)*n.ticksPerPart-a.note.pins[e-1].time)/(a.note.pins[e].time-a.note.pins[e-1].time);null!=s.noteSubFilters[a.note.pins[e-1].size]||null!=s.noteSubFilters[a.note.pins[e].size]?s.tmpNoteFilterEnd=ut.lerpFilters(s.noteSubFilters[a.note.pins[e-1].size],s.noteSubFilters[a.note.pins[e].size],o):s.tmpNoteFilterEnd=s.noteFilter}else{for(let t=0;t<n.filterMorphCount;t++)s.tmpNoteFilterEnd==s.noteSubFilters[t]&&null!=s.tmpNoteFilterEnd&&(s.tmpNoteFilterEnd=new ut,s.tmpNoteFilterEnd.fromJsonObject(s.noteSubFilters[t].toJsonObject()));null==s.tmpNoteFilterEnd&&(s.tmpNoteFilterEnd=new ut,s.tmpNoteFilterEnd.fromJsonObject(s.noteFilter.toJsonObject())),s.tmpNoteFilterEnd.controlPointCount>Math.floor((e-1)/2)&&(e%2?s.tmpNoteFilterEnd.controlPoints[Math.floor((e-1)/2)].freq=a.expressionStarts[0]+a.expressionDeltas[0]:s.tmpNoteFilterEnd.controlPoints[Math.floor((e-1)/2)].gain=a.expressionStarts[0]+a.expressionDeltas[0])}}}}static findRandomZeroCrossing(t,e){let n=Math.random()*e;const i=e-1;let a=n&i,r=t[a];for(let o=128;o>0;o--){const o=a+16&i,s=t[o];if(r*s<=0){for(let o=0;o<16;o++){const o=a+1&i,s=t[o];if(r*s<=0){const t=s-r;n=a,Math.abs(t)>1e-8&&(n+=-r/t),n=Math.max(0,n)%e;break}a=o,r=s}break}a=o,r=s}return n}static instrumentVolumeToVolumeMult(t){return t==-n.volumeRange/2?0:Math.pow(2,n.volumeLogScale*t)}static volumeMultToInstrumentVolume(t){return t<=0?-n.volumeRange/2:Math.min(n.volumeRange,Math.log(t)/Math.LN2/n.volumeLogScale)}static noteSizeToVolumeMult(t){return Math.pow(Math.max(0,t)/n.noteSizeMax,1.5)}static volumeMultToNoteSize(t){return Math.pow(Math.max(0,t),1/1.5)*n.noteSizeMax}static fadeInSettingToSeconds(t){return.0125*(.95*t+.05*t*t)}static secondsToFadeInSetting(t){return at(0,n.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*t/.0125))/.1))}static fadeOutSettingToTicks(t){return n.fadeOutTicks[t]}static ticksToFadeOutSetting(t){let e=n.fadeOutTicks[0];if(t<=e)return 0;for(let i=1;i<n.fadeOutTicks.length;i++){let a=n.fadeOutTicks[i];if(t<=a)return t<(e+a)/2?i-1:i;e=a}return n.fadeOutTicks.length-1}static detuneToCents(t){return t-n.detuneCenter}static centsToDetune(t){return t+n.detuneCenter}static getOperatorWave(t,e){return 2!=t?n.operatorWaves[t]:n.pwmOperatorWaves[e]}getSamplesPerTick(){if(null==this.song)return 0;let t=this.song.getBeatsPerMinute();return this.isModActive(n.modulators.dictionary.tempo.index)&&(t=this.getModValue(n.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(t)}getSamplesPerTickSpecificBPM(t){const e=t/60,i=n.partsPerBeat*e,a=n.ticksPerPart*i;return this.samplesPerSecond/a}static fittingPowerOfTwo(t){return 1<<32-Math.clz32(Math.ceil(t)-1)}sanitizeFilters(t){let e=!1;for(const n of t){const t=Math.abs(n.output1),i=Math.abs(n.output2);if(!(t<100&&i<100)){e=!0;break}t<Y&&(n.output1=0),i<Y&&(n.output2=0)}if(e)for(const e of t)e.output1=0,e.output2=0}static sanitizeDelayLine(t,e,n){for(;;){const i=--e&n,a=Math.abs(t[i]);if(Number.isFinite(a)&&(0==a||a>=Y))break;t[i]=0}}static applyFilters(t,e,n,i,a){for(let r=0;r<i;r++){const i=a[r],o=i.output1,s=i.output2,l=i.a1,c=i.a2,h=i.b0,d=i.b1,p=i.b2;t=h*t+d*e+p*n-l*o-c*s,i.a1=l+i.a1Delta,i.a2=c+i.a2Delta,i.useMultiplicativeInputCoefficients?(i.b0=h*i.b0Delta,i.b1=d*i.b1Delta,i.b2=p*i.b2Delta):(i.b0=h+i.b0Delta,i.b1=d+i.b1Delta,i.b2=p+i.b2Delta),i.output2=o,i.output1=t,n=s,e=o}return t}}Ft.tempFilterStartCoefficients=new K,Ft.tempFilterEndCoefficients=new K,Ft.fmSynthFunctionCache={},Ft.fm6SynthFunctionCache={},Ft.effectsFunctionCache=Array(128).fill(void 0),Ft.pickedStringFunctionCache=Array(3).fill(void 0),Ft.fmSourceTemplate=("\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\tconst sineWave = beepbox.Config.sineWave;\n\t\t\t\n\t\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\n\t\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#];\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.expressionStarts[#];\n\t\tconst operator#OutputDelta = +tone.expressionDeltas[#];\n\t\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n\t\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\t\tconst feedbackDelta        = +tone.feedbackDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = beepbox.Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + runLength;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\t\t\n//const absStereoDelay: number = Math.abs(stereoDelay);\n//const fracStereoDelay: number = absStereoDelay % 1;\n//const floorStereoDelay: number = absStereoDelay | 0;\n\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\n\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\n\t\t\tdata[sampleIndex] += sample;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+n.sineWaveLength+";\n\t\t\ttone.feedbackOutputs[#] = operator#Output;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t").split("\n"),Ft.operatorSourceTemplate=("\nconst operator#Wave     = beepbox.Synth.getOperatorWave(instrument.operators[#].waveform, instrument.operators[#].pulseWidth).samples;\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+n.sineWaveMask+";\nconst operator#Sample   = operator#Wave[operator#Index];\noperator#Output       = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n");const{a:xt,button:Ct,div:It,h1:Pt,input:Dt,canvas:At}=O,{svg:Tt,circle:Et,rect:qt,path:Ot}=R;document.head.appendChild(O.style({type:"text/css"},`\n\tbody {\n\t\tcolor: ${V.primaryText};\n\t\tbackground: ${V.editorBackground};\n\t}\n\th1 {\n\t\tfont-weight: bold;\n\t\tfont-size: 14px;\n\t\tline-height: 22px;\n\t\ttext-align: initial;\n\t\tmargin: 0;\n\t}\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 12px;\n\t\tline-height: 22px;\n\t\twhite-space: nowrap;\n\t\tcolor: ${V.linkAccent};\n\t}\n\tbutton {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbackground: ${V.uiWidgetBackground};\n\t\tcolor: ${V.primaryText};\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-family: inherit;\n\t}\n\tbutton:hover, button:focus {\n\t\tbackground: ${V.uiWidgetFocus};\n\t}\n\t.playButton, .pauseButton {\n\t\tpadding-left: 24px;\n\t\tpadding-right: 6px;\n\t}\n\t.playButton::before {\n\t\tcontent: "";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${V.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t.pauseButton::before {\n\t\tcontent: "";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${V.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t\n\tinput[type=range] {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\theight: 16px;\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground-color: ${V.editorBackground};\n\t\ttouch-action: pan-y;\n\t}\n\tinput[type=range]:focus {\n\t\toutline: none;\n\t}\n\tinput[type=range]::-webkit-slider-runnable-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${V.uiWidgetBackground};\n\t}\n\tinput[type=range]::-webkit-slider-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${V.primaryText};\n\t\tcursor: pointer;\n\t\t-webkit-appearance: none;\n\t\tmargin-top: -6px;\n\t}\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\tbackground: ${V.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${V.uiWidgetBackground};\n\t}\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\tbackground: ${V.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tborder: none;\n\t\tbackground: ${V.primaryText};\n\t\tcursor: pointer;\n\t}\n\tinput[type=range]::-ms-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${V.uiWidgetBackground};\n\t\tborder-color: transparent;\n\t}\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\tbackground: ${V.uiWidgetFocus};\n\t}\n\tinput[type=range]::-ms-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${V.primaryText};\n\t\tcursor: pointer;\n\t}\n`)),V.setTheme("jummbox classic");let Rt,Lt=null,Nt=(4294967295*Math.random()>>>0).toString(16),zt=!1,Bt=!1,Ht=1,Gt=0,Vt=0;const $t=new Ft,Wt=new class{constructor(t,e,n=1){this.canvas=t,this.synth=e,this.scale=n,this.K(),this.J=function(e,i){if(i){var a=t.getContext("2d");a.fillStyle=V.getComputed("--editor-background"),a.fillRect(0,0,t.width,t.height),a.fillStyle=V.getComputed("--primary-text");for(let i=e.length-1;i>=e.length-1-t.width/n;i--){let r=i-(e.length-1)+t.width/n,o=e[i]*(t.height/n/2)+t.height/n/2;if(a.fillRect((r-1)*n,(o-1)*n,1*n,1.5*n),0==r)break}a.fillStyle=V.getComputed("--text-selection");for(let e=i.length-1;e>=i.length-1-t.width/n;e--){let r=e-(i.length-1)+t.width/n,o=i[e]*(t.height/n/2)+t.height/n/2;if(a.fillRect((r-1)*n,(o-1)*n,1*n,1.5*n),0==r)break}}},_.listen("oscillascopeUpdate",this.J)}K(t,e){if(!this.synth.copybroken){var n=this.synth.exposedBuffer;if(null!=n[0]&&n[0].length>=this.canvas.width&&this.synth.playing){var i=this.canvas.getContext("2d");i.fillStyle=V.getComputed("--editor-background"),i.fillRect(0,0,this.canvas.width,this.canvas.height),i.fillStyle=V.getComputed("--primary-text");for(let t=n[0].length-1;t>=n[0].length-1-this.canvas.width/this.scale;t--){let e=t-(n[0].length-1)+this.canvas.width/this.scale,a=n[0][t]*(this.canvas.height/this.scale/2)+this.canvas.height/this.scale/2;if(i.fillRect((e-1)*this.scale,(a-1)*this.scale,1*this.scale,1.5*this.scale),0==e)break}i.fillStyle=V.getComputed("--text-selection");for(let t=n[1].length-1;t>=n[1].length-1-this.canvas.width/this.scale;t--){let e=t-(n[1].length-1)+this.canvas.width/this.scale,a=n[1][t]*(this.canvas.height/this.scale/2)+this.canvas.height/this.scale/2;if(i.fillRect((e-1)*this.scale,(a-1)*this.scale,1*this.scale,1.5*this.scale),0==e)break}}}}}(At({width:288,height:64,style:"border:2px solid "+V.uiWidgetBackground,id:"oscilascopeAll"}),$t,2);let jt=Pt({style:"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;"},""),Ut=xt({target:"_top",style:"margin: 0 4px;"},"✎ Edit"),Qt=xt({href:"javascript:void(0)",style:"margin: 0 4px;"},"⎘ Copy URL"),_t=xt({href:"javascript:void(0)",style:"margin: 0 4px;"},"⤳ Share"),Kt=xt({target:"_top",style:"margin: 0 4px;"},"⇱ Fullscreen"),Jt=!1;const Zt=Ct({style:"width: 100%; height: 100%; max-height: 50px;"}),Yt=It({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},Zt),Xt=Ot({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),te=Ct({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Tt({width:12,height:12,viewBox:"0 0 12 12"},Xt)),ee=Tt({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},Ot({fill:V.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),ne=Dt({title:"volume",type:"range",value:75,min:0,max:75,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),ie=Tt({width:12,height:12,viewBox:"0 0 12 12"},Et({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),Ot({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),ae=Ct({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},ie),re=Tt({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),oe=It({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${V.playhead}; pointer-events: none;`}),se=It({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},re,oe),le=It({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},se),ce=R.rect({"pointer-events":"none",width:"90%",height:"50%",x:"5%",y:"25%",fill:V.uiWidgetBackground}),he=R.rect({"pointer-events":"none",height:"50%",width:"0%",x:"5%",y:"25%",fill:"url('#volumeGrad2')"}),de=R.rect({"pointer-events":"none",width:"2px",height:"50%",x:"5%",y:"25%",fill:V.uiWidgetFocus}),pe=R.stop({"stop-color":"lime",offset:"60%"}),me=R.stop({"stop-color":"orange",offset:"90%"}),ue=R.stop({"stop-color":"red",offset:"100%"}),fe=R.linearGradient({id:"volumeGrad2",gradientUnits:"userSpaceOnUse"},pe,me,ue),ye=R.defs({},fe),ge=R.svg({style:"touch-action: none; overflow: hidden; margin: auto;",width:"160px",height:"10px",preserveAspectRatio:"none"},ye,ce,he,de);function be(t,e){$t.setSong(t),$t.snapToStart();const n=$t.song.toBase64String();Ut.href="../#"+n}function ve(){let t=location.hash;if(Lt!=t&&""!=t){Lt=t,"#"==t.charAt(0)&&(t=t.substring(1)),Kt.href=location.href;for(const e of t.split("&")){let n=e.indexOf("=");if(-1!=n){let t=e.substring(0,n),i=e.substring(n+1);switch(t){case"song":be(i),$t.song&&(jt.textContent=$t.song.title);break;case"loop":$t.loopRepeatCount="1"!=i?0:-1,Ee()}}else be(t)}De()}}function ke(){$t.playing&&(Rt=requestAnimationFrame(ke),localStorage.getItem("playerId")!=Nt&&Se(),Pe(),we()),zt!=$t.playing&&Te()}function we(){if(null==$t.song)return de.setAttribute("x","5%"),void he.setAttribute("width","0%");var t,e;Gt--,Gt<=0&&(Vt-=.03),$t.song.outVolumeCap>Vt&&(Vt=$t.song.outVolumeCap,Gt=50),t=$t.song.outVolumeCap,e=Vt,he.setAttribute("width",""+Math.min(144,144*t)),de.setAttribute("x",""+(8+Math.min(144,144*e))),Wt.K(),$t.playing||(de.setAttribute("x","5%"),he.setAttribute("width","0%"))}function Se(){null!=$t.song&&(null!=Rt&&cancelAnimationFrame(Rt),Rt=null,$t.playing?($t.pause(),we()):($t.play(),localStorage.setItem("playerId",Nt),ke())),Te()}function Me(t){t.preventDefault(),xe(t.clientX||t.pageX)}function Fe(t){xe(t.touches[0].clientX)}function xe(t){if(Jt&&null!=$t.song){const e=le.getBoundingClientRect();$t.playhead=$t.song.barCount*(t-e.left)/(e.right-e.left),$t.computeLatestModValues(),Pe()}}function Ce(){Jt=!1}function Ie(){const t=+ne.value;$t.volume=Math.min(1,Math.pow(t/50,.5))*Math.pow(2,(t-75)/25)}function Pe(){if(null!=$t.song){let t=$t.playhead/$t.song.barCount;oe.style.left=Ht*t+"px";const e=le.getBoundingClientRect();le.scrollLeft=t*(Ht-e.width)}}function De(){if(re.innerHTML="",null==$t.song)return;const t=le.getBoundingClientRect();let e,i,a;if(Bt){e=t.height,i=Math.max(1,Math.min(n.pitchOctaves,Math.round(e/24))),a=12*i+1;const r=(e-1)/a,o=Math.max(8,4*r);Ht=Math.max(t.width,o*$t.song.barCount*$t.song.beatsPerBar)}else{Ht=t.width;const r=Math.max(1,Ht/($t.song.barCount*$t.song.beatsPerBar)/6);e=Math.min(t.height,r*(n.maxPitch+1)+1),i=Math.max(3,Math.min(n.pitchOctaves,Math.round(e/(12*r)))),a=12*i+1}se.style.width=Ht+"px",se.style.height=e+"px",re.style.width=Ht+"px",re.style.height=e+"px";const r=Ht/$t.song.barCount,o=r/($t.song.beatsPerBar*n.partsPerBeat),s=(e-1)/a,l=(e-1)/n.drumCount;for(let t=0;t<$t.song.barCount+1;t++){const n=t==$t.song.loopStart||t==$t.song.loopStart+$t.song.loopLength?V.loopAccent:V.uiWidgetBackground;re.appendChild(qt({x:t*r-1,y:0,width:2,height:e,fill:n}))}for(let t=0;t<=i;t++)re.appendChild(qt({x:0,y:12*t*s,width:Ht,height:s+1,fill:V.tonic,opacity:.75}));for(let t=$t.song.channels.length-1-$t.song.modChannelCount;t>=0;t--){const a=$t.song.getChannelIsNoise(t),c=a?l:s,h=$t.song.channels[t].octave,d=Math.max(0,Math.min(n.pitchOctaves-i,Math.ceil(h-.5*i)))*c*12+e-.5*c-.5;for(let e=0;e<$t.song.barCount;e++){const n=$t.song.getPattern(t,e);if(null==n)continue;const i=e*r;for(let e=0;e<n.notes.length;e++){const r=n.notes[e];for(const e of r.pitches){const n=Ae(e,r.start,r.pins,(c+1)/2,i,d,o,c),s=Ot({d:n,fill:V.getChannelColor($t.song,t).primaryChannel});a&&(s.style.opacity=String(.6)),re.appendChild(s)}}}}Pe()}function Ae(t,e,i,a,r,o,s,l){let c=`M ${r+s*(e+i[0].time)} ${o-t*l+a*(i[0].size/n.noteSizeMax)} `;for(let h=0;h<i.length;h++){const d=i[h];c+=`L ${r+s*(e+d.time)} ${o-l*(t+d.interval)-a*(d.size/n.noteSizeMax)} `}for(let h=i.length-1;h>=0;h--){const d=i[h];c+=`L ${r+s*(e+d.time)} ${o-l*(t+d.interval)+a*(d.size/n.noteSizeMax)} `}return c}function Te(){$t.playing?(Zt.classList.remove("playButton"),Zt.classList.add("pauseButton"),Zt.title="Pause (Space)",Zt.textContent="Pause"):(Zt.classList.remove("pauseButton"),Zt.classList.add("playButton"),Zt.title="Play (Space)",Zt.textContent="Play"),zt=$t.playing}function Ee(){Xt.setAttribute("fill",-1==$t.loopRepeatCount?V.linkAccent:V.uiWidgetBackground)}function qe(){ie.style.color=Bt?V.linkAccent:V.uiWidgetBackground}return document.body.appendChild(le),document.body.appendChild(It({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},Yt,te,ee,ne,ae,ge,Wt.canvas,jt,Ut,Qt,_t,Kt)),top!==self?(Qt.style.display="none",_t.style.display="none"):(Kt.style.display="none","share"in navigator||(_t.style.display="none")),null!=localStorage.getItem("volume")&&(ne.value=localStorage.getItem("volume")),Ie(),window.addEventListener("resize",(function(){De()})),window.addEventListener("keydown",(function(t){switch(t.keyCode){case 70:$t.playhead=0,t.preventDefault();break;case 32:Se(),t.preventDefault();break;case 219:$t.goToPrevBar(),Pe(),t.preventDefault();break;case 221:$t.goToNextBar(),Pe(),t.preventDefault()}})),re.addEventListener("mousedown",(function(t){Jt=!0,Me(t)})),window.addEventListener("mousemove",Me),window.addEventListener("mouseup",Ce),re.addEventListener("touchstart",(function(t){Jt=!0,Fe(t)})),re.addEventListener("touchmove",Fe),re.addEventListener("touchend",Ce),re.addEventListener("touchcancel",Ce),Zt.addEventListener("click",Se),te.addEventListener("click",(function(){-1==$t.loopRepeatCount?$t.loopRepeatCount=0:$t.loopRepeatCount=-1,Ee()})),ne.addEventListener("input",(function(){localStorage.setItem("volume",ne.value),Ie()})),ae.addEventListener("click",(function(){Bt=!Bt,qe(),De()})),Qt.addEventListener("click",(function(){let t;if(t=navigator,t.clipboard&&t.clipboard.writeText)return void t.clipboard.writeText(location.href).catch((()=>{window.prompt("Copy to clipboard:",location.href)}));const e=document.createElement("textarea");e.textContent=location.href,document.body.appendChild(e),e.select();const n=document.execCommand("copy");e.remove(),n||window.prompt("Copy this:",location.href)})),_t.addEventListener("click",(function(){navigator.share({url:location.href})})),window.addEventListener("hashchange",ve),ve(),Ee(),qe(),Te(),t.Channel=gt,t.Config=n,t.Instrument=yt,t.Note=ot,t.Pattern=st,t.Synth=Ft,Object.defineProperty(t,"Z",{value:!0}),t}({});
//# sourceMappingURL=beepbox_player.min.js.map