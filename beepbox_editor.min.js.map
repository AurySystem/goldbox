{"version":3,"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/synth.ts","../editor/BarScrollBar.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/Layout.ts","../editor/LayoutPrompt.ts","../editor/LimiterPrompt.ts","../editor/CustomScalePrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/Selection.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","generateSineWave","sineWaveLength","generateTriWave","asin","generateSquareWave","phasewidth","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveMask","sineWave","triWave","squareWave","sawWave","operatorWaves","drive","generateTrapezoidWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","waveform","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","customScale","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","A","B","#","♯","b","♭","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","lin","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeCustomScale","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorWaveform","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","prompt","record","_validate","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","group","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","tempScale","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","CustomScalePrompt","_flags","_scaleFlags","_scaleRows","scaleHolder","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_operatorDropdowns","_operatorWaveformSelects","_operatorDropdownRows","_operatorDropdownGroups","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","_openOperatorDropdowns","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","waveformSelect","dropdown","dropdownRow","DropdownGroup","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","instance","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","customScaleFlags","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":"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","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags:                       [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags:                         [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags:                        [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags:                [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags:                        [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags:                        [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags:                    [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags:                      [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags:      [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags:  [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags:        [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags:        [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags:          [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags:                          [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags:                      [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags:    [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags:    [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags:                [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags:                  [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags:                  [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"Custom\", realName: \"custom\", flags:                        [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin: number = 30;\r\n\tpublic static readonly tempoMax: number = 320;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 2;\r\n\tpublic static readonly beatsPerBarMax: number = 16;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 256;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 10;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n    ]); \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"uhhh??\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n        { name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n        { name: \"sliding fade\", isSeamless: false, attackSeconds: 0.08, releases: true, releaseTicks: 96, slides: true, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n        { name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", spread: 0.25, offset: 0.05, volume: 0.9, sign: -0.8 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n        { name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n        { name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box...\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] }, \r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\r\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\r\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 40;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 8;\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n    public static readonly triWave: Float64Array = generateTriWave();\r\n    public static readonly squareWave: Float64Array = generateSquareWave();\r\n    public static readonly sawWave: Float64Array = generateSawWave()\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"sine\", samples: generateSineWave() },\r\n        { name: \"triangle\", samples: generateTriWave() },\r\n        { name: \"sawtooth\", samples: generateSawWave() },\r\n        { name: \"square\", samples: generateSquareWave() },\r\n        { name: \"25%pulse\", samples: generateSquareWave(0.5) },\r\n        { name: \"75%pulse\", samples: generateSquareWave(-0.5) },\r\n        { name: \"ramp\", samples: generateSawWave(true) },\r\n        { name: \"trapezoid\", samples: generateTrapezoidWave(2) },\r\n    ]);\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // New Drum noise? New Drum Noise!\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 8 ^ 2 << 16;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nfunction generateTriWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength))/(Math.PI/2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTrapezoidWave(drive: number = 2): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength))*drive;\r\n        wave[i] = wave[i] >= 1 ? 1 : wave[i];\r\n        wave[i] = wave[i] <= -1 ? -1 : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(phasewidth: number = 0): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n        wave[i] = wave[i] > phasewidth ? 1.0 : -1.0;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(inverse: boolean = false): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i - (Config.sineWaveLength * 0.75) + Config.sineWaveLength) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n        wave[i] = inverse ? wave[i] * -1 : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"GoldBox \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\" :  `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 15em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount = CharCode.a,\r\n    bars = CharCode.b,\r\n    vibrato = CharCode.c,\r\n    transition = CharCode.d,\r\n    loopEnd = CharCode.e,\r\n    filterCutoff = CharCode.f,\r\n    barCount = CharCode.g,\r\n    interval = CharCode.h,\r\n    instrumentCount = CharCode.i,\r\n    patternCount = CharCode.j,\r\n    key = CharCode.k,\r\n    loopStart = CharCode.l,\r\n    reverb = CharCode.m,\r\n    channelCount = CharCode.n,\r\n    channelOctave = CharCode.o,\r\n    patterns = CharCode.p,\r\n    effects = CharCode.q,\r\n    rhythm = CharCode.r,\r\n    scale = CharCode.s,\r\n    tempo = CharCode.t,\r\n    preset = CharCode.u,\r\n    volume = CharCode.v,\r\n    wave = CharCode.w,\r\n\r\n    filterResonance = CharCode.y,\r\n    filterEnvelope = CharCode.z,\r\n    algorithm = CharCode.A,\r\n    feedbackAmplitude = CharCode.B,\r\n    chord = CharCode.C,\r\n    detune = CharCode.D,\r\n    operatorEnvelopes = CharCode.E,\r\n    feedbackType = CharCode.F,\r\n    arpeggioSpeed = CharCode.G,\r\n    harmonics = CharCode.H,\r\n\r\n    squareDuty = CharCode.K,\r\n    panning = CharCode.L,\r\n    customChipWave = CharCode.M,\r\n    songTitle = CharCode.N,\r\n    limiterSettings = CharCode.O,\r\n    operatorAmplitudes = CharCode.P,\r\n    operatorFrequencies = CharCode.Q,\r\n    operatorWaves = CharCode.R,\r\n\r\n    spectrum = CharCode.S,\r\n    startInstrument = CharCode.T,\r\n    channelNames = CharCode.U,\r\n    feedbackEnvelope = CharCode.V,\r\n    pulseWidth = CharCode.W,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    volume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n    return { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n\r\n    public constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestVolume: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestVolume < pin.volume) {\r\n                    loudestVolume = pin.volume;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 6);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n        }\r\n        return newNote;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public instrument: number = 0;\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instrument = 0;\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 0;\r\n    public amplitude: number = 0;\r\n    public envelope: number = 0;\r\n    public waveform: number = 0;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 0;\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.envelope = (index == 0) ? 0 : 1;\r\n        this.waveform = 0;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.envelope = other.envelope;\r\n        this.waveform = other.waveform;\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(lowestOctave: number): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.chipNoiseLength;\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const highestOctave: number = 14;\r\n            const falloffRatio: number = 0.25;\r\n            // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n            const pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n            function controlPointToOctave(point: number): number {\r\n                return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n            }\r\n\r\n            let combinedAmplitude: number = 1;\r\n            for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n                const value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n                const value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n                const octave1: number = controlPointToOctave(i - 1);\r\n                let octave2: number = controlPointToOctave(i);\r\n                if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n                if (value1 == 0 && value2 == 0) continue;\r\n\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n            }\r\n            if (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n            scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n            // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.harmonicsWavelength;\r\n            const retroWave: Float32Array = getDrumWave(0);\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const overallSlope: number = -0.25;\r\n            let combinedControlPointAmplitude: number = 1;\r\n\r\n            for (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n                const harmonicFreq: number = harmonicIndex + 1;\r\n                let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n                if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                    controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n                }\r\n                const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n                let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n                if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                    combinedControlPointAmplitude += amplitude;\r\n                }\r\n                amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n                // Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n                // retro wave (effectively random) to avoid egregiously tall spikes.\r\n                amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n                wave[waveLength - harmonicFreq] = amplitude;\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n\r\n            // Limit the maximum wave amplitude.\r\n            const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < wave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = wave[i] * mult;\r\n                wave[i] = cumulative;\r\n            }\r\n            // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n    public chipNoise: number = 1;\r\n    public filterCutoff: number = 12;\r\n    public filterResonance: number = 0;\r\n    public filterEnvelope: number = 1;\r\n    public transition: number = 1;\r\n    public vibrato: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public interval: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public tieNoteTransition: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public detune: number = 0;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public pulseEnvelope: number = 1;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public feedbackAmplitude: number = 0;\r\n    public feedbackEnvelope: number = 1;\r\n    public LFOtime: number = 0;\r\n    public nextLFOtime: number = 0;\r\n    public arpTime: number = 0;\r\n    public customChipWave: Float64Array = new Float64Array(64);\r\n    public customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modStatuses: ModStatus[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modSettings: ModSetting[] = [];\r\n\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(0);\r\n                this.modStatuses.push(ModStatus.msNone);\r\n                this.modInstruments.push(0);\r\n                this.modSettings.push(ModSetting.mstNone);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.arpeggioSpeed = 12;\r\n        this.detune = 0;\r\n        this.tieNoteTransition = false;\r\n        this.clicklessTransition = false;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = 1;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                this.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.transition = 1;\r\n                this.effects = 0;\r\n                this.chord = 2;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.transition = 1;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.effects = 0;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                this.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modStatuses = [];\r\n                this.modInstruments = [];\r\n                this.modSettings = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(0);\r\n                    this.modStatuses.push(ModStatus.msNone);\r\n                    this.modInstruments.push(0);\r\n                    this.modSettings.push(ModSetting.mstNone);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n            \"panDelay\": this.panDelay,\r\n            \"arpeggioSpeed\": this.arpeggioSpeed,\r\n            \"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n            \"tieNoteTransition\": this.tieNoteTransition,\r\n            \"clicklessTransition\": this.clicklessTransition,\r\n            \"vibrato\": this.vibrato,\r\n            \"vibratoDepth\": this.vibratoDepth,\r\n            \"vibratoDelay\": this.vibratoDelay,\r\n            \"vibratoSpeed\": this.vibratoSpeed,\r\n            \"vibratoType\": this.vibratoType,\r\n            \"detune\": this.detune,\r\n            \"effects\": Config.effectsNames[this.effects],\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n            instrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n            instrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n\r\n            instrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"envelope\": Config.envelopes[operator.envelope].name,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                });\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n            instrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n            instrumentObject[\"operators\"] = operatorArray;\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modStatuses\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n                instrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n        return instrumentObject;\r\n    }\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n        if (type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else {\r\n            this.detune = 0;\r\n        }\r\n\r\n        const oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n        const transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n        this.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n        if (this.transition == -1) this.transition = 1;\r\n\r\n        this.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n        if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n        if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n            this.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n        } else {\r\n            this.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        }\r\n        if (instrumentObject[\"filterResonance\"] != undefined) {\r\n            this.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n        } else {\r\n            this.filterResonance = 0;\r\n        }\r\n        this.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n        if (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n        if (instrumentObject[\"filter\"] != undefined) {\r\n            const legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n            const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n            const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n            const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n            let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n            if (legacyFilter == -1) legacyFilter = 0;\r\n            this.filterCutoff = legacyToCutoff[legacyFilter];\r\n            this.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n            this.filterResonance = 0;\r\n        }\r\n\r\n        const legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            if (instrumentObject[\"spectrum\"] != undefined) {\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        this.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n                        if (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            if (instrumentObject[\"harmonics\"] != undefined) {\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n                this.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n            } else {\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n            }\r\n\r\n            if (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n                this.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n                if (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipWave == -1) this.chipWave = 1;\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 3;\r\n\r\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n            if (this.algorithm == -1) this.algorithm = 0;\r\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n            if (this.feedbackType == -1) this.feedbackType = 0;\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            const legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n            this.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n            if (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n            for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                if (operatorObject[\"waveform\"] != undefined) {\r\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                } else {\r\n                    operator.waveform = 0;\r\n                }\r\n                operator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n                if (operator.envelope == -1) operator.envelope = 0;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    this.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type.\");\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n                this.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n            }\r\n            else {\r\n                this.tieNoteTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number) {\r\n        return 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n    }\r\n\r\n    public warmUp(): void {\r\n        this.LFOtime = 0;\r\n        this.nextLFOtime = 0;\r\n        this.arpTime = 0;\r\n        if (this.type == InstrumentType.noise) {\r\n            getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            this.harmonicsWave.getCustomWave();\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            this.spectrumWave.getCustomWave(8);\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getDrumWave(): Float32Array {\r\n        if (this.type == InstrumentType.noise) {\r\n            return getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            return this.spectrumWave.getCustomWave(8);\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n            this.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n    }\r\n    public getChord(): Chord {\r\n        return this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n    }\r\n    public getFilterCutoffOctaves(): number {\r\n        return this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n    }\r\n    public getFilterIsFirstOrder(): boolean {\r\n        return this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n    }\r\n    public getFilterResonance(): number {\r\n        return this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n    }\r\n    public getFilterEnvelope(): Envelope {\r\n        if (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n        return Config.envelopes[this.filterEnvelope];\r\n    }\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport enum ModStatus {\r\n    msForPitch = 0,\r\n    msForNoise = 1,\r\n    msForSong = 2,\r\n    msNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n    mstNone = 0,\r\n    mstSongVolume = 1,\r\n    mstTempo = 2,\r\n    mstReverb = 3,\r\n    mstNextBar = 4,\r\n    mstInsVolume = 5,\r\n    mstPan = 6,\r\n    mstFilterCut = 7,\r\n    mstFilterPeak = 8,\r\n    mstFMSlider1 = 9,\r\n    mstFMSlider2 = 10,\r\n    mstFMSlider3 = 11,\r\n    mstFMSlider4 = 12,\r\n    mstFMFeedback = 13,\r\n    mstPulseWidth = 14,\r\n    mstDetune = 15,\r\n    mstVibratoDepth = 16,\r\n    mstSongDetune = 17,\r\n    mstVibratoSpeed = 18,\r\n    mstVibratoDelay = 19,\r\n    mstArpeggioSpeed = 20,\r\n    mstPanDelay = 21,\r\n    mstResetArpeggio = 22,\r\n    mstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"BeepBox\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 8;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 4;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n    private static readonly _variant = 0x6A; //\"j\" ~ jummbox\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public scaleCustom: boolean[] = [];\r\n    public key: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public instrumentsPerChannel: number;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    // Maximum value possible for the mod (total number of possible positions)\r\n    public mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n        [ModSetting.mstReverb, Config.reverbRange - 1],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Config.volumeRange],\r\n        [ModSetting.mstPan, Config.panMax],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n        [ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n        [ModSetting.mstVibratoDepth, 50],\r\n        [ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n        [ModSetting.mstVibratoSpeed, 30],\r\n        [ModSetting.mstVibratoDelay, 50],\r\n        [ModSetting.mstArpeggioSpeed, 50],\r\n        [ModSetting.mstPanDelay, 20],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ]\r\n    );\r\n\r\n    // When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n    public mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n        [ModSetting.mstReverb, 0],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n        [ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, 0],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n        [ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n        [ModSetting.mstVibratoDepth, 0],\r\n        [ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n        [ModSetting.mstVibratoSpeed, 0],\r\n        [ModSetting.mstVibratoDelay, 0],\r\n        [ModSetting.mstArpeggioSpeed, 10],\r\n        [ModSetting.mstPanDelay, 10],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ])\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    public modValueToReal(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value += Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value -= Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value += Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value += Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public isSettingForSong(setting: ModSetting): boolean {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstNextBar:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public realToModValue(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value -= Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value += Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value -= Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value -= Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            \r\n            // For tempo, actually use user defined tempo\r\n            if (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n                cap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n            }\r\n            \r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n        if (!isMod)\r\n            return 6;\r\n        else {\r\n            let cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getChannelIsNoise(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\r\n        this.key = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 150;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 1;\r\n        this.instrumentsPerChannel = 1;\r\n\r\n        this.title = \"Unnamed\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                for (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let bar = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n        buffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\r\n        buffer.push(SongTagCode.songTitle);\r\n\r\n        // Length of the song name string\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\r\n            }\r\n        }\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                buffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n                buffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                    buffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n                    buffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n                    buffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n                    buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.fm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n                    buffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorEnvelopes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.filterEnvelope);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channel].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        let neededInstrumentBits: number = 0;\r\n        while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modStatus: ModStatus = instrument.modStatuses[mod];\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modSettings[mod];\r\n\r\n                        bits.write(2, modStatus);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededInstrumentBits, modInstrument);\r\n                        }\r\n\r\n                        // Mod setting is only used if the status isn't \"none\".\r\n                        if (modStatus != ModStatus.msNone) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n            let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n            const recentShapes: any[] = [];\r\n\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                bits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(3, note.pins[0].volume); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(3, pin.volume); // volume\r\n                            }\r\n                            else {\r\n                                shapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest, then...\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\r\n        const maxApplyArgs: number = 64000;\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists.\r\n            return String.fromCharCode.apply(null, buffer);\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        var variant: string = \"beepbox\";\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            variant = \"jummbox\";\r\n            charIndex++;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n        if (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        this.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n        if (beforeThree && variant == \"beepbox\") {\r\n            // Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) channel.instruments[0].transition = 0;\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let toSetOctaves: number[] = [];\r\n        let command: number;\r\n        let channel: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (variant == \"beepbox\" || beforeTwo) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                }\r\n                else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\r\n                    }\r\n                }\r\n                if (variant == \"beepbox\") this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && variant == \"beepbox\") {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (variant == \"beepbox\") {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n                else {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channel].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                if (variant == \"beepbox\" && beforeEight) {\r\n                    this.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    this.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        this.channels[channel].patterns[pattern] = new Pattern();\r\n                    }\r\n                    this.channels[channel].patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                const instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    const isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n                    const isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n                    for (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                        this.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    this.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n                    if (beforeSix && variant == \"beepbox\") {\r\n                        for (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n                if (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n                    if (this.rhythm == 0 || this.rhythm == 2) {\r\n                        useSlowerArpSpeed = true;\r\n                    }\r\n                    // Use faster two note arp on these rhythms\r\n                    if (this.rhythm >= 2) {\r\n                        useFastTwoNoteArp = true;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                    this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                } else {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                        this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            if (channel >= this.pitchChannelCount) {\r\n                                this.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                this.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterCutoff: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const instrument: Instrument = this.channels[channel].instruments[0];\r\n                        const legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    } else if (beforeSix && variant == \"beepbox\") {\r\n                        for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                                const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                if (channel < this.pitchChannelCount) {\r\n                                    instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                    instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                                    instrument.filterResonance = 0;\r\n                                } else {\r\n                                    instrument.filterCutoff = 10;\r\n                                    instrument.filterEnvelope = 1;\r\n                                    instrument.filterResonance = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.filterEnvelope: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.drumset) {\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                } else {\r\n                    instrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                if (variant == \"beepbox\") {\r\n                    // Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n                    // piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.transition: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            this.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                } else if (beforeFour || variant == \"beepbox\") {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 3, 2, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                                ? legacyEnvelopes[effect]\r\n                                : instrument.filterEnvelope;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else {\r\n                    const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = vibrato;\r\n                    // Custom vibrato\r\n                    if (vibrato == Config.vibratos.length) {\r\n                        instrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                        instrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    // Enforce standard vibrato settings\r\n                    else {\r\n                        instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                        instrument.vibratoSpeed = 10; // Normal speed\r\n                        instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n                        instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n            } break;\r\n            case SongTagCode.interval: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                interval = 2;\r\n                                this.channels[channel].instruments[i].chord = 3;\r\n                            }\r\n                            this.channels[channel].instruments[i].interval = interval;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        interval = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.panning: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (variant == \"beepbox\") {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                }\r\n                else {\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n                // Now, pan delay follows on new versions of jummbox.\r\n                if (variant == \"jummbox\" && !beforeThree)\r\n                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    // Limiter isn't used\r\n                    this.compressionRatio = 1.0;\r\n                    this.limitRatio = 1.0;\r\n                    this.limitRise = 4000.0;\r\n                    this.limitDecay = 4.0;\r\n                    this.limitThreshold = 1.0;\r\n                    this.compressionThreshold = 1.0;\r\n                    this.masterGain = 1.0;\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorEnvelopes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channel].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && variant == \"beepbox\") {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channel: number;\r\n                let largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n                let recentPitchBitLength: number = ( largerChords ? 4 : 3 );\r\n                let recentPitchLength: number = ( largerChords ? 16 : 8 );\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channel = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                let neededInstrumentBits: number = 0;\r\n                while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n                while (true) {\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                instrument.modStatuses[mod] = bits.read(2);\r\n\r\n                                // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                                if (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n                                    // Clamp to pitch/noise max\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n                                    }\r\n                                    else {\r\n                                        instrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                    }\r\n\r\n                                    instrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n                                    instrument.modSettings[mod] = bits.read(6);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n                    let note: Note | null = null;\r\n                    let pin: NotePin | null = null;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = this.channels[channel].patterns[i];\r\n                        newPattern.reset();\r\n                        newPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n                        if (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && variant == \"beepbox\")\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                let pinObj: any;\r\n                                let pitch: number;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n                                    shape.pinCount = bits.readPinCount();\r\n\r\n                                    if (variant == \"beepbox\") {\r\n                                        shape.initialVolume = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialVolume = bits.read(3);\r\n                                    } else {\r\n                                        shape.initialVolume = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        pinObj = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && variant == \"beepbox\")\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n\r\n                                        if (variant == \"beepbox\") {\r\n                                            pinObj.volume = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.volume = bits.read(3);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.volume = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                                note = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n                                note.pitches = [];\r\n                                note.pins.length = 1;\r\n                                const pitchBends: number[] = [];\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches.push(pitch);\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n\r\n                                pitchBends.unshift(note.pitches[0]);\r\n\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n                                    pin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n                                    note.pins.push(pin);\r\n                                }\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                                newNotes.push(note);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        break;\r\n                    } else {\r\n                        channel++;\r\n                        if (channel >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n            } break;\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            if (toSetOctaves[channel] != null) {\r\n                this.channels[channel].octave = toSetOctaves[channel];\r\n            }\r\n        }\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                instrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                const noteArray: Object[] = [];\r\n                for (const note of pattern.notes) {\r\n                    let volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n                    const pointArray: Object[] = [];\r\n                    for (const pin of note.pins) {\r\n                        let useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n                        pointArray.push({\r\n                            \"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                            \"pitchBend\": pin.interval,\r\n                            \"volume\": useVol,\r\n                            \"forMod\": isModChannel,\r\n                        });\r\n                    }\r\n\r\n                    noteArray.push({\r\n                        \"pitches\": note.pitches,\r\n                        \"points\": pointArray,\r\n                    });\r\n                }\r\n\r\n                patternArray.push({\r\n                    \"instrument\": pattern.instrument + 1,\r\n                    \"notes\": noteArray,\r\n                });\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n\r\n            channelArray.push({\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"octaveScrollBar\": this.channels[channel].octave,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            });\r\n        }\r\n\r\n        return {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestJummBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"customScale\": this.scaleCustom,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            //\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n            \"channels\": channelArray,\r\n        };\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"dbl harmonic :)\",\r\n                \"romani :(\": \"dbl harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                if (jsonObject[\"customScale\"] != undefined) {\r\n                    for (var i of jsonObject[\"customScale\"].keys()) {\r\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                const letter: string = key.charAt(0).toUpperCase();\r\n                const symbol: string = key.charAt(1).toLowerCase();\r\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                let index: number | undefined = letterMap[letter];\r\n                const offset: number | undefined = accidentalMap[symbol];\r\n                if (index != undefined) {\r\n                    if (offset != undefined) index += offset;\r\n                    if (index < 0) index += 12;\r\n                    index = index % 12;\r\n                    this.key = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"]) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        this.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"]) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n                }\r\n\r\n                for (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n                    channel.patterns[i] = new Pattern();\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = 1;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n\r\n                for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                    const instrument: Instrument = channel.instruments[i];\r\n                    instrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = channel.patterns[i];\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n                    if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n                        const maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n                        //let tickClock: number = 0;\r\n                        for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                            if (j >= maxNoteCount) break;\r\n\r\n                            const noteObject = patternObject[\"notes\"][j];\r\n                            if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                                continue;\r\n                            }\r\n\r\n                            const note: Note = new Note(0, 0, 0, 0);\r\n                            note.pitches = [];\r\n                            note.pins = [];\r\n\r\n                            for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                                const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                                if (note.pitches.indexOf(pitch) != -1) continue;\r\n                                note.pitches.push(pitch);\r\n                                if (note.pitches.length >= Config.maxChordSize) break;\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            //let noteClock: number = tickClock;\r\n                            let startInterval: number = 0;\r\n                            for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                                const pointObject: any = noteObject[\"points\"][k];\r\n                                if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                                const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                                const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                                let volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n                                // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                                // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                                let volume: number;\r\n                                if (pointObject[\"volume\"] == undefined) {\r\n                                    volume = volumeCap;\r\n                                } else if (pointObject[\"forMod\"] == undefined) {\r\n                                    volume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n                                else {\r\n                                    volume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n\r\n                                if (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n                                if (note.pins.length == 0) {\r\n                                    //if (time < noteClock) continue;\r\n                                    note.start = time;\r\n                                    startInterval = interval;\r\n                                } else {\r\n                                    //if (time <= noteClock) continue;\r\n                                }\r\n                                //noteClock = time;\r\n\r\n                                note.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n                            }\r\n                            if (note.pins.length < 2) continue;\r\n\r\n                            note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                            const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                            let lowestPitch: number = maxPitch;\r\n                            let highestPitch: number = 0;\r\n                            for (let k: number = 0; k < note.pitches.length; k++) {\r\n                                note.pitches[k] += startInterval;\r\n                                if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                                    note.pitches.splice(k, 1);\r\n                                    k--;\r\n                                }\r\n                                if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                                if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                                if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                                if (k >= 2) {\r\n                                    if (pin.interval == note.pins[k - 1].interval &&\r\n                                        pin.interval == note.pins[k - 2].interval &&\r\n                                        pin.volume == note.pins[k - 1].volume &&\r\n                                        pin.volume == note.pins[k - 2].volume) {\r\n                                        note.pins.splice(k - 1, 1);\r\n                                        k--;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            pattern.notes.push(note);\r\n                            //tickClock = note.end;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n    }\r\n\r\n    public getPattern(channel: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channel].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channel].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getPatternInstrument(channel: number, bar: number): number {\r\n        const pattern: Pattern | null = this.getPattern(channel, bar);\r\n        return pattern == null ? 0 : pattern.instrument;\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n}\r\n\r\nclass Tone {\r\n    public instrument: Instrument;\r\n    public readonly pitches: number[] = [0, 0, 0, 0];\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number = 0;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public active: boolean = false;\r\n    public noteStart: number = 0;\r\n    public noteEnd: number = 0;\r\n    public noteLengthTicks: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public lastVolume: number = 0;\r\n    public stereoVolume1: number = 0.0;\r\n    public stereoVolume2: number = 0.0;\r\n    public stereoOffset: number = 0.0;\r\n    public stereoDelay: number = 0.0;\r\n    public sample: number = 0.0;\r\n    public readonly phases: number[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n    public readonly volumeStarts: number[] = [];\r\n    public readonly volumeDeltas: number[] = [];\r\n    public volumeStart: number = 0.0;\r\n    public volumeDelta: number = 0.0;\r\n    public phaseDeltaScale: number = 0.0;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public filter: number = 0.0;\r\n    public filterScale: number = 0.0;\r\n    public filterSample0: number = 0.0;\r\n    public filterSample1: number = 0.0;\r\n    public vibratoScale: number = 0.0;\r\n    public intervalMult: number = 0.0;\r\n    public intervalVolumeMult: number = 1.0;\r\n    public feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n            this.feedbackOutputs[i] = 0.0;\r\n        }\r\n        this.sample = 0.0;\r\n        this.filterSample0 = 0.0;\r\n        this.filterSample1 = 0.0;\r\n        this.liveInputSamplesHeld = 0.0;\r\n    }\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            for (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n                for (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n                    Synth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n                    song.channels[channel].instruments[instrument].warmUp();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n                for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                if (!(this.song.channels[channel].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channel, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n                            let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                                        if (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                            latestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n                                        this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                        latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n\r\n    public song: Song | null = null;\r\n    public liveInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    private tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[];\r\n    private modInsValues: (number | null)[][][];\r\n    private nextModValues: (number | null)[];\r\n    private nextModInsValues: (number | null)[][][];\r\n    private isPlayingSong: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly activeTones: Array<Deque<Tone>> = [];\r\n    private tyingOver: number[] = [];\r\n    private readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n    //private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n    private readonly releasedTones: Array<Deque<Tone>> = [];\r\n    private readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n    //private highpassInput: number = 0.0;\r\n    //private highpassOutput: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private stereoBufferIndex: number = 0;\r\n    private samplesForNone: Float32Array | null = null;\r\n    private samplesForReverb: Float32Array | null = null;\r\n    private samplesForChorus: Float32Array | null = null;\r\n    private samplesForChorusReverb: Float32Array | null = null;\r\n\r\n    private chorusDelayLine: Float32Array = new Float32Array(2048);\r\n    private chorusDelayPos: number = 0;\r\n    private chorusPhase: number = 0;\r\n\r\n    private reverbDelayLine: Float32Array = new Float32Array(16384);\r\n    private reverbDelayPos: number = 0;\r\n    private reverbFeedback0: number = 0.0;\r\n    private reverbFeedback1: number = 0.0;\r\n    private reverbFeedback2: number = 0.0;\r\n    private reverbFeedback3: number = 0.0;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            remainder = samplesPerTick * (remainder - this.tick);\r\n            this.tickSampleCountdown = samplesPerTick - remainder;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    // Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n                                                            let currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n        let val: number;\r\n        let nextVal: number;\r\n        switch (setting) {\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstSongDetune:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                nextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n                if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                    this.modValues[setting] = val;\r\n                    this.nextModValues[setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstDetune:\r\n                val = this.song!.modValueToReal(volumeStart, setting);\r\n                nextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n                let channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n                if (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n                    || this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n                    || this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n                    this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n                    this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstNextBar:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                break;\r\n            case ModSetting.mstNone:\r\n            default:\r\n                val = -1;\r\n                break;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        if (this.audioCtx == null || this.scriptNode == null) {\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.isPlayingSong = true;\r\n        this.warmUpSynthesizer(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n        }\r\n        this.modValues = [];\r\n        this.modInsValues = [];\r\n        this.nextModValues = [];\r\n        this.nextModInsValues = [];\r\n        this.tyingOver = [];\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.reverbDelayPos = 0;\r\n        this.reverbFeedback0 = 0.0;\r\n        this.reverbFeedback1 = 0.0;\r\n        this.reverbFeedback2 = 0.0;\r\n        this.reverbFeedback3 = 0.0;\r\n        //this.highpassInput = 0.0;\r\n        //this.highpassOutput = 0.0;\r\n        this.freeAllTones();\r\n        for (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n        for (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n        if (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n        if (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n        if (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n        if (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public nextBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    public firstBar(): void {\r\n        if (!this.song) return;\r\n        this.bar = 0;\r\n        this.playheadInternal = 0;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public jumpToEditingBar(bar: number): void {\r\n        if (!this.song) return;\r\n\r\n        this.bar = bar;\r\n\r\n        this.playheadInternal = bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public prevBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        const isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n        if (!isPlayingLiveTones && !this.isPlayingSong) {\r\n            for (let i: number = 0; i < outputBuffer.length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        this.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        const channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n        for (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n            this.activeTones[i] = new Deque<Tone>();\r\n            this.releasedTones[i] = new Deque<Tone>();\r\n        }\r\n        this.activeTones.length = channelCount;\r\n        this.releasedTones.length = channelCount;\r\n        if ( channelCount != this.tyingOver.length ) {\r\n            let idx: number = this.tyingOver.length;\r\n            this.tyingOver.length = channelCount;\r\n            while ( idx < this.tyingOver.length ) {\r\n                this.tyingOver[idx++] = -1;\r\n            }\r\n        }\r\n\r\n        for (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n            this.activeModTones[i] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.activeModTones[i][mod] = new Deque<Tone>();\r\n            }\r\n            this.activeModTones[i].length = Config.modCount;\r\n        }\r\n        this.activeModTones.length = this.song.modChannelCount;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let bufferIndex: number = 0;\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        while (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n        if (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n        if (playSong) {\r\n            if (this.beat >= this.song.beatsPerBar) {\r\n                this.bar++;\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n\r\n                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                    this.bar = this.song.loopStart;\r\n                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                }\r\n            }\r\n            if (this.bar >= this.song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        const stereoBufferLength: number = outputBufferLength * 4;\r\n        if (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n            this.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n            this.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n            this.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n            this.samplesForNone = new Float32Array(stereoBufferLength);\r\n            this.samplesForReverb = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorus = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n            this.stereoBufferIndex = 0;\r\n        }\r\n        let stereoBufferIndex: number = this.stereoBufferIndex;\r\n        const samplesForNone: Float32Array = this.samplesForNone;\r\n        const samplesForReverb: Float32Array = this.samplesForReverb;\r\n        const samplesForChorus: Float32Array = this.samplesForChorus;\r\n        const samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n        const reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n        const chorusDuration: number = 2.0;\r\n        const chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n        const chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n        const chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n        const chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n        const chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n        const chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n        const chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n        const chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n        let chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n        let chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n        let reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n        let reverbFeedback0: number = +this.reverbFeedback0;\r\n        let reverbFeedback1: number = +this.reverbFeedback1;\r\n        let reverbFeedback2: number = +this.reverbFeedback2;\r\n        let reverbFeedback3: number = +this.reverbFeedback3;\r\n        let useReverb: number = this.song.reverb;\r\n        if (this.isModActive(ModSetting.mstReverb, true)) {\r\n            useReverb = this.getModValue(ModSetting.mstReverb, true);\r\n        }\r\n        let reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n        //const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n        const compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n        const limitThreshold: number = this.song.limitThreshold; // Default 1\r\n        const compressionRatio: number = this.song.compressionRatio; // Default 1\r\n        const limitRatio: number = this.song.limitRatio; // Default 1\r\n        const masterGain: number = this.song.masterGain; // Default 1\r\n        //let highpassInput: number = +this.highpassInput;\r\n        //let highpassOutput: number = +this.highpassOutput;\r\n        let limit: number = +this.limit;\r\n\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n            for (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n                // Also determines mod tones.\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    for (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n                        const tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n                        if (this.song.channels[channel].muted == false)\r\n                            this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if ( this.wantToSkip ) {\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n            }\r\n\r\n            if (this.isModActive(ModSetting.mstReverb, true)) {\r\n                reverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n            }\r\n\r\n            // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n            const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrument.LFOtime = instrument.nextLFOtime;\r\n\r\n                    if (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n                        useVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrument.LFOtime = 0;\r\n                        instrument.nextLFOtime = 0;\r\n                    }\r\n                    else {\r\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n                if (channel == this.liveInputChannel) {\r\n                    this.determineLiveInputTones(this.song);\r\n\r\n                    for (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n                        const tone: Tone = this.liveInputTones.get(i);\r\n                        // Hmm. Will allow active input from a muted channel for now.\r\n                        //if (this.song.channels[channel].muted == false)\r\n                        this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n                for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                    const tone: Tone = this.activeTones[channel].get(i);\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                    const tone: Tone = this.releasedTones[channel].get(i);\r\n                    if (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n                        this.freeReleasedTone(channel, i);\r\n                        i--;\r\n                        continue;\r\n                    }\r\n\r\n                    const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            let chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            let chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            let chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            let chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            let chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            let chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            chorusPhase += chorusAngle * runLength;\r\n            const chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            const chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            const chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            const chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            const chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            const chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            const chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n            const chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n            const chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n            const chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n            const chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n            const chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n            const runEnd: number = bufferIndex + runLength;\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                const bufferIndexL: number = stereoBufferIndex;\r\n                const bufferIndexR: number = stereoBufferIndex + 1;\r\n                const sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n                const sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n                const sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n                const sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n                const sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n                const sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n                const sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n                const sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n                stereoBufferIndex += 2;\r\n\r\n                const combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n                const combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n                const chorusTap0Ratio: number = chorusTap0Index % 1;\r\n                const chorusTap1Ratio: number = chorusTap1Index % 1;\r\n                const chorusTap2Ratio: number = chorusTap2Index % 1;\r\n                const chorusTap3Ratio: number = chorusTap3Index % 1;\r\n                const chorusTap4Ratio: number = chorusTap4Index % 1;\r\n                const chorusTap5Ratio: number = chorusTap5Index % 1;\r\n                const chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n                const chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n                const chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n                const chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n                const chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n                const chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n                const chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n                const chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n                const chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n                const chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n                const chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n                const chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n                const chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n                const chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n                const chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n                const chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n                const chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n                const chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n                const chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n                const chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n                chorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n                chorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n                chorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n                chorusTap0Index += chorusTap0Delta;\r\n                chorusTap1Index += chorusTap1Delta;\r\n                chorusTap2Index += chorusTap2Delta;\r\n                chorusTap3Index += chorusTap3Delta;\r\n                chorusTap4Index += chorusTap4Delta;\r\n                chorusTap5Index += chorusTap5Delta;\r\n\r\n                // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n                // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n                // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n                // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n                const reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n                const reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n                const reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n                const reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n                const reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n                const reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n                const reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n                const reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n                const reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n                const reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n                const reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n                reverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n                reverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n                reverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n                reverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n                reverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n                reverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n                reverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n                reverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n                reverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n                // Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n                const sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n                const sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n                /*\r\n                highpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n                highpassInput = sample;\r\n                // use highpassOutput instead of sample below?\r\n                */\r\n\r\n                // A compressor/limiter.\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                        const tone: Tone = this.releasedTones[channel].get(i);\r\n                        tone.ticksSinceReleased++;\r\n\r\n                        const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n                        if (shouldFadeOutFast) {\r\n                            this.freeReleasedTone(channel, i);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update arpeggio time, which is used to calculate arpeggio position\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    var atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n                    // Check if any active tones should be released.\r\n                    for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                        // Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n                        var carryOver = false;\r\n                        var toneCount = this.activeTones[channel].count();\r\n                        var pattern = this.song.getPattern(channel, this.bar);\r\n                        if ( pattern != null && atEnd ) {\r\n                            var instrument = pattern.instrument;\r\n                            if ( this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0 ) {\r\n                                // Verify that all tie conditions are met\r\n                                // 1. Check for a note in this channel at the start of the next bar\r\n                                // 2. Check that the note's volume start matches the current volume\r\n                                // 3. Check that the shape (pitches, chord size) is a match\r\n                                // 4. Check that the instruments are the same\r\n                                var targetBar = this.bar + 1;\r\n                                if ( targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n                                    targetBar = this.song.loopStart;\r\n                                }\r\n                                var nextPattern = this.song.getPattern(channel, targetBar);\r\n                                var currNote = this.activeTones[channel].get(0).note;\r\n                                if ( currNote != null ) {\r\n                                    var pin = 0;\r\n                                    while ( currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length-1 )\r\n                                        pin++;\r\n                                    var currVolume = currNote.pins[pin].volume;\r\n                                    var lastInterval = currNote.pins[pin].interval;\r\n\r\n                                    if ( nextPattern != null && nextPattern.instrument == instrument ) {\r\n                                        for( let i: number = 0; i < nextPattern.notes.length; i++ ) {\r\n                                            if ( nextPattern.notes[i].start == 0\r\n                                                && nextPattern.notes[i].pins[0].volume == currVolume\r\n                                                && nextPattern.notes[i].pitches.length == currNote.pitches.length ) {\r\n                                                \r\n                                                carryOver = true;\r\n                                                for ( let j: number = 0; j < currNote.pitches.length; j++ ) {\r\n                                                    // Allow any pitch order\r\n                                                    if ( nextPattern.notes[i].pitches.findIndex( (p) => p == currNote!.pitches[j] + lastInterval ) == -1 ) {\r\n                                                        carryOver = false;\r\n                                                        j = currNote.pitches.length;\r\n                                                    }\r\n                                                }\r\n                                                i = nextPattern.notes.length;\r\n                                                \r\n                                                if ( carryOver ) {\r\n                                                    // Prior to an actual tie, all releasing for hard transitions also needs to be\r\n                                                    // cancelled. So, this check is ran a few parts before the end of a bar too.\r\n                                                    // In those cases, just set tyingOver to 0 for that duration to cancel release\r\n                                                    // handling, but not affect note start time calculations.\r\n                                                    if ( this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar) ) {\r\n                                                        // Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n                                                        if ( this.tyingOver[channel] < 0 ) {\r\n                                                            this.tyingOver[channel] = 0;\r\n                                                        }\r\n                                                    }\r\n                                                    // Special case: tying over a whole bar, just add the length.\r\n                                                    else if ( currNote.start == 0 && this.tyingOver[channel] >= 0 ) {\r\n                                                        this.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n                                                    }\r\n                                                    else {\r\n                                                        // Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n                                                        this.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                            const tone: Tone = this.activeTones[channel].get(i);\r\n                            const transition: Transition = tone.instrument.getTransition();\r\n                            \r\n                            if (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                // Free tone if the transition allows\r\n                                if (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n                                    if (transition.releases) {\r\n                                        this.releaseTone(channel, tone);\r\n                                    } else {\r\n                                        this.freeTone(tone);\r\n                                    }\r\n                                    this.activeTones[channel].remove(i);\r\n                                    i--;\r\n                                }\r\n\r\n                                // End of note: if not actively trying to carry over, kill note tie\r\n                                if ( !carryOver ) {\r\n                                    this.tyingOver[channel] = -1;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                            for (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n                                const tone: Tone = this.activeModTones[channel][mod].get(i);\r\n                                const transition: Transition = tone.instrument.getTransition();\r\n                                if (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                    this.freeTone(tone);\r\n                                    this.activeModTones[channel][mod].remove(i);\r\n                                    i--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == this.song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n                                this.bar++;\r\n                                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                                    this.bar = this.song.loopStart;\r\n                                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                                }\r\n                                if (this.bar >= this.song.barCount) {\r\n                                    this.bar = 0;\r\n                                    if (this.loopRepeatCount != -1) {\r\n                                        ended = true;\r\n                                        this.resetEffects();\r\n                                        this.pause();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(ModSetting.mstTempo, true)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n                for (let instrument of this.song.channels[channel].instruments) {\r\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                for (let channel: number = 0; channel < channelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n        if (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n        if (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n        if (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n        //if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n        //if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n        if (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n        this.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n        this.chorusPhase = chorusPhase;\r\n        this.chorusDelayPos = chorusDelayPos;\r\n        this.reverbDelayPos = reverbDelayPos;\r\n        this.reverbFeedback0 = reverbFeedback0;\r\n        this.reverbFeedback1 = reverbFeedback1;\r\n        this.reverbFeedback2 = reverbFeedback2;\r\n        this.reverbFeedback3 = reverbFeedback3;\r\n        //this.highpassInput = highpassInput;\r\n        //this.highpassOutput = highpassOutput;\r\n        this.limit = limit;\r\n\r\n        if (playSong) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n        const secondsGenerated = samplesAccumulated / 44100;\r\n        const secondsRequired = samplePerformance / 1000;\r\n        const ratio = secondsRequired / secondsGenerated;\r\n        console.log(ratio);\r\n        samplePerformance = 0;\r\n        samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.reset();\r\n            tone.active = false;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(channel: number, tone: Tone): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.releasedTones[channel].pushFront(tone);\r\n        }\r\n        else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    private freeReleasedTone(channel: number, toneIndex: number): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.freeTone(this.releasedTones[channel].get(toneIndex));\r\n            this.releasedTones[channel].remove(toneIndex);\r\n        } else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n            this.releasedModTones[channel][mod].remove(toneIndex);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        while (this.liveInputTones.count() > 0) {\r\n            this.freeTone(this.liveInputTones.popBack());\r\n        }\r\n        for (let i: number = 0; i < this.activeTones.length; i++) {\r\n            while (this.activeTones[i].count() > 0) {\r\n                this.freeTone(this.activeTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i: number = 0; i < this.releasedTones.length; i++) {\r\n            while (this.releasedTones[i].count() > 0) {\r\n                this.freeTone(this.releasedTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeModTones.length; i++) {\r\n            for (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n                while (this.activeModTones[i][mod].count() > 0) {\r\n                    this.freeTone(this.activeModTones[i][mod].popBack());\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        for (let i = 0; i < this.releasedModTones.length; i++) {\r\n        for (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n        while (this.releasedModTones[i][mod].count() > 0) {\r\n        this.freeTone(this.releasedModTones[i][mod].popBack());\r\n        }\r\n        }\r\n        }\r\n        */\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song): void {\r\n        const toneList: Deque<Tone> = this.liveInputTones;\r\n        const pitches: number[] = this.liveInputPitches;\r\n        let toneCount: number = 0;\r\n        if (this.liveInputDuration > 0) {\r\n            const instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n            if (instrument.getChord().arpeggiates) {\r\n                let tone: Tone;\r\n                if (toneList.count() == 0) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                    this.releaseTone(this.liveInputChannel, toneList.popFront());\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(0);\r\n                }\r\n                toneCount = 1;\r\n\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    tone.pitches[i] = pitches[i];\r\n                }\r\n                tone.pitchCount = pitches.length;\r\n                tone.chordSize = 1;\r\n                tone.instrument = instrument;\r\n                tone.note = tone.prevNote = tone.nextNote = null;\r\n            } else {\r\n                //const transition: Transition = instrument.getTransition();\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= i) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(this.liveInputChannel, toneList.get(i));\r\n                        tone = this.newTone();\r\n                        toneList.set(i, tone);\r\n                    } else {\r\n                        tone = toneList.get(i);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    tone.pitches[0] = pitches[i];\r\n                    tone.pitchCount = 1;\r\n                    tone.chordSize = pitches.length;\r\n                    tone.instrument = instrument;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            this.releaseTone(this.liveInputChannel, toneList.popBack());\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n        const instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n        const pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n        const time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n        if (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n            // Offset channel (first mod channel is 0 index in mod tone array)\r\n            let modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > time) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                const toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n                    this.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n                } else {\r\n                    while (toneList.count() > 0) {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!song.getChannelIsMod(channel)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !song.channels[channel].muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > time) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const toneList: Deque<Tone> = this.activeTones[channel];\r\n            if (note != null) {\r\n                if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                this.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n            } else {\r\n                while (toneList.count() > 0) {\r\n                    // Automatically free or release seamless tones if there's no new note to take over.\r\n                    if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                        this.releaseTone(channel, toneList.popBack());\r\n                    } else {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n        let toneCount: number = 0;\r\n        if (instrument.getChord().arpeggiates) {\r\n            let tone: Tone;\r\n            if (toneList.count() == 0) {\r\n                tone = this.newTone();\r\n                toneList.pushBack(tone);\r\n            } else {\r\n                tone = toneList.get(0);\r\n            }\r\n            toneCount = 1;\r\n\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n                tone.pitches[i] = pitches[i];\r\n            }\r\n            tone.pitchCount = pitches.length;\r\n            tone.chordSize = 1;\r\n            tone.instrument = instrument;\r\n            tone.note = note;\r\n            tone.noteStart = note.start - Math.max(0, this.tyingOver[channel]);\r\n            tone.noteEnd = note.end;\r\n            tone.prevNote = prevNote;\r\n            tone.nextNote = nextNote;\r\n            tone.prevNotePitchIndex = 0;\r\n            tone.nextNotePitchIndex = 0;\r\n        } else {\r\n            const transition: Transition = instrument.getTransition();\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n\r\n                const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n                let prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n                let noteForThisTone: Note = note;\r\n                let nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n                let noteStart: number = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]);\r\n\r\n                if (noteStart > currentPart) {\r\n                    if (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0 ) && prevNoteForThisTone != null) {\r\n                        nextNoteForThisTone = noteForThisTone;\r\n                        noteForThisTone = prevNoteForThisTone;\r\n                        prevNoteForThisTone = null;\r\n                        noteStart = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]) ;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let noteEnd: number = noteForThisTone.end;\r\n                if ((transition.isSeamless || this.tyingOver[channel] >= 0 ) && nextNoteForThisTone != null) {\r\n                    noteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n                }\r\n\r\n\r\n                let tone: Tone;\r\n                if (toneList.count() <= i) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(i);\r\n                }\r\n                toneCount++;\r\n\r\n                tone.pitches[0] = noteForThisTone.pitches[i];\r\n                tone.pitchCount = 1;\r\n                tone.chordSize = noteForThisTone.pitches.length;\r\n                tone.instrument = instrument;\r\n                tone.note = noteForThisTone;\r\n                tone.noteStart = noteStart;\r\n                tone.noteEnd = noteEnd;\r\n                tone.prevNote = prevNoteForThisTone;\r\n                tone.nextNote = nextNoteForThisTone;\r\n                tone.prevNotePitchIndex = i;\r\n                tone.nextNotePitchIndex = i;\r\n\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                this.releaseTone(channel, toneList.popBack());\r\n            } else {\r\n                this.freeTone(toneList.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        Synth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n        let synthBuffer: Float32Array;\r\n        switch (tone.instrument.effects) {\r\n            case 0: synthBuffer = this.samplesForNone!; break;\r\n            case 1: synthBuffer = this.samplesForReverb!; break;\r\n            case 2: synthBuffer = this.samplesForChorus!; break;\r\n            case 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n            default: throw new Error();\r\n        }\r\n        const synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n        synthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n    }\r\n\r\n    private static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.custom: return customVolume;\r\n            case EnvelopeType.steady: return 1.0;\r\n            case EnvelopeType.twang:\r\n                return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell:\r\n                return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo:\r\n                return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2:\r\n                return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch:\r\n                return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare:\r\n                const speed: number = envelope.speed;\r\n                const attack: number = 0.25 / Math.sqrt(speed);\r\n                return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n            case EnvelopeType.decay:\r\n                return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.hard:\r\n                return time < 8 / envelope.speed ? 1.0 : 0.0;\r\n            case EnvelopeType.linear:\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n    }\r\n\r\n    private static computeChordVolume(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const instrument: Instrument = tone.instrument;\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const toneWasActive: boolean = tone.active;\r\n        const tickSampleCountdown: number = synth.tickSampleCountdown;\r\n        const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n        const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n        const ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n        const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n        const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n        const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n        const instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n        const treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n            \r\n        tone.phaseDeltaScale = 0.0;\r\n        tone.filter = 1.0;\r\n        tone.filterScale = 1.0;\r\n        tone.vibratoScale = 0.0;\r\n        tone.intervalMult = 1.0;\r\n        tone.intervalVolumeMult = 1.0;\r\n        tone.active = false;\r\n\r\n        let startPan: number = instrument.pan;\r\n        let endPan: number = instrument.pan;\r\n        if (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n            startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n            endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        let startPanDelay: number = instrument.panDelay;\r\n        let endPanDelay: number = instrument.panDelay;\r\n        if (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n            startPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n            endPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        const useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n        const useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n        // 10 pan delay is the same amount as vanilla beepbox.\r\n        const maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        const maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        tone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n        const delayEnd: number = -useEndPan * maxDelayEnd;\r\n        tone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n        tone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n        tone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n        let resetPhases: boolean = true;\r\n        let partsSinceStart: number = 0.0;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let transitionVolumeStart: number = 1.0;\r\n        let transitionVolumeEnd: number = 1.0;\r\n        let chordVolumeStart: number = chordVolume;\r\n        let chordVolumeEnd: number = chordVolume;\r\n        let customVolumeStart: number = 0.0;\r\n        let customVolumeEnd: number = 0.0;\r\n        let decayTimeStart: number = 0.0;\r\n        let decayTimeEnd: number = 0.0;\r\n\r\n        let volumeReferencePitch: number;\r\n        let basePitch: number;\r\n        let baseVolume: number;\r\n        let pitchDamping: number;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n            } else {\r\n                basePitch = Config.keys[song.key].basePitch;\r\n                baseVolume = 0.3;\r\n            }\r\n            volumeReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseVolume = 0.45;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n            baseVolume = 0.19;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.025;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.04725;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseVolume = 1.0;\r\n            volumeReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.volumeStarts[i] = 0.0;\r\n            tone.volumeDeltas[i] = 0.0;\r\n        }\r\n\r\n        if (released) {\r\n            const ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n            const startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n            const endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n            const toneTransition: Transition = tone.instrument.getTransition();\r\n            resetPhases = false;\r\n            partsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            customVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n            transitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            transitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            decayTimeStart = startTick / Config.ticksPerPart;\r\n            decayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n            if (shouldFadeOutFast) {\r\n                transitionVolumeStart *= 1.0 - startRatio;\r\n                transitionVolumeEnd *= 1.0 - endRatio;\r\n            }\r\n        } else if (tone.note == null) {\r\n            transitionVolumeStart = transitionVolumeEnd = 1;\r\n            customVolumeStart = customVolumeEnd = 1;\r\n            tone.lastInterval = 0;\r\n            tone.lastVolume = 6;\r\n            tone.ticksSinceReleased = 0;\r\n            resetPhases = false;\r\n\r\n            const heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.liveInputSamplesHeld += runLength;\r\n            const heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.noteLengthTicks = heldTicksEnd;\r\n            const heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n            const heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n            partsSinceStart = Math.floor(heldPartsStart);\r\n            decayTimeStart = heldPartsStart;\r\n            decayTimeEnd = heldPartsEnd;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n            const partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n            const noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n            const noteEnd: number = tone.noteEnd;\r\n\r\n            partsSinceStart = time - noteStart;\r\n\r\n            let endPinIndex: number;\r\n            for (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n                if (note.pins[endPinIndex].time + note.start > time) break;\r\n            }\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n            const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n            tone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.noteLengthTicks = noteLengthTicks;\r\n\r\n            const tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n            const tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            let customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n            let customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n            let transitionVolumeTickStart: number = 1.0;\r\n            let transitionVolumeTickEnd: number = 1.0;\r\n            let chordVolumeTickStart: number = chordVolume;\r\n            let chordVolumeTickEnd: number = chordVolume;\r\n            let intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            let intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            let decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n            let decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n            resetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n            // if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n            // if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n            // note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n            const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n            if (treatAsSeamless && !transition.slides && note.start == 0) {\r\n                // Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n                resetPhases = !toneWasActive;\r\n            } else if (treatAsSeamless && prevNote != null) {\r\n                resetPhases = !toneWasActive;\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n                    const intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n                    const volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n                    const decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            }\r\n            if (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n                // Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n            } else if (treatAsSeamless && nextNote != null) {\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n                    const intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n                    const volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n                    const decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            } else if (!(transition.releases && synth.tyingOver[channel] < 0 )) {\r\n                const releaseTicks: number = transition.releaseTicks;\r\n                if (releaseTicks > 0.0) {\r\n                    transitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n                    transitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n                }\r\n            }\r\n\r\n            intervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n            intervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n            if (instrument.type != InstrumentType.mod) {\r\n                customVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n                customVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n            } else {\r\n                customVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n                customVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n                tone.customVolumeStart = customVolumeStart;\r\n                tone.customVolumeEnd = customVolumeEnd;\r\n            }\r\n            transitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n            transitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n            chordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n            chordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n            decayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n            decayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n        }\r\n\r\n        const sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n        tone.active = true;\r\n\r\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n            const lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n            const lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n            let useVibratoStart: number = instrument.vibratoDepth;\r\n            let useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n            if (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n                useVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n                useVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            // Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n            let partsStart: number;\r\n            let partsEnd: number;\r\n            const activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n            if (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n                partsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n                partsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n            }\r\n            else {\r\n                let vibratoDelayStart: number = instrument.vibratoDelay;\r\n                let vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n                if (activeVibratoDelayMods) {\r\n                    vibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n                    vibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n                    // Special case - max vibrato delay means neeeeeever vibrato.\r\n                    if (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayStart = Number.MAX_VALUE;\r\n                    }\r\n                    if (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayEnd = Number.MAX_VALUE;\r\n                    }\r\n                }\r\n\r\n                partsStart = vibratoDelayStart;\r\n                partsEnd = vibratoDelayEnd;\r\n\r\n            }\r\n\r\n            const vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n            const vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n            const vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n            const vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n            intervalStart += vibratoStart;\r\n            intervalEnd += vibratoEnd;\r\n        }\r\n\r\n        if (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n            const attackSeconds: number = transition.attackSeconds;\r\n            if (attackSeconds > 0.0) {\r\n                transitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n                transitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n            }\r\n        }\r\n\r\n        const instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let filterCutModStart: number = instrument.filterCutoff;\r\n        let filterCutModEnd: number = instrument.filterCutoff;\r\n        if (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n            filterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n            filterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n        }\r\n\r\n        let cutoffOctavesModStart: number;\r\n        let cutoffOctavesModEnd: number;\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            cutoffOctavesModStart = 0;\r\n            cutoffOctavesModEnd = 0;\r\n        }\r\n        else {\r\n            cutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n            cutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n        }\r\n\r\n        const filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n        const filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n        const filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n        const filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n        const filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n        const filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n        tone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n        let endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n        tone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n        endFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n        tone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n        let filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n        let filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n        tone.filterResonanceStart = instrument.getFilterResonance();\r\n        tone.filterResonanceDelta = 0.0;\r\n\r\n        let useFilterResonanceStart: number = instrument.filterResonance;\r\n        let useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n        tone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n        if (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n            // This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n            // but the effect and ability to smoothly modulate will be preserved.\r\n            tone.isFirstOrder = false;\r\n\r\n            useFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n            useFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n            // Also set cut in the tone.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n            const filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n            // Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n            tone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n        }\r\n        else {\r\n            // Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n            // No functional difference though.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n        }\r\n\r\n        if (tone.isFirstOrder == false) {\r\n            filterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n            filterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n        }\r\n        if (filterEnvelope.type == EnvelopeType.decay) {\r\n            filterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n        } else if (filterEnvelope.type == EnvelopeType.twang) {\r\n            filterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n        }\r\n\r\n        if (resetPhases) {\r\n            tone.reset();\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.fm) {\r\n            // phase modulation!\r\n\r\n            let sineVolumeBoostStart: number = 1.0;\r\n            let sineVolumeBoostEnd: number = 1.0;\r\n            let totalCarrierVolumeStart: number = 0.0;\r\n            let totalCarrierVolumeEnd: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            if (tone.pitchCount > 1 && !chord.harmonizes) {\r\n                const arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n            for (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n                const pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n                const startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n                tone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n                    amplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n                    amplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                let volumeStart: number = amplitudeMultStart;\r\n                let volumeEnd: number = amplitudeMultEnd;\r\n\r\n                // Check for mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                    const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                    volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                    volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                // Check for SONG mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                    volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                    volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n                }\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n                    const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n                    const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n                    volumeStart *= pitchVolumeStart;\r\n                    volumeEnd *= pitchVolumeEnd;\r\n\r\n                    totalCarrierVolumeStart += amplitudeCurveStart;\r\n                    totalCarrierVolumeEnd += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    volumeStart *= Config.sineWaveLength * 1.5;\r\n                    volumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n                    sineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n                }\r\n                const operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n                volumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                volumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.volumeStarts[i] = volumeStart;\r\n                tone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n            }\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n                useFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n            }\r\n\r\n            const feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n            const feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n            let feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n            const volumeMult: number = baseVolume * instrumentVolumeMult;\r\n            tone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n            const volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n            sineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n            sineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n            tone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n            tone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            // Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n            tone.volumeStart = transitionVolumeStart;\r\n            let volumeEnd: number = transitionVolumeEnd;\r\n\r\n            tone.volumeStart *= customVolumeStart;\r\n            volumeEnd *= customVolumeEnd;\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n        } else {\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            let pitch: number = tone.pitches[0];\r\n\r\n            if (tone.pitchCount > 1) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.harmonizes) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    tone.intervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n            const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n            let settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n            let settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n                settingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n                settingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n                settingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                let pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                if (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n                    pulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n                const pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                const pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n            }\r\n\r\n            tone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n            tone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n            let volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n            if (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n                tone.volumeStart *= customVolumeStart;\r\n                volumeEnd *= customVolumeEnd;\r\n            }\r\n\r\n            // Check for mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                tone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n            // Check for SONG mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                tone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n            }\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n        }\r\n\r\n        tone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / runLength);\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n    private static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n\r\n    private static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        var wave: Float64Array;\r\n        var volumeScale: number;\r\n\r\n        const isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n        if (!isCustomWave) {\r\n            wave = Config.chipWaves[instrument.chipWave].samples;\r\n            volumeScale = 1.0;\r\n        }\r\n        else {\r\n            wave = instrument.customChipWaveIntegral;\r\n            // Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n            volumeScale = 0.1;\r\n        }\r\n\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        //console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume * volumeScale;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        //debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n        //console.log(stereoBufferIndex);\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n\r\n    }\r\n\r\n\r\n    private static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        const wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (sawPhaseA < phaseDelta) {\r\n                var t = sawPhaseA / phaseDelta;\r\n                pulseWave += (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                pulseWave += (t + t + t * t + 1) * 0.5;\r\n            }\r\n            if (sawPhaseB < phaseDelta) {\r\n                var t = sawPhaseB / phaseDelta;\r\n                pulseWave -= (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                pulseWave -= (t + t + t * t + 1) * 0.5;\r\n            }\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output      = +tone.feedbackOutputs[#];\r\nlet feedbackMult         = +tone.feedbackMult;\r\nconst feedbackDelta        = +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\nvar operator#Wave     = beepbox.Config.operatorWaves[instrument.operators[#].waveform].samples;\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = operator#Wave[operator#Index];\r\noperator#Output       = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = Math.random() * Config.chipNoiseLength;\r\n        }\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const waveSample: number = wave[phase & 0x7fff];\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            sample = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            sample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.volumeStart.\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n        let setting: ModSetting = instrument.modSettings[mod];\r\n\r\n        synth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n        // Reset arps, but only at the start of the note\r\n        if (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n            synth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n        }\r\n        else if (setting == ModSetting.mstNextBar) {\r\n            synth.wantToSkip = true;\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array): number {\r\n        let phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & 0x7fff;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & 0x7fff;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < 16; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % Config.chipNoiseLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static expressionToVolumeMult(expression: number): number {\r\n        return Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n    }\r\n    public static volumeMultToExpression(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(ModSetting.mstTempo, true)) {\r\n            beatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number, customScaleFlags: ReadonlyArray<boolean>): number[] {\r\n    const newScaleFlags: ReadonlyArray<boolean> = newScaleValue == Config.scales[\"dictionary\"][\"Custom\"].index ? customScaleFlags : Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\t\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n                { item: \"decay 3\", weight: 4 },\r\n                { item: \"wibble 1\", weight: 2 },\r\n                { item: \"wibble 2\", weight: 2 },\r\n                { item: \"wibble 3\", weight: 2 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 2 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"linear-1\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n                { item: \"soft fade\", weight: 1 },\r\n                { item: \"sliding fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n                { item: \"decay 3\", weight: 2 },\r\n                { item: \"wibble 1\", weight: 4 },\r\n                { item: \"wibble 2\", weight: 4 },\r\n                { item: \"wibble 3\", weight: 4 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 2 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"linear-1\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n                { item: \"soft fade\", weight: 2 },\r\n                { item: \"sliding fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n                    { item: \"piano\", weight: 5 },\r\n                    { item: \"warbled\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 2 },\r\n                        { item: \"wibble 1\", weight: 2 },\r\n                        { item: \"wibble 2\", weight: 2 },\r\n                        { item: \"wibble 3\", weight: 2 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 2 },\r\n                        { item: \"linear 3\", weight: 2 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n                        instrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 4 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 3 },\r\n                            { item: \"square\", weight: 6 },\r\n                            { item: \"25%pulse\", weight: 4 },\r\n                            { item: \"75%pulse\", weight: 4 },\r\n                            { item: \"ramp\", weight: 3 },\r\n                            { item: \"trapezoid\", weight: 4 },\r\n                        ])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n                            { item: \"decay 3\", weight: 1 },\r\n                            { item: \"wibble 1\", weight: 2 },\r\n                            { item: \"wibble 2\", weight: 2 },\r\n                            { item: \"wibble 3\", weight: 2 },\r\n                            { item: \"linear 1\", weight: 2 },\r\n                            { item: \"linear 2\", weight: 2 },\r\n                            { item: \"linear 3\", weight: 2 },\r\n                            { item: \"linear-1\", weight: 1 },\r\n                        ])].index;\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 4 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 4 },\r\n                            { item: \"square\", weight: 4 },\r\n                            { item: \"25%pulse\", weight: 4 },\r\n                            { item: \"75%pulse\", weight: 4 },\r\n                            { item: \"ramp\", weight: 4 },\r\n                            { item: \"trapezoid\", weight: 6 },\r\n                        ])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                        { item: \"wibble 1\", weight: 2 },\r\n                        { item: \"wibble 2\", weight: 2 },\r\n                        { item: \"wibble 3\", weight: 2 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 2 },\r\n                        { item: \"linear 3\", weight: 2 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomScale extends Change {\r\n    constructor(doc: SongDocument, flags: boolean[]) {\r\n        super();\r\n\r\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n            doc.song.scaleCustom[i] = flags[i];\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorWaveform extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].waveform = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note|null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n                if (upward) {\r\n                    let scale = doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n                    for (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n                        if (isNoise || ignoreScale || scale[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                } else {\r\n                    let scale = doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n                    for (let j: number = pitch - 1; j >= 0; j--) {\r\n                        if (isNoise || ignoreScale || scale[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n                if (upward) {\r\n                    let scale = doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n                        if (isNoise || ignoreScale || scale[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                } else {\r\n                    let scale = doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n                        if (isNoise || ignoreScale || scale[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\t\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish( ): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n                writer.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n                let tempScale = song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? song.scaleCustom : Config.scales[song.scale].flags;\r\n                const isMinor: boolean = tempScale[3] && !tempScale[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeCustomScale } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class CustomScalePrompt implements Prompt {\r\n    private readonly _flags: boolean[] = [];\r\n    private readonly _scaleFlags: HTMLInputElement[] = [];\r\n    private readonly _scaleRows: HTMLDivElement[] = [];\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n    public readonly container: HTMLDivElement;\r\n\r\n    constructor(private _doc: SongDocument) {\r\n        this._flags = _doc.song.scaleCustom.slice();\r\n        let scaleHolder: HTMLDivElement = div({});\r\n        for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n            this._scaleFlags[i] = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\", \"checked\": this._flags[i], \"value\": i });\r\n            this._scaleRows[i] = div({ style: \"text-align: right; height: 2em;\" },\r\n                \"note \" + i + \":\",\r\n                this._scaleFlags[i]\r\n            );\r\n            scaleHolder.appendChild(this._scaleRows[i])\r\n        }\r\n\r\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n        this.container = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n            h2(\"Custom Scale\"),\r\n            div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\r\n                scaleHolder,\r\n            ),\r\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n                this._okayButton,\r\n            ),\r\n            this._cancelButton,\r\n        )\r\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n    }\r\n\r\n    private _close = (): void => {\r\n        this._doc.undo();\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n            this._saveChanges();\r\n        }\r\n    }\r\n    \r\n\r\n    private _saveChanges = (): void => {\r\n        for (var i = 1; i < this._scaleFlags.length; i++) {\r\n            this._flags[i] = this._scaleFlags[i].checked;\r\n        }\r\n        this._doc.prompt = null;\r\n        this._doc.record(new ChangeCustomScale(this._doc, this._flags));\r\n    }\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n        const scale: ReadonlyArray<boolean> = this._doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\tif (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\treturn Math.floor(guess);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(guess) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tif (topPitch > max) {\r\n\t\t\t\tif (bottomPitch < min) {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn bottomPitch;\r\n\t\t\t\t}\r\n\t\t\t} else if (bottomPitch < min) {\r\n\t\t\t\treturn topPitch;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\treturn guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n                    let scale = this._doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n                    const notesInScale: number = scale.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging ) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n        let scale = this._doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n            this._backgroundPitchRows[j].style.visibility = scale[j] ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n    private _updateCursorPitch(): void {\r\n        const scale: ReadonlyArray<boolean> = this._doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n        if ((this._renderedScale == this._doc.song.scale && this._doc.song.scale != Config.scales[\"dictionary\"][\"Custom\"].index) && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n                this._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n                let scale = this._doc.song.scale == Config.scales[\"dictionary\"][\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\t\t\tif (!scale[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Length\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\"}, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"JummBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"JummBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n            } break;\r\n            case \"operatorWaveform\": {\r\n                message = div(\r\n                    h2(\"Operator Waveform\"),\r\n                    p('This setting controls the what kind of sound wave an individual FM wave uses.'),\r\n                    p('By defualt the FM synth only uses sinewaves, but you can change that now.'),\r\n                );\r\n            } break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection, ChangeOperatorWaveform } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { CustomScalePrompt } from \"./CustomScalePrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\toption({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"Song Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n    private readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n    private readonly _operatorDropdowns: HTMLButtonElement[] = []\r\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = []\r\n    private readonly _operatorDropdownRows: HTMLElement[] = []\r\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n    private _openTransitionDropdown: boolean = false;\r\n    private _openOperatorDropdowns: boolean[] = [];\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n            option({ value: \"customize\" }, \"Edit Custom Scale\"),\r\n        ));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\r\n            const dropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(4, i) }, \"▼\");//typescript doesn't makes i a reference right?\r\n            const dropdownRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\"), \r\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, waveformSelect));\r\n            const DropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, dropdownRow);\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n                operatorNumber,\r\n                dropdown,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n            );\r\n\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n            this._operatorEnvelopeSelects[i] = envelopeSelect;\r\n            this._operatorFrequencySelects[i] = frequencySelect;\r\n            this._operatorDropdowns[i] = dropdown;\r\n            this._operatorWaveformSelects[i] = waveformSelect;\r\n            this._operatorDropdownRows[i] = dropdownRow;\r\n            this._phaseModGroup.appendChild(DropdownGroup);\r\n            this._operatorDropdownGroups[i] = DropdownGroup;\r\n            this._openOperatorDropdowns[i] = false;\r\n\r\n            waveformSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\r\n            });\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number, instance: number = 0): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n                group = this._transitionDropdownGroup;\r\n                break;\r\n            case 4:\r\n                target = this._operatorDropdowns[instance];\r\n                this._openOperatorDropdowns[instance] = this._openOperatorDropdowns[instance] ? false : true;\r\n                group = this._operatorDropdownGroups[instance];\r\n                break;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"barCount\":\r\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n                    break;\r\n                case \"customScale\":\r\n                    this.prompt = new CustomScalePrompt(this._doc);\r\n                    break;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n                        setSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n                        setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\r\n                        this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n                        this._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n                        this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n                case \"forceScale\":\r\n                    this._doc.selection.forceScale();\r\n                    break;\r\n            }\r\n            switch (this._scaleSelect.value) {\r\n                case \"customize\":\r\n                    this._openPrompt(\"customScale\")\r\n                    break;\r\n            }\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"barCount\":\r\n\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        const scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale, this._doc.song.scaleCustom);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"jummbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}