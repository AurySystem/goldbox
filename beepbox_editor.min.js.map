{"version":3,"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/synth.ts","../editor/BarScrollBar.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/Layout.ts","../editor/LayoutPrompt.ts","../editor/LimiterPrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/Selection.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveLength","sineWaveMask","sineWave","generateSineWave","triWave","asin","generateTriWave","squareWave","generateSquareWave","sawWave","generateSawWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","A","B","#","♯","b","♭","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","lin","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","prompt","record","_validate","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","group","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","dropdown","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":"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AEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IA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","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags:                       [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags:                         [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags:                        [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags:                [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags:                        [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags:                        [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags:                    [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags:                      [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags:      [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags:  [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags:        [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags:        [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags:          [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags:                          [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags:                      [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags:    [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags:    [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags:                [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags:                  [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags:                  [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"Custom\", realName: \"custom\", flags:                        [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin: number = 30;\r\n\tpublic static readonly tempoMax: number = 320;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 2;\r\n\tpublic static readonly beatsPerBarMax: number = 16;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 256;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 10;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n    ]); \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"uhhh??\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n        { name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n        { name: \"sliding fade\", isSeamless: false, attackSeconds: 0.08, releases: true, releaseTicks: 96, slides: true, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n        { name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", spread: 0.25, offset: 0.05, volume: 0.9, sign: -0.8 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n        { name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n        { name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box...\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] }, \r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 12.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 4.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 1.0 },\r\n        { name: \"hard\", type: EnvelopeType.hard, speed: 6.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 40;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 8;\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n    public static readonly triWave: Float64Array = generateTriWave();\r\n    public static readonly squareWave: Float64Array = generateSquareWave();\r\n    public static readonly sawWave: Float64Array = generateSawWave()\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // New Drum noise? New Drum Noise!\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 16 ^ 4 << 2;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nfunction generateTriWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength))/(Math.PI/2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n        wave[i] = wave[i]>0?1.0:-1.0;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i - (Config.sineWaveLength * 0.75) + Config.sineWaveLength) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"JummBox \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\" :  `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount = CharCode.a,\r\n    bars = CharCode.b,\r\n    vibrato = CharCode.c,\r\n    transition = CharCode.d,\r\n    loopEnd = CharCode.e,\r\n    filterCutoff = CharCode.f,\r\n    barCount = CharCode.g,\r\n    interval = CharCode.h,\r\n    instrumentCount = CharCode.i,\r\n    patternCount = CharCode.j,\r\n    key = CharCode.k,\r\n    loopStart = CharCode.l,\r\n    reverb = CharCode.m,\r\n    channelCount = CharCode.n,\r\n    channelOctave = CharCode.o,\r\n    patterns = CharCode.p,\r\n    effects = CharCode.q,\r\n    rhythm = CharCode.r,\r\n    scale = CharCode.s,\r\n    tempo = CharCode.t,\r\n    preset = CharCode.u,\r\n    volume = CharCode.v,\r\n    wave = CharCode.w,\r\n\r\n    filterResonance = CharCode.y,\r\n    filterEnvelope = CharCode.z,\r\n    algorithm = CharCode.A,\r\n    feedbackAmplitude = CharCode.B,\r\n    chord = CharCode.C,\r\n    detune = CharCode.D,\r\n    operatorEnvelopes = CharCode.E,\r\n    feedbackType = CharCode.F,\r\n    arpeggioSpeed = CharCode.G,\r\n    harmonics = CharCode.H,\r\n\r\n    squareDuty = CharCode.K,\r\n    panning = CharCode.L,\r\n    customChipWave = CharCode.M,\r\n    songTitle = CharCode.N,\r\n    limiterSettings = CharCode.O,\r\n    operatorAmplitudes = CharCode.P,\r\n    operatorFrequencies = CharCode.Q,\r\n\r\n    spectrum = CharCode.S,\r\n    startInstrument = CharCode.T,\r\n    channelNames = CharCode.U,\r\n    feedbackEnvelope = CharCode.V,\r\n    pulseWidth = CharCode.W,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    volume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n    return { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n\r\n    public constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestVolume: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestVolume < pin.volume) {\r\n                    loudestVolume = pin.volume;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 6);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n        }\r\n        return newNote;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public instrument: number = 0;\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instrument = 0;\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 0;\r\n    public amplitude: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 0;\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.envelope = (index == 0) ? 0 : 1;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.envelope = other.envelope;\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(lowestOctave: number): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.chipNoiseLength;\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const highestOctave: number = 14;\r\n            const falloffRatio: number = 0.25;\r\n            // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n            const pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n            function controlPointToOctave(point: number): number {\r\n                return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n            }\r\n\r\n            let combinedAmplitude: number = 1;\r\n            for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n                const value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n                const value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n                const octave1: number = controlPointToOctave(i - 1);\r\n                let octave2: number = controlPointToOctave(i);\r\n                if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n                if (value1 == 0 && value2 == 0) continue;\r\n\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n            }\r\n            if (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n            scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n            // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.harmonicsWavelength;\r\n            const retroWave: Float32Array = getDrumWave(0);\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const overallSlope: number = -0.25;\r\n            let combinedControlPointAmplitude: number = 1;\r\n\r\n            for (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n                const harmonicFreq: number = harmonicIndex + 1;\r\n                let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n                if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                    controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n                }\r\n                const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n                let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n                if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                    combinedControlPointAmplitude += amplitude;\r\n                }\r\n                amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n                // Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n                // retro wave (effectively random) to avoid egregiously tall spikes.\r\n                amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n                wave[waveLength - harmonicFreq] = amplitude;\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n\r\n            // Limit the maximum wave amplitude.\r\n            const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < wave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = wave[i] * mult;\r\n                wave[i] = cumulative;\r\n            }\r\n            // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n    public chipNoise: number = 1;\r\n    public filterCutoff: number = 12;\r\n    public filterResonance: number = 0;\r\n    public filterEnvelope: number = 1;\r\n    public transition: number = 1;\r\n    public vibrato: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public interval: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public tieNoteTransition: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public detune: number = 0;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public pulseEnvelope: number = 1;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public feedbackAmplitude: number = 0;\r\n    public feedbackEnvelope: number = 1;\r\n    public LFOtime: number = 0;\r\n    public nextLFOtime: number = 0;\r\n    public arpTime: number = 0;\r\n    public customChipWave: Float64Array = new Float64Array(64);\r\n    public customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modStatuses: ModStatus[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modSettings: ModSetting[] = [];\r\n\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(0);\r\n                this.modStatuses.push(ModStatus.msNone);\r\n                this.modInstruments.push(0);\r\n                this.modSettings.push(ModSetting.mstNone);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.arpeggioSpeed = 12;\r\n        this.detune = 0;\r\n        this.tieNoteTransition = false;\r\n        this.clicklessTransition = false;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = 1;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                this.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.transition = 1;\r\n                this.effects = 0;\r\n                this.chord = 2;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.transition = 1;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.effects = 0;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                this.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modStatuses = [];\r\n                this.modInstruments = [];\r\n                this.modSettings = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(0);\r\n                    this.modStatuses.push(ModStatus.msNone);\r\n                    this.modInstruments.push(0);\r\n                    this.modSettings.push(ModSetting.mstNone);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n            \"panDelay\": this.panDelay,\r\n            \"arpeggioSpeed\": this.arpeggioSpeed,\r\n            \"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n            \"tieNoteTransition\": this.tieNoteTransition,\r\n            \"clicklessTransition\": this.clicklessTransition,\r\n            \"vibrato\": this.vibrato,\r\n            \"vibratoDepth\": this.vibratoDepth,\r\n            \"vibratoDelay\": this.vibratoDelay,\r\n            \"vibratoSpeed\": this.vibratoSpeed,\r\n            \"vibratoType\": this.vibratoType,\r\n            \"detune\": this.detune,\r\n            \"effects\": Config.effectsNames[this.effects],\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n            instrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n            instrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n\r\n            instrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"envelope\": Config.envelopes[operator.envelope].name,\r\n                });\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n            instrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n            instrumentObject[\"operators\"] = operatorArray;\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modStatuses\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n                instrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n        return instrumentObject;\r\n    }\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n        if (type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else {\r\n            this.detune = 0;\r\n        }\r\n\r\n        const oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n        const transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n        this.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n        if (this.transition == -1) this.transition = 1;\r\n\r\n        this.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n        if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n        if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n            this.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n        } else {\r\n            this.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        }\r\n        if (instrumentObject[\"filterResonance\"] != undefined) {\r\n            this.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n        } else {\r\n            this.filterResonance = 0;\r\n        }\r\n        this.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n        if (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n        if (instrumentObject[\"filter\"] != undefined) {\r\n            const legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n            const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n            const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n            const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n            let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n            if (legacyFilter == -1) legacyFilter = 0;\r\n            this.filterCutoff = legacyToCutoff[legacyFilter];\r\n            this.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n            this.filterResonance = 0;\r\n        }\r\n\r\n        const legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            if (instrumentObject[\"spectrum\"] != undefined) {\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        this.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n                        if (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            if (instrumentObject[\"harmonics\"] != undefined) {\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n                this.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n            } else {\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n            }\r\n\r\n            if (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n                this.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n                if (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipWave == -1) this.chipWave = 1;\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 3;\r\n\r\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n            if (this.algorithm == -1) this.algorithm = 0;\r\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n            if (this.feedbackType == -1) this.feedbackType = 0;\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            const legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n            this.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n            if (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n            for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                operator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n                if (operator.envelope == -1) operator.envelope = 0;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    this.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type.\");\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n                this.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n            }\r\n            else {\r\n                this.tieNoteTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number) {\r\n        return 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n    }\r\n\r\n    public warmUp(): void {\r\n        this.LFOtime = 0;\r\n        this.nextLFOtime = 0;\r\n        this.arpTime = 0;\r\n        if (this.type == InstrumentType.noise) {\r\n            getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            this.harmonicsWave.getCustomWave();\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            this.spectrumWave.getCustomWave(8);\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getDrumWave(): Float32Array {\r\n        if (this.type == InstrumentType.noise) {\r\n            return getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            return this.spectrumWave.getCustomWave(8);\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n            this.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n    }\r\n    public getChord(): Chord {\r\n        return this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n    }\r\n    public getFilterCutoffOctaves(): number {\r\n        return this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n    }\r\n    public getFilterIsFirstOrder(): boolean {\r\n        return this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n    }\r\n    public getFilterResonance(): number {\r\n        return this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n    }\r\n    public getFilterEnvelope(): Envelope {\r\n        if (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n        return Config.envelopes[this.filterEnvelope];\r\n    }\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport enum ModStatus {\r\n    msForPitch = 0,\r\n    msForNoise = 1,\r\n    msForSong = 2,\r\n    msNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n    mstNone = 0,\r\n    mstSongVolume = 1,\r\n    mstTempo = 2,\r\n    mstReverb = 3,\r\n    mstNextBar = 4,\r\n    mstInsVolume = 5,\r\n    mstPan = 6,\r\n    mstFilterCut = 7,\r\n    mstFilterPeak = 8,\r\n    mstFMSlider1 = 9,\r\n    mstFMSlider2 = 10,\r\n    mstFMSlider3 = 11,\r\n    mstFMSlider4 = 12,\r\n    mstFMFeedback = 13,\r\n    mstPulseWidth = 14,\r\n    mstDetune = 15,\r\n    mstVibratoDepth = 16,\r\n    mstSongDetune = 17,\r\n    mstVibratoSpeed = 18,\r\n    mstVibratoDelay = 19,\r\n    mstArpeggioSpeed = 20,\r\n    mstPanDelay = 21,\r\n    mstResetArpeggio = 22,\r\n    mstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"BeepBox\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 8;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 4;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n    private static readonly _variant = 0x6A; //\"j\" ~ jummbox\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public key: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public instrumentsPerChannel: number;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    // Maximum value possible for the mod (total number of possible positions)\r\n    public mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n        [ModSetting.mstReverb, Config.reverbRange - 1],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Config.volumeRange],\r\n        [ModSetting.mstPan, Config.panMax],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n        [ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n        [ModSetting.mstVibratoDepth, 50],\r\n        [ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n        [ModSetting.mstVibratoSpeed, 30],\r\n        [ModSetting.mstVibratoDelay, 50],\r\n        [ModSetting.mstArpeggioSpeed, 50],\r\n        [ModSetting.mstPanDelay, 20],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ]\r\n    );\r\n\r\n    // When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n    public mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n        [ModSetting.mstReverb, 0],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n        [ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, 0],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n        [ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n        [ModSetting.mstVibratoDepth, 0],\r\n        [ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n        [ModSetting.mstVibratoSpeed, 0],\r\n        [ModSetting.mstVibratoDelay, 0],\r\n        [ModSetting.mstArpeggioSpeed, 10],\r\n        [ModSetting.mstPanDelay, 10],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ])\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    public modValueToReal(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value += Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value -= Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value += Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value += Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public isSettingForSong(setting: ModSetting): boolean {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstNextBar:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public realToModValue(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value -= Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value += Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value -= Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value -= Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            \r\n            // For tempo, actually use user defined tempo\r\n            if (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n                cap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n            }\r\n            \r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n        if (!isMod)\r\n            return 6;\r\n        else {\r\n            let cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getChannelIsNoise(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.key = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 150;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 1;\r\n        this.instrumentsPerChannel = 1;\r\n\r\n        this.title = \"Unnamed\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                for (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let bar = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n        buffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\r\n        buffer.push(SongTagCode.songTitle);\r\n\r\n        // Length of the song name string\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                buffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n                buffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                    buffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n                    buffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n                    buffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n                    buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.fm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n                    buffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorEnvelopes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.filterEnvelope);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channel].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        let neededInstrumentBits: number = 0;\r\n        while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modStatus: ModStatus = instrument.modStatuses[mod];\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modSettings[mod];\r\n\r\n                        bits.write(2, modStatus);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededInstrumentBits, modInstrument);\r\n                        }\r\n\r\n                        // Mod setting is only used if the status isn't \"none\".\r\n                        if (modStatus != ModStatus.msNone) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n            let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n            const recentShapes: any[] = [];\r\n\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                bits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(3, note.pins[0].volume); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(3, pin.volume); // volume\r\n                            }\r\n                            else {\r\n                                shapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest, then...\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\r\n        const maxApplyArgs: number = 64000;\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists.\r\n            return String.fromCharCode.apply(null, buffer);\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        var variant: string = \"beepbox\";\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            variant = \"jummbox\";\r\n            charIndex++;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n        if (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        this.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n        if (beforeThree && variant == \"beepbox\") {\r\n            // Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) channel.instruments[0].transition = 0;\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let toSetOctaves: number[] = [];\r\n        let command: number;\r\n        let channel: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (variant == \"beepbox\" || beforeTwo) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                }\r\n                else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (variant == \"beepbox\") this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && variant == \"beepbox\") {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (variant == \"beepbox\") {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n                else {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channel].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                if (variant == \"beepbox\" && beforeEight) {\r\n                    this.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    this.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        this.channels[channel].patterns[pattern] = new Pattern();\r\n                    }\r\n                    this.channels[channel].patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                const instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    const isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n                    const isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n                    for (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                        this.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    this.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n                    if (beforeSix && variant == \"beepbox\") {\r\n                        for (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n                if (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n                    if (this.rhythm == 0 || this.rhythm == 2) {\r\n                        useSlowerArpSpeed = true;\r\n                    }\r\n                    // Use faster two note arp on these rhythms\r\n                    if (this.rhythm >= 2) {\r\n                        useFastTwoNoteArp = true;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                    this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                } else {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                        this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            if (channel >= this.pitchChannelCount) {\r\n                                this.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                this.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterCutoff: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const instrument: Instrument = this.channels[channel].instruments[0];\r\n                        const legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    } else if (beforeSix && variant == \"beepbox\") {\r\n                        for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                                const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                if (channel < this.pitchChannelCount) {\r\n                                    instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                    instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                                    instrument.filterResonance = 0;\r\n                                } else {\r\n                                    instrument.filterCutoff = 10;\r\n                                    instrument.filterEnvelope = 1;\r\n                                    instrument.filterResonance = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.filterEnvelope: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.drumset) {\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                } else {\r\n                    instrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                if (variant == \"beepbox\") {\r\n                    // Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n                    // piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.transition: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            this.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                } else if (beforeFour || variant == \"beepbox\") {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 3, 2, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                                ? legacyEnvelopes[effect]\r\n                                : instrument.filterEnvelope;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else {\r\n                    const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = vibrato;\r\n                    // Custom vibrato\r\n                    if (vibrato == Config.vibratos.length) {\r\n                        instrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                        instrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    // Enforce standard vibrato settings\r\n                    else {\r\n                        instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                        instrument.vibratoSpeed = 10; // Normal speed\r\n                        instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n                        instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n            } break;\r\n            case SongTagCode.interval: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                interval = 2;\r\n                                this.channels[channel].instruments[i].chord = 3;\r\n                            }\r\n                            this.channels[channel].instruments[i].interval = interval;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        interval = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.panning: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (variant == \"beepbox\") {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                }\r\n                else {\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n                // Now, pan delay follows on new versions of jummbox.\r\n                if (variant == \"jummbox\" && !beforeThree)\r\n                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    // Limiter isn't used\r\n                    this.compressionRatio = 1.0;\r\n                    this.limitRatio = 1.0;\r\n                    this.limitRise = 4000.0;\r\n                    this.limitDecay = 4.0;\r\n                    this.limitThreshold = 1.0;\r\n                    this.compressionThreshold = 1.0;\r\n                    this.masterGain = 1.0;\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorEnvelopes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channel].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && variant == \"beepbox\") {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channel: number;\r\n                let largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n                let recentPitchBitLength: number = ( largerChords ? 4 : 3 );\r\n                let recentPitchLength: number = ( largerChords ? 16 : 8 );\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channel = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                let neededInstrumentBits: number = 0;\r\n                while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n                while (true) {\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                instrument.modStatuses[mod] = bits.read(2);\r\n\r\n                                // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                                if (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n                                    // Clamp to pitch/noise max\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n                                    }\r\n                                    else {\r\n                                        instrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                    }\r\n\r\n                                    instrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n                                    instrument.modSettings[mod] = bits.read(6);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n                    let note: Note | null = null;\r\n                    let pin: NotePin | null = null;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = this.channels[channel].patterns[i];\r\n                        newPattern.reset();\r\n                        newPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n                        if (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && variant == \"beepbox\")\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                let pinObj: any;\r\n                                let pitch: number;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n                                    shape.pinCount = bits.readPinCount();\r\n\r\n                                    if (variant == \"beepbox\") {\r\n                                        shape.initialVolume = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialVolume = bits.read(3);\r\n                                    } else {\r\n                                        shape.initialVolume = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        pinObj = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && variant == \"beepbox\")\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n\r\n                                        if (variant == \"beepbox\") {\r\n                                            pinObj.volume = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.volume = bits.read(3);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.volume = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                                note = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n                                note.pitches = [];\r\n                                note.pins.length = 1;\r\n                                const pitchBends: number[] = [];\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches.push(pitch);\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n\r\n                                pitchBends.unshift(note.pitches[0]);\r\n\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n                                    pin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n                                    note.pins.push(pin);\r\n                                }\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                                newNotes.push(note);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        break;\r\n                    } else {\r\n                        channel++;\r\n                        if (channel >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n            } break;\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            if (toSetOctaves[channel] != null) {\r\n                this.channels[channel].octave = toSetOctaves[channel];\r\n            }\r\n        }\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                instrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                const noteArray: Object[] = [];\r\n                for (const note of pattern.notes) {\r\n                    let volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n                    const pointArray: Object[] = [];\r\n                    for (const pin of note.pins) {\r\n                        let useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n                        pointArray.push({\r\n                            \"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                            \"pitchBend\": pin.interval,\r\n                            \"volume\": useVol,\r\n                            \"forMod\": isModChannel,\r\n                        });\r\n                    }\r\n\r\n                    noteArray.push({\r\n                        \"pitches\": note.pitches,\r\n                        \"points\": pointArray,\r\n                    });\r\n                }\r\n\r\n                patternArray.push({\r\n                    \"instrument\": pattern.instrument + 1,\r\n                    \"notes\": noteArray,\r\n                });\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n\r\n            channelArray.push({\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"octaveScrollBar\": this.channels[channel].octave,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            });\r\n        }\r\n\r\n        return {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestJummBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            //\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n            \"channels\": channelArray,\r\n        };\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"dbl harmonic :)\",\r\n                \"romani :(\": \"dbl harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                const letter: string = key.charAt(0).toUpperCase();\r\n                const symbol: string = key.charAt(1).toLowerCase();\r\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                let index: number | undefined = letterMap[letter];\r\n                const offset: number | undefined = accidentalMap[symbol];\r\n                if (index != undefined) {\r\n                    if (offset != undefined) index += offset;\r\n                    if (index < 0) index += 12;\r\n                    index = index % 12;\r\n                    this.key = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"]) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        this.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"]) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n                }\r\n\r\n                for (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n                    channel.patterns[i] = new Pattern();\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = 1;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n\r\n                for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                    const instrument: Instrument = channel.instruments[i];\r\n                    instrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = channel.patterns[i];\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n                    if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n                        const maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n                        //let tickClock: number = 0;\r\n                        for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                            if (j >= maxNoteCount) break;\r\n\r\n                            const noteObject = patternObject[\"notes\"][j];\r\n                            if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                                continue;\r\n                            }\r\n\r\n                            const note: Note = new Note(0, 0, 0, 0);\r\n                            note.pitches = [];\r\n                            note.pins = [];\r\n\r\n                            for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                                const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                                if (note.pitches.indexOf(pitch) != -1) continue;\r\n                                note.pitches.push(pitch);\r\n                                if (note.pitches.length >= Config.maxChordSize) break;\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            //let noteClock: number = tickClock;\r\n                            let startInterval: number = 0;\r\n                            for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                                const pointObject: any = noteObject[\"points\"][k];\r\n                                if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                                const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                                const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                                let volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n                                // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                                // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                                let volume: number;\r\n                                if (pointObject[\"volume\"] == undefined) {\r\n                                    volume = volumeCap;\r\n                                } else if (pointObject[\"forMod\"] == undefined) {\r\n                                    volume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n                                else {\r\n                                    volume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n\r\n                                if (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n                                if (note.pins.length == 0) {\r\n                                    //if (time < noteClock) continue;\r\n                                    note.start = time;\r\n                                    startInterval = interval;\r\n                                } else {\r\n                                    //if (time <= noteClock) continue;\r\n                                }\r\n                                //noteClock = time;\r\n\r\n                                note.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n                            }\r\n                            if (note.pins.length < 2) continue;\r\n\r\n                            note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                            const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                            let lowestPitch: number = maxPitch;\r\n                            let highestPitch: number = 0;\r\n                            for (let k: number = 0; k < note.pitches.length; k++) {\r\n                                note.pitches[k] += startInterval;\r\n                                if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                                    note.pitches.splice(k, 1);\r\n                                    k--;\r\n                                }\r\n                                if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                                if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                                if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                                if (k >= 2) {\r\n                                    if (pin.interval == note.pins[k - 1].interval &&\r\n                                        pin.interval == note.pins[k - 2].interval &&\r\n                                        pin.volume == note.pins[k - 1].volume &&\r\n                                        pin.volume == note.pins[k - 2].volume) {\r\n                                        note.pins.splice(k - 1, 1);\r\n                                        k--;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            pattern.notes.push(note);\r\n                            //tickClock = note.end;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n    }\r\n\r\n    public getPattern(channel: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channel].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channel].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getPatternInstrument(channel: number, bar: number): number {\r\n        const pattern: Pattern | null = this.getPattern(channel, bar);\r\n        return pattern == null ? 0 : pattern.instrument;\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n}\r\n\r\nclass Tone {\r\n    public instrument: Instrument;\r\n    public readonly pitches: number[] = [0, 0, 0, 0];\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number = 0;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public active: boolean = false;\r\n    public noteStart: number = 0;\r\n    public noteEnd: number = 0;\r\n    public noteLengthTicks: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public lastVolume: number = 0;\r\n    public stereoVolume1: number = 0.0;\r\n    public stereoVolume2: number = 0.0;\r\n    public stereoOffset: number = 0.0;\r\n    public stereoDelay: number = 0.0;\r\n    public sample: number = 0.0;\r\n    public readonly phases: number[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n    public readonly volumeStarts: number[] = [];\r\n    public readonly volumeDeltas: number[] = [];\r\n    public volumeStart: number = 0.0;\r\n    public volumeDelta: number = 0.0;\r\n    public phaseDeltaScale: number = 0.0;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public filter: number = 0.0;\r\n    public filterScale: number = 0.0;\r\n    public filterSample0: number = 0.0;\r\n    public filterSample1: number = 0.0;\r\n    public vibratoScale: number = 0.0;\r\n    public intervalMult: number = 0.0;\r\n    public intervalVolumeMult: number = 1.0;\r\n    public feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n            this.feedbackOutputs[i] = 0.0;\r\n        }\r\n        this.sample = 0.0;\r\n        this.filterSample0 = 0.0;\r\n        this.filterSample1 = 0.0;\r\n        this.liveInputSamplesHeld = 0.0;\r\n    }\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            for (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n                for (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n                    Synth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n                    song.channels[channel].instruments[instrument].warmUp();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n                for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                if (!(this.song.channels[channel].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channel, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n                            let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                                        if (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                            latestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n                                        this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                        latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n\r\n    public song: Song | null = null;\r\n    public liveInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    private tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[];\r\n    private modInsValues: (number | null)[][][];\r\n    private nextModValues: (number | null)[];\r\n    private nextModInsValues: (number | null)[][][];\r\n    private isPlayingSong: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly activeTones: Array<Deque<Tone>> = [];\r\n    private tyingOver: number[] = [];\r\n    private readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n    //private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n    private readonly releasedTones: Array<Deque<Tone>> = [];\r\n    private readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n    //private highpassInput: number = 0.0;\r\n    //private highpassOutput: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private stereoBufferIndex: number = 0;\r\n    private samplesForNone: Float32Array | null = null;\r\n    private samplesForReverb: Float32Array | null = null;\r\n    private samplesForChorus: Float32Array | null = null;\r\n    private samplesForChorusReverb: Float32Array | null = null;\r\n\r\n    private chorusDelayLine: Float32Array = new Float32Array(2048);\r\n    private chorusDelayPos: number = 0;\r\n    private chorusPhase: number = 0;\r\n\r\n    private reverbDelayLine: Float32Array = new Float32Array(16384);\r\n    private reverbDelayPos: number = 0;\r\n    private reverbFeedback0: number = 0.0;\r\n    private reverbFeedback1: number = 0.0;\r\n    private reverbFeedback2: number = 0.0;\r\n    private reverbFeedback3: number = 0.0;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            remainder = samplesPerTick * (remainder - this.tick);\r\n            this.tickSampleCountdown = samplesPerTick - remainder;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    // Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n                                                            let currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n        let val: number;\r\n        let nextVal: number;\r\n        switch (setting) {\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstSongDetune:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                nextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n                if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                    this.modValues[setting] = val;\r\n                    this.nextModValues[setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstDetune:\r\n                val = this.song!.modValueToReal(volumeStart, setting);\r\n                nextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n                let channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n                if (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n                    || this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n                    || this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n                    this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n                    this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstNextBar:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                break;\r\n            case ModSetting.mstNone:\r\n            default:\r\n                val = -1;\r\n                break;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        if (this.audioCtx == null || this.scriptNode == null) {\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.isPlayingSong = true;\r\n        this.warmUpSynthesizer(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n        }\r\n        this.modValues = [];\r\n        this.modInsValues = [];\r\n        this.nextModValues = [];\r\n        this.nextModInsValues = [];\r\n        this.tyingOver = [];\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.reverbDelayPos = 0;\r\n        this.reverbFeedback0 = 0.0;\r\n        this.reverbFeedback1 = 0.0;\r\n        this.reverbFeedback2 = 0.0;\r\n        this.reverbFeedback3 = 0.0;\r\n        //this.highpassInput = 0.0;\r\n        //this.highpassOutput = 0.0;\r\n        this.freeAllTones();\r\n        for (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n        for (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n        if (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n        if (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n        if (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n        if (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public nextBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    public firstBar(): void {\r\n        if (!this.song) return;\r\n        this.bar = 0;\r\n        this.playheadInternal = 0;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public jumpToEditingBar(bar: number): void {\r\n        if (!this.song) return;\r\n\r\n        this.bar = bar;\r\n\r\n        this.playheadInternal = bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public prevBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        const isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n        if (!isPlayingLiveTones && !this.isPlayingSong) {\r\n            for (let i: number = 0; i < outputBuffer.length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        this.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        const channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n        for (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n            this.activeTones[i] = new Deque<Tone>();\r\n            this.releasedTones[i] = new Deque<Tone>();\r\n        }\r\n        this.activeTones.length = channelCount;\r\n        this.releasedTones.length = channelCount;\r\n        if ( channelCount != this.tyingOver.length ) {\r\n            let idx: number = this.tyingOver.length;\r\n            this.tyingOver.length = channelCount;\r\n            while ( idx < this.tyingOver.length ) {\r\n                this.tyingOver[idx++] = -1;\r\n            }\r\n        }\r\n\r\n        for (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n            this.activeModTones[i] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.activeModTones[i][mod] = new Deque<Tone>();\r\n            }\r\n            this.activeModTones[i].length = Config.modCount;\r\n        }\r\n        this.activeModTones.length = this.song.modChannelCount;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let bufferIndex: number = 0;\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        while (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n        if (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n        if (playSong) {\r\n            if (this.beat >= this.song.beatsPerBar) {\r\n                this.bar++;\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n\r\n                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                    this.bar = this.song.loopStart;\r\n                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                }\r\n            }\r\n            if (this.bar >= this.song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        const stereoBufferLength: number = outputBufferLength * 4;\r\n        if (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n            this.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n            this.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n            this.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n            this.samplesForNone = new Float32Array(stereoBufferLength);\r\n            this.samplesForReverb = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorus = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n            this.stereoBufferIndex = 0;\r\n        }\r\n        let stereoBufferIndex: number = this.stereoBufferIndex;\r\n        const samplesForNone: Float32Array = this.samplesForNone;\r\n        const samplesForReverb: Float32Array = this.samplesForReverb;\r\n        const samplesForChorus: Float32Array = this.samplesForChorus;\r\n        const samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n        const reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n        const chorusDuration: number = 2.0;\r\n        const chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n        const chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n        const chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n        const chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n        const chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n        const chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n        const chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n        const chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n        let chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n        let chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n        let reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n        let reverbFeedback0: number = +this.reverbFeedback0;\r\n        let reverbFeedback1: number = +this.reverbFeedback1;\r\n        let reverbFeedback2: number = +this.reverbFeedback2;\r\n        let reverbFeedback3: number = +this.reverbFeedback3;\r\n        let useReverb: number = this.song.reverb;\r\n        if (this.isModActive(ModSetting.mstReverb, true)) {\r\n            useReverb = this.getModValue(ModSetting.mstReverb, true);\r\n        }\r\n        let reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n        //const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n        const compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n        const limitThreshold: number = this.song.limitThreshold; // Default 1\r\n        const compressionRatio: number = this.song.compressionRatio; // Default 1\r\n        const limitRatio: number = this.song.limitRatio; // Default 1\r\n        const masterGain: number = this.song.masterGain; // Default 1\r\n        //let highpassInput: number = +this.highpassInput;\r\n        //let highpassOutput: number = +this.highpassOutput;\r\n        let limit: number = +this.limit;\r\n\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n            for (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n                // Also determines mod tones.\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    for (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n                        const tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n                        if (this.song.channels[channel].muted == false)\r\n                            this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if ( this.wantToSkip ) {\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n            }\r\n\r\n            if (this.isModActive(ModSetting.mstReverb, true)) {\r\n                reverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n            }\r\n\r\n            // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n            const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrument.LFOtime = instrument.nextLFOtime;\r\n\r\n                    if (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n                        useVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrument.LFOtime = 0;\r\n                        instrument.nextLFOtime = 0;\r\n                    }\r\n                    else {\r\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n                if (channel == this.liveInputChannel) {\r\n                    this.determineLiveInputTones(this.song);\r\n\r\n                    for (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n                        const tone: Tone = this.liveInputTones.get(i);\r\n                        // Hmm. Will allow active input from a muted channel for now.\r\n                        //if (this.song.channels[channel].muted == false)\r\n                        this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n                for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                    const tone: Tone = this.activeTones[channel].get(i);\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                    const tone: Tone = this.releasedTones[channel].get(i);\r\n                    if (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n                        this.freeReleasedTone(channel, i);\r\n                        i--;\r\n                        continue;\r\n                    }\r\n\r\n                    const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            let chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            let chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            let chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            let chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            let chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            let chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            chorusPhase += chorusAngle * runLength;\r\n            const chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            const chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            const chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            const chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            const chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            const chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            const chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n            const chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n            const chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n            const chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n            const chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n            const chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n            const runEnd: number = bufferIndex + runLength;\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                const bufferIndexL: number = stereoBufferIndex;\r\n                const bufferIndexR: number = stereoBufferIndex + 1;\r\n                const sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n                const sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n                const sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n                const sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n                const sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n                const sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n                const sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n                const sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n                stereoBufferIndex += 2;\r\n\r\n                const combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n                const combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n                const chorusTap0Ratio: number = chorusTap0Index % 1;\r\n                const chorusTap1Ratio: number = chorusTap1Index % 1;\r\n                const chorusTap2Ratio: number = chorusTap2Index % 1;\r\n                const chorusTap3Ratio: number = chorusTap3Index % 1;\r\n                const chorusTap4Ratio: number = chorusTap4Index % 1;\r\n                const chorusTap5Ratio: number = chorusTap5Index % 1;\r\n                const chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n                const chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n                const chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n                const chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n                const chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n                const chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n                const chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n                const chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n                const chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n                const chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n                const chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n                const chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n                const chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n                const chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n                const chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n                const chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n                const chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n                const chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n                const chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n                const chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n                chorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n                chorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n                chorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n                chorusTap0Index += chorusTap0Delta;\r\n                chorusTap1Index += chorusTap1Delta;\r\n                chorusTap2Index += chorusTap2Delta;\r\n                chorusTap3Index += chorusTap3Delta;\r\n                chorusTap4Index += chorusTap4Delta;\r\n                chorusTap5Index += chorusTap5Delta;\r\n\r\n                // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n                // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n                // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n                // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n                const reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n                const reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n                const reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n                const reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n                const reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n                const reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n                const reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n                const reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n                const reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n                const reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n                const reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n                reverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n                reverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n                reverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n                reverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n                reverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n                reverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n                reverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n                reverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n                reverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n                // Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n                const sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n                const sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n                /*\r\n                highpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n                highpassInput = sample;\r\n                // use highpassOutput instead of sample below?\r\n                */\r\n\r\n                // A compressor/limiter.\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                        const tone: Tone = this.releasedTones[channel].get(i);\r\n                        tone.ticksSinceReleased++;\r\n\r\n                        const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n                        if (shouldFadeOutFast) {\r\n                            this.freeReleasedTone(channel, i);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update arpeggio time, which is used to calculate arpeggio position\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    var atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n                    // Check if any active tones should be released.\r\n                    for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                        // Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n                        var carryOver = false;\r\n                        var toneCount = this.activeTones[channel].count();\r\n                        var pattern = this.song.getPattern(channel, this.bar);\r\n                        if ( pattern != null && atEnd ) {\r\n                            var instrument = pattern.instrument;\r\n                            if ( this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0 ) {\r\n                                // Verify that all tie conditions are met\r\n                                // 1. Check for a note in this channel at the start of the next bar\r\n                                // 2. Check that the note's volume start matches the current volume\r\n                                // 3. Check that the shape (pitches, chord size) is a match\r\n                                // 4. Check that the instruments are the same\r\n                                var targetBar = this.bar + 1;\r\n                                if ( targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n                                    targetBar = this.song.loopStart;\r\n                                }\r\n                                var nextPattern = this.song.getPattern(channel, targetBar);\r\n                                var currNote = this.activeTones[channel].get(0).note;\r\n                                if ( currNote != null ) {\r\n                                    var pin = 0;\r\n                                    while ( currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length-1 )\r\n                                        pin++;\r\n                                    var currVolume = currNote.pins[pin].volume;\r\n                                    var lastInterval = currNote.pins[pin].interval;\r\n\r\n                                    if ( nextPattern != null && nextPattern.instrument == instrument ) {\r\n                                        for( let i: number = 0; i < nextPattern.notes.length; i++ ) {\r\n                                            if ( nextPattern.notes[i].start == 0\r\n                                                && nextPattern.notes[i].pins[0].volume == currVolume\r\n                                                && nextPattern.notes[i].pitches.length == currNote.pitches.length ) {\r\n                                                \r\n                                                carryOver = true;\r\n                                                for ( let j: number = 0; j < currNote.pitches.length; j++ ) {\r\n                                                    // Allow any pitch order\r\n                                                    if ( nextPattern.notes[i].pitches.findIndex( (p) => p == currNote!.pitches[j] + lastInterval ) == -1 ) {\r\n                                                        carryOver = false;\r\n                                                        j = currNote.pitches.length;\r\n                                                    }\r\n                                                }\r\n                                                i = nextPattern.notes.length;\r\n                                                \r\n                                                if ( carryOver ) {\r\n                                                    // Prior to an actual tie, all releasing for hard transitions also needs to be\r\n                                                    // cancelled. So, this check is ran a few parts before the end of a bar too.\r\n                                                    // In those cases, just set tyingOver to 0 for that duration to cancel release\r\n                                                    // handling, but not affect note start time calculations.\r\n                                                    if ( this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar) ) {\r\n                                                        // Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n                                                        if ( this.tyingOver[channel] < 0 ) {\r\n                                                            this.tyingOver[channel] = 0;\r\n                                                        }\r\n                                                    }\r\n                                                    // Special case: tying over a whole bar, just add the length.\r\n                                                    else if ( currNote.start == 0 && this.tyingOver[channel] >= 0 ) {\r\n                                                        this.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n                                                    }\r\n                                                    else {\r\n                                                        // Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n                                                        this.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                            const tone: Tone = this.activeTones[channel].get(i);\r\n                            const transition: Transition = tone.instrument.getTransition();\r\n                            \r\n                            if (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                // Free tone if the transition allows\r\n                                if (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n                                    if (transition.releases) {\r\n                                        this.releaseTone(channel, tone);\r\n                                    } else {\r\n                                        this.freeTone(tone);\r\n                                    }\r\n                                    this.activeTones[channel].remove(i);\r\n                                    i--;\r\n                                }\r\n\r\n                                // End of note: if not actively trying to carry over, kill note tie\r\n                                if ( !carryOver ) {\r\n                                    this.tyingOver[channel] = -1;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                            for (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n                                const tone: Tone = this.activeModTones[channel][mod].get(i);\r\n                                const transition: Transition = tone.instrument.getTransition();\r\n                                if (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                    this.freeTone(tone);\r\n                                    this.activeModTones[channel][mod].remove(i);\r\n                                    i--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == this.song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n                                this.bar++;\r\n                                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                                    this.bar = this.song.loopStart;\r\n                                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                                }\r\n                                if (this.bar >= this.song.barCount) {\r\n                                    this.bar = 0;\r\n                                    if (this.loopRepeatCount != -1) {\r\n                                        ended = true;\r\n                                        this.resetEffects();\r\n                                        this.pause();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(ModSetting.mstTempo, true)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n                for (let instrument of this.song.channels[channel].instruments) {\r\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                for (let channel: number = 0; channel < channelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n        if (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n        if (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n        if (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n        //if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n        //if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n        if (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n        this.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n        this.chorusPhase = chorusPhase;\r\n        this.chorusDelayPos = chorusDelayPos;\r\n        this.reverbDelayPos = reverbDelayPos;\r\n        this.reverbFeedback0 = reverbFeedback0;\r\n        this.reverbFeedback1 = reverbFeedback1;\r\n        this.reverbFeedback2 = reverbFeedback2;\r\n        this.reverbFeedback3 = reverbFeedback3;\r\n        //this.highpassInput = highpassInput;\r\n        //this.highpassOutput = highpassOutput;\r\n        this.limit = limit;\r\n\r\n        if (playSong) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n        const secondsGenerated = samplesAccumulated / 44100;\r\n        const secondsRequired = samplePerformance / 1000;\r\n        const ratio = secondsRequired / secondsGenerated;\r\n        console.log(ratio);\r\n        samplePerformance = 0;\r\n        samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.reset();\r\n            tone.active = false;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(channel: number, tone: Tone): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.releasedTones[channel].pushFront(tone);\r\n        }\r\n        else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    private freeReleasedTone(channel: number, toneIndex: number): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.freeTone(this.releasedTones[channel].get(toneIndex));\r\n            this.releasedTones[channel].remove(toneIndex);\r\n        } else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n            this.releasedModTones[channel][mod].remove(toneIndex);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        while (this.liveInputTones.count() > 0) {\r\n            this.freeTone(this.liveInputTones.popBack());\r\n        }\r\n        for (let i: number = 0; i < this.activeTones.length; i++) {\r\n            while (this.activeTones[i].count() > 0) {\r\n                this.freeTone(this.activeTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i: number = 0; i < this.releasedTones.length; i++) {\r\n            while (this.releasedTones[i].count() > 0) {\r\n                this.freeTone(this.releasedTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeModTones.length; i++) {\r\n            for (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n                while (this.activeModTones[i][mod].count() > 0) {\r\n                    this.freeTone(this.activeModTones[i][mod].popBack());\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        for (let i = 0; i < this.releasedModTones.length; i++) {\r\n        for (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n        while (this.releasedModTones[i][mod].count() > 0) {\r\n        this.freeTone(this.releasedModTones[i][mod].popBack());\r\n        }\r\n        }\r\n        }\r\n        */\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song): void {\r\n        const toneList: Deque<Tone> = this.liveInputTones;\r\n        const pitches: number[] = this.liveInputPitches;\r\n        let toneCount: number = 0;\r\n        if (this.liveInputDuration > 0) {\r\n            const instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n            if (instrument.getChord().arpeggiates) {\r\n                let tone: Tone;\r\n                if (toneList.count() == 0) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                    this.releaseTone(this.liveInputChannel, toneList.popFront());\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(0);\r\n                }\r\n                toneCount = 1;\r\n\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    tone.pitches[i] = pitches[i];\r\n                }\r\n                tone.pitchCount = pitches.length;\r\n                tone.chordSize = 1;\r\n                tone.instrument = instrument;\r\n                tone.note = tone.prevNote = tone.nextNote = null;\r\n            } else {\r\n                //const transition: Transition = instrument.getTransition();\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= i) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(this.liveInputChannel, toneList.get(i));\r\n                        tone = this.newTone();\r\n                        toneList.set(i, tone);\r\n                    } else {\r\n                        tone = toneList.get(i);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    tone.pitches[0] = pitches[i];\r\n                    tone.pitchCount = 1;\r\n                    tone.chordSize = pitches.length;\r\n                    tone.instrument = instrument;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            this.releaseTone(this.liveInputChannel, toneList.popBack());\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n        const instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n        const pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n        const time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n        if (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n            // Offset channel (first mod channel is 0 index in mod tone array)\r\n            let modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > time) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                const toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n                    this.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n                } else {\r\n                    while (toneList.count() > 0) {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!song.getChannelIsMod(channel)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !song.channels[channel].muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > time) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const toneList: Deque<Tone> = this.activeTones[channel];\r\n            if (note != null) {\r\n                if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                this.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n            } else {\r\n                while (toneList.count() > 0) {\r\n                    // Automatically free or release seamless tones if there's no new note to take over.\r\n                    if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                        this.releaseTone(channel, toneList.popBack());\r\n                    } else {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n        let toneCount: number = 0;\r\n        if (instrument.getChord().arpeggiates) {\r\n            let tone: Tone;\r\n            if (toneList.count() == 0) {\r\n                tone = this.newTone();\r\n                toneList.pushBack(tone);\r\n            } else {\r\n                tone = toneList.get(0);\r\n            }\r\n            toneCount = 1;\r\n\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n                tone.pitches[i] = pitches[i];\r\n            }\r\n            tone.pitchCount = pitches.length;\r\n            tone.chordSize = 1;\r\n            tone.instrument = instrument;\r\n            tone.note = note;\r\n            tone.noteStart = note.start - Math.max(0, this.tyingOver[channel]);\r\n            tone.noteEnd = note.end;\r\n            tone.prevNote = prevNote;\r\n            tone.nextNote = nextNote;\r\n            tone.prevNotePitchIndex = 0;\r\n            tone.nextNotePitchIndex = 0;\r\n        } else {\r\n            const transition: Transition = instrument.getTransition();\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n\r\n                const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n                let prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n                let noteForThisTone: Note = note;\r\n                let nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n                let noteStart: number = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]);\r\n\r\n                if (noteStart > currentPart) {\r\n                    if (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0 ) && prevNoteForThisTone != null) {\r\n                        nextNoteForThisTone = noteForThisTone;\r\n                        noteForThisTone = prevNoteForThisTone;\r\n                        prevNoteForThisTone = null;\r\n                        noteStart = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]) ;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let noteEnd: number = noteForThisTone.end;\r\n                if ((transition.isSeamless || this.tyingOver[channel] >= 0 ) && nextNoteForThisTone != null) {\r\n                    noteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n                }\r\n\r\n\r\n                let tone: Tone;\r\n                if (toneList.count() <= i) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(i);\r\n                }\r\n                toneCount++;\r\n\r\n                tone.pitches[0] = noteForThisTone.pitches[i];\r\n                tone.pitchCount = 1;\r\n                tone.chordSize = noteForThisTone.pitches.length;\r\n                tone.instrument = instrument;\r\n                tone.note = noteForThisTone;\r\n                tone.noteStart = noteStart;\r\n                tone.noteEnd = noteEnd;\r\n                tone.prevNote = prevNoteForThisTone;\r\n                tone.nextNote = nextNoteForThisTone;\r\n                tone.prevNotePitchIndex = i;\r\n                tone.nextNotePitchIndex = i;\r\n\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                this.releaseTone(channel, toneList.popBack());\r\n            } else {\r\n                this.freeTone(toneList.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        Synth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n        let synthBuffer: Float32Array;\r\n        switch (tone.instrument.effects) {\r\n            case 0: synthBuffer = this.samplesForNone!; break;\r\n            case 1: synthBuffer = this.samplesForReverb!; break;\r\n            case 2: synthBuffer = this.samplesForChorus!; break;\r\n            case 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n            default: throw new Error();\r\n        }\r\n        const synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n        synthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n    }\r\n\r\n    private static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.custom: return customVolume;\r\n            case EnvelopeType.steady: return 1.0;\r\n            case EnvelopeType.twang:\r\n                return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell:\r\n                return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo:\r\n                return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2:\r\n                return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch:\r\n                return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare:\r\n                const speed: number = envelope.speed;\r\n                const attack: number = 0.25 / Math.sqrt(speed);\r\n                return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n            case EnvelopeType.decay:\r\n                return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.hard:\r\n                return time < 8 / envelope.speed ? 1.0 : 0.0;\r\n            case EnvelopeType.linear:\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n    }\r\n\r\n    private static computeChordVolume(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const instrument: Instrument = tone.instrument;\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const toneWasActive: boolean = tone.active;\r\n        const tickSampleCountdown: number = synth.tickSampleCountdown;\r\n        const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n        const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n        const ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n        const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n        const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n        const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n        const instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n        const treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n            \r\n        tone.phaseDeltaScale = 0.0;\r\n        tone.filter = 1.0;\r\n        tone.filterScale = 1.0;\r\n        tone.vibratoScale = 0.0;\r\n        tone.intervalMult = 1.0;\r\n        tone.intervalVolumeMult = 1.0;\r\n        tone.active = false;\r\n\r\n        let startPan: number = instrument.pan;\r\n        let endPan: number = instrument.pan;\r\n        if (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n            startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n            endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        let startPanDelay: number = instrument.panDelay;\r\n        let endPanDelay: number = instrument.panDelay;\r\n        if (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n            startPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n            endPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        const useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n        const useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n        // 10 pan delay is the same amount as vanilla beepbox.\r\n        const maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        const maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        tone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n        const delayEnd: number = -useEndPan * maxDelayEnd;\r\n        tone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n        tone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n        tone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n        let resetPhases: boolean = true;\r\n        let partsSinceStart: number = 0.0;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let transitionVolumeStart: number = 1.0;\r\n        let transitionVolumeEnd: number = 1.0;\r\n        let chordVolumeStart: number = chordVolume;\r\n        let chordVolumeEnd: number = chordVolume;\r\n        let customVolumeStart: number = 0.0;\r\n        let customVolumeEnd: number = 0.0;\r\n        let decayTimeStart: number = 0.0;\r\n        let decayTimeEnd: number = 0.0;\r\n\r\n        let volumeReferencePitch: number;\r\n        let basePitch: number;\r\n        let baseVolume: number;\r\n        let pitchDamping: number;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n            } else {\r\n                basePitch = Config.keys[song.key].basePitch;\r\n                baseVolume = 0.3;\r\n            }\r\n            volumeReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseVolume = 0.45;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n            baseVolume = 0.19;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.025;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.04725;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseVolume = 1.0;\r\n            volumeReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.volumeStarts[i] = 0.0;\r\n            tone.volumeDeltas[i] = 0.0;\r\n        }\r\n\r\n        if (released) {\r\n            const ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n            const startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n            const endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n            const toneTransition: Transition = tone.instrument.getTransition();\r\n            resetPhases = false;\r\n            partsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            customVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n            transitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            transitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            decayTimeStart = startTick / Config.ticksPerPart;\r\n            decayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n            if (shouldFadeOutFast) {\r\n                transitionVolumeStart *= 1.0 - startRatio;\r\n                transitionVolumeEnd *= 1.0 - endRatio;\r\n            }\r\n        } else if (tone.note == null) {\r\n            transitionVolumeStart = transitionVolumeEnd = 1;\r\n            customVolumeStart = customVolumeEnd = 1;\r\n            tone.lastInterval = 0;\r\n            tone.lastVolume = 6;\r\n            tone.ticksSinceReleased = 0;\r\n            resetPhases = false;\r\n\r\n            const heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.liveInputSamplesHeld += runLength;\r\n            const heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.noteLengthTicks = heldTicksEnd;\r\n            const heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n            const heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n            partsSinceStart = Math.floor(heldPartsStart);\r\n            decayTimeStart = heldPartsStart;\r\n            decayTimeEnd = heldPartsEnd;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n            const partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n            const noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n            const noteEnd: number = tone.noteEnd;\r\n\r\n            partsSinceStart = time - noteStart;\r\n\r\n            let endPinIndex: number;\r\n            for (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n                if (note.pins[endPinIndex].time + note.start > time) break;\r\n            }\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n            const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n            tone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.noteLengthTicks = noteLengthTicks;\r\n\r\n            const tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n            const tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            let customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n            let customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n            let transitionVolumeTickStart: number = 1.0;\r\n            let transitionVolumeTickEnd: number = 1.0;\r\n            let chordVolumeTickStart: number = chordVolume;\r\n            let chordVolumeTickEnd: number = chordVolume;\r\n            let intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            let intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            let decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n            let decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n            resetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n            // if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n            // if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n            // note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n            const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n            if (treatAsSeamless && !transition.slides && note.start == 0) {\r\n                // Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n                resetPhases = !toneWasActive;\r\n            } else if (treatAsSeamless && prevNote != null) {\r\n                resetPhases = !toneWasActive;\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n                    const intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n                    const volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n                    const decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            }\r\n            if (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n                // Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n            } else if (treatAsSeamless && nextNote != null) {\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n                    const intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n                    const volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n                    const decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            } else if (!(transition.releases && synth.tyingOver[channel] < 0 )) {\r\n                const releaseTicks: number = transition.releaseTicks;\r\n                if (releaseTicks > 0.0) {\r\n                    transitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n                    transitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n                }\r\n            }\r\n\r\n            intervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n            intervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n            if (instrument.type != InstrumentType.mod) {\r\n                customVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n                customVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n            } else {\r\n                customVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n                customVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n                tone.customVolumeStart = customVolumeStart;\r\n                tone.customVolumeEnd = customVolumeEnd;\r\n            }\r\n            transitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n            transitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n            chordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n            chordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n            decayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n            decayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n        }\r\n\r\n        const sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n        tone.active = true;\r\n\r\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n            const lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n            const lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n            let useVibratoStart: number = instrument.vibratoDepth;\r\n            let useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n            if (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n                useVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n                useVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            // Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n            let partsStart: number;\r\n            let partsEnd: number;\r\n            const activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n            if (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n                partsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n                partsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n            }\r\n            else {\r\n                let vibratoDelayStart: number = instrument.vibratoDelay;\r\n                let vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n                if (activeVibratoDelayMods) {\r\n                    vibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n                    vibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n                    // Special case - max vibrato delay means neeeeeever vibrato.\r\n                    if (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayStart = Number.MAX_VALUE;\r\n                    }\r\n                    if (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayEnd = Number.MAX_VALUE;\r\n                    }\r\n                }\r\n\r\n                partsStart = vibratoDelayStart;\r\n                partsEnd = vibratoDelayEnd;\r\n\r\n            }\r\n\r\n            const vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n            const vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n            const vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n            const vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n            intervalStart += vibratoStart;\r\n            intervalEnd += vibratoEnd;\r\n        }\r\n\r\n        if (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n            const attackSeconds: number = transition.attackSeconds;\r\n            if (attackSeconds > 0.0) {\r\n                transitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n                transitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n            }\r\n        }\r\n\r\n        const instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let filterCutModStart: number = instrument.filterCutoff;\r\n        let filterCutModEnd: number = instrument.filterCutoff;\r\n        if (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n            filterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n            filterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n        }\r\n\r\n        let cutoffOctavesModStart: number;\r\n        let cutoffOctavesModEnd: number;\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            cutoffOctavesModStart = 0;\r\n            cutoffOctavesModEnd = 0;\r\n        }\r\n        else {\r\n            cutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n            cutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n        }\r\n\r\n        const filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n        const filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n        const filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n        const filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n        const filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n        const filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n        tone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n        let endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n        tone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n        endFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n        tone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n        let filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n        let filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n        tone.filterResonanceStart = instrument.getFilterResonance();\r\n        tone.filterResonanceDelta = 0.0;\r\n\r\n        let useFilterResonanceStart: number = instrument.filterResonance;\r\n        let useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n        tone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n        if (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n            // This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n            // but the effect and ability to smoothly modulate will be preserved.\r\n            tone.isFirstOrder = false;\r\n\r\n            useFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n            useFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n            // Also set cut in the tone.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n            const filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n            // Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n            tone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n        }\r\n        else {\r\n            // Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n            // No functional difference though.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n        }\r\n\r\n        if (tone.isFirstOrder == false) {\r\n            filterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n            filterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n        }\r\n        if (filterEnvelope.type == EnvelopeType.decay) {\r\n            filterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n        } else if (filterEnvelope.type == EnvelopeType.twang) {\r\n            filterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n        }\r\n\r\n        if (resetPhases) {\r\n            tone.reset();\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.fm) {\r\n            // phase modulation!\r\n\r\n            let sineVolumeBoostStart: number = 1.0;\r\n            let sineVolumeBoostEnd: number = 1.0;\r\n            let totalCarrierVolumeStart: number = 0.0;\r\n            let totalCarrierVolumeEnd: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            if (tone.pitchCount > 1 && !chord.harmonizes) {\r\n                const arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n            for (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n                const pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n                const startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n                tone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n                    amplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n                    amplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                let volumeStart: number = amplitudeMultStart;\r\n                let volumeEnd: number = amplitudeMultEnd;\r\n\r\n                // Check for mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                    const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                    volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                    volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                // Check for SONG mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                    volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                    volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n                }\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n                    const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n                    const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n                    volumeStart *= pitchVolumeStart;\r\n                    volumeEnd *= pitchVolumeEnd;\r\n\r\n                    totalCarrierVolumeStart += amplitudeCurveStart;\r\n                    totalCarrierVolumeEnd += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    volumeStart *= Config.sineWaveLength * 1.5;\r\n                    volumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n                    sineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n                }\r\n                const operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n                volumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                volumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.volumeStarts[i] = volumeStart;\r\n                tone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n            }\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n                useFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n            }\r\n\r\n            const feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n            const feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n            let feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n            const volumeMult: number = baseVolume * instrumentVolumeMult;\r\n            tone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n            const volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n            sineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n            sineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n            tone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n            tone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            // Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n            tone.volumeStart = transitionVolumeStart;\r\n            let volumeEnd: number = transitionVolumeEnd;\r\n\r\n            tone.volumeStart *= customVolumeStart;\r\n            volumeEnd *= customVolumeEnd;\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n        } else {\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            let pitch: number = tone.pitches[0];\r\n\r\n            if (tone.pitchCount > 1) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.harmonizes) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    tone.intervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n            const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n            let settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n            let settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n                settingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n                settingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n                settingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                let pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                if (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n                    pulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n                const pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                const pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n            }\r\n\r\n            tone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n            tone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n            let volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n            if (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n                tone.volumeStart *= customVolumeStart;\r\n                volumeEnd *= customVolumeEnd;\r\n            }\r\n\r\n            // Check for mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                tone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n            // Check for SONG mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                tone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n            }\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n        }\r\n\r\n        tone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / runLength);\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n    private static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n\r\n    private static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        var wave: Float64Array;\r\n        var volumeScale: number;\r\n\r\n        const isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n        if (!isCustomWave) {\r\n            wave = Config.chipWaves[instrument.chipWave].samples;\r\n            volumeScale = 1.0;\r\n        }\r\n        else {\r\n            wave = instrument.customChipWaveIntegral;\r\n            // Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n            volumeScale = 0.1;\r\n        }\r\n\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        //console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume * volumeScale;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        //debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n        //console.log(stereoBufferIndex);\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n\r\n    }\r\n\r\n\r\n    private static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        const wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (sawPhaseA < phaseDelta) {\r\n                var t = sawPhaseA / phaseDelta;\r\n                pulseWave += (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                pulseWave += (t + t + t * t + 1) * 0.5;\r\n            }\r\n            if (sawPhaseB < phaseDelta) {\r\n                var t = sawPhaseB / phaseDelta;\r\n                pulseWave -= (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                pulseWave -= (t + t + t * t + 1) * 0.5;\r\n            }\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\nconst sineWave = beepbox.Config.sawWave;\r\n\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output      = +tone.feedbackOutputs[#];\r\nlet feedbackMult         = +tone.feedbackMult;\r\nconst feedbackDelta        = +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = sineWave[operator#Index];\r\noperator#Output       = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = Math.random() * Config.chipNoiseLength;\r\n        }\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const waveSample: number = wave[phase & 0x7fff];\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            sample = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            sample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.volumeStart.\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n        let setting: ModSetting = instrument.modSettings[mod];\r\n\r\n        synth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n        // Reset arps, but only at the start of the note\r\n        if (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n            synth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n        }\r\n        else if (setting == ModSetting.mstNextBar) {\r\n            synth.wantToSkip = true;\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array): number {\r\n        let phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & 0x7fff;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & 0x7fff;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < 16; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % Config.chipNoiseLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static expressionToVolumeMult(expression: number): number {\r\n        return Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n    }\r\n    public static volumeMultToExpression(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(ModSetting.mstTempo, true)) {\r\n            beatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\t\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 4 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"piano\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note|null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\t\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish( ): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tif (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\treturn Math.floor(guess);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(guess) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tif (topPitch > max) {\r\n\t\t\t\tif (bottomPitch < min) {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn bottomPitch;\r\n\t\t\t\t}\r\n\t\t\t} else if (bottomPitch < min) {\r\n\t\t\t\treturn topPitch;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\treturn guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging ) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Length\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\"}, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"JummBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"JummBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\toption({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"Song Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n\tprivate _openTransitionDropdown: boolean = false;\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\t\t\toperatorNumber,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n\t\t\t);\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n\t\t\tthis._operatorEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\r\n\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n\t\t\t\tgroup = this._transitionDropdownGroup;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"barCount\":\r\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"barCount\":\r\n\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"jummbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}