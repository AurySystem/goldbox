{"version":3,"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/synth.ts","../editor/BarScrollBar.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/Layout.ts","../editor/LayoutPrompt.ts","../editor/LimiterPrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/Selection.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","generateSineWave","sineWaveLength","generateTriWave","asin","generateSquareWave","generateSawWave","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveMask","sineWave","triWave","squareWave","sawWave","operatorWaves","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","waveform","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","A","B","#","♯","b","♭","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","lin","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorWaveform","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","prompt","record","_validate","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","group","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_operatorDropdowns","_operatorWaveformSelects","_operatorDropdownRows","_operatorDropdownGroups","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","_openOperatorDropdowns","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","waveformSelect","dropdown","dropdownRow","DropdownGroup","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","instance","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":";;;;;;;;;;;;;;;;;;;;;YA0JaA,GAiTb,SAASC,EAAWC,GACnB,IAAIC,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCD,GAAOD,EAAKE,GAEb,MAAME,EAAkBH,EAAMD,EAAKG,OAGnC,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,EAAWN,EAAKE,GAAKE,EACrBJ,EAAKE,GAAKG,EAIX,OADAL,EAAKO,KAAK,GACH,IAAIC,aAAaR,GAGzB,SAASS,EAAuBT,GAC/B,IAAIC,EAAc,EACdS,EAAe,EACnB,IAAK,IAAIR,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCD,GAAOD,EAAKE,GACZQ,GAAQC,KAAKC,IAAIZ,EAAKE,IAEvB,MAAME,EAAkBH,EAAMD,EAAKG,OAC7BU,EAAkBH,EAAOV,EAAKG,OAGpC,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,GAAYN,EAAKE,GAAKE,GAAO,EAC7BJ,EAAKE,GAAKG,EAIX,OADAL,EAAKO,KAAK,GACH,IAAIC,aAAaR,YASTc,EAAYC,EAAeC,EAA+C,KAAMC,EAAyC,MACxI,IAAIjB,EAA4BF,EAAOoB,WAAWH,GAAOI,QACzD,GAAY,MAARnB,EAAc,CAIjB,GAHAA,EAAO,IAAIoB,aAAatB,EAAOuB,gBAAkB,GACjDvB,EAAOoB,WAAWH,GAAOI,QAAUnB,EAEtB,GAATe,EAAY,CAEf,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,QAER,GAAa,GAATR,EAEV,IAAK,IAAIb,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IACnDF,EAAKE,GAAqB,EAAhBS,KAAKa,SAAiB,OAE3B,GAAa,GAATT,EAAY,CAEtB,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,QAER,GAAa,GAATR,EAAY,CAEtB,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,IAEdD,EAAaC,QAER,GAAa,GAATR,EAEVU,EAAkBzB,EAAM,GAAI,GAAI,EAAG,EAAG,GACtCyB,EAAkBzB,EAAM,GAAI,GAAI,MAAO,MAAO,GAC9CgB,EAA6BhB,EAAMF,EAAOuB,iBAC1CJ,EAAuBjB,EAAM,EAAMW,KAAKe,KAAK5B,EAAOuB,uBAC9C,GAAa,GAATN,EAGV,IADA,IAAIO,EAAa,EACRpB,EAAI,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,OAER,GAAa,GAATR,EAEVU,EAAkBzB,EAAM,EAAG,GAAI,EAAG,EAAG,GACrCyB,EAAkBzB,EAAM,GAAI,IAAK,GAAI,EAAG,GACxCgB,EAA6BhB,EAAMF,EAAOuB,iBAC1CJ,EAAuBjB,EAAM,EAAMW,KAAKe,KAAK5B,EAAOuB,uBAC9C,GAAa,GAATN,EAGV,IADIO,EAAa,EACRpB,EAAI,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAboB,IAAyC,GAAhBX,KAAKa,SAAgB,GAEnB,IAAhCF,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,OAER,GAAa,GAATR,EAGV,IADIO,EAAa,EACRpB,EAAI,EAAGA,EAAI,MAAOA,IAAK,CAE/B,IAAIqB,EADJvB,EAAKE,IAAmB,EAAboB,GAAkB,EAAM,GAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,MAEF,CAAA,GAAa,GAATR,EAYhB,MAAM,IAAIY,MAAM,4BAA8BZ,GAZlB,CAEnB,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACrDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,IACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,QAEjBD,EAAaC,IAM3BvB,EAAKF,EAAOuB,iBAAmBrB,EAAK,GAGrC,OAAOA,WAGQyB,EAAkBzB,EAAoB4B,EAAmBC,EAAoBC,EAAkBC,EAAmBC,GACjI,MAEMC,EAA4C,EAAzBtB,KAAKuB,IAAI,EAAGN,GAC/BO,EAAoBxB,KAAKyB,IAAItC,EAAOuB,iBAAmB,EAA6B,EAA1BV,KAAKuB,IAAI,EAAGL,IACtEQ,EAA0BvB,EAAY,GAC5C,IAAIwB,EAA4B,EAChC,IAAK,IAAIpC,EAAY+B,EAAU/B,EAAIiC,EAAWjC,IAAK,CAElD,IAAIqC,EAAiBT,GAAYC,EAAYD,IAAanB,KAAK6B,IAAItC,GAAKS,KAAK8B,IAAMb,IAAcC,EAAaD,GAG1Gc,EAAoB/B,KAAKuB,IAAI,GAAIK,EAAS,GAAKzC,EAAO6C,YAAc,GAAKJ,EAE7EG,GAAa/B,KAAKuB,IAAIhC,EAZQ,KAYY8B,GAE1CM,GAAqBI,EAQrBA,GAAaL,EAAUnC,GACvB,MAAM0C,EAAkB,aAAgB1C,EAAIA,EAAIS,KAAKkC,GAAK,EAE1D7C,EAAKE,GAAKS,KAAKmC,IAAIF,GAAWF,EAC9B1C,EAAKF,EAAOuB,gBAAkBnB,GAAKS,KAAKoC,IAAIH,GAAWF,EAGxD,OAAOJ,EAGR,SAASU,IACR,MAAMhD,EAAqB,IAAIQ,aAAaV,EAAOmD,eAAiB,GACpE,IAAK,IAAI/C,EAAY,EAAGA,EAAIJ,EAAOmD,eAAiB,EAAG/C,IACtDF,EAAKE,GAAKS,KAAKoC,IAAI7C,EAAIS,KAAKkC,GAAK,EAAM/C,EAAOmD,gBAE/C,OAAOjD,EAGR,SAASkD,IACL,MAAMlD,EAAqB,IAAIQ,aAAaV,EAAOmD,eAAiB,GACpE,IAAK,IAAI/C,EAAY,EAAGA,EAAIJ,EAAOmD,eAAiB,EAAG/C,IACnDF,EAAKE,GAAKS,KAAKwC,KAAKxC,KAAKoC,IAAI7C,EAAIS,KAAKkC,GAAK,EAAM/C,EAAOmD,kBAAkBtC,KAAKkC,GAAG,GAEtF,OAAO7C,EAGX,SAASoD,IACL,MAAMpD,EAAqB,IAAIQ,aAAaV,EAAOmD,eAAiB,GACpE,IAAK,IAAI/C,EAAY,EAAGA,EAAIJ,EAAOmD,eAAiB,EAAG/C,IACnDF,EAAKE,GAAKS,KAAKoC,IAAI7C,EAAIS,KAAKkC,GAAK,EAAM/C,EAAOmD,gBAC9CjD,EAAKE,GAAKF,EAAKE,GAAG,EAAE,GAAK,EAE7B,OAAOF,EAGX,SAASqD,IACL,MAAMrD,EAAqB,IAAIQ,aAAaV,EAAOmD,eAAiB,GACpE,IAAK,IAAI/C,EAAY,EAAGA,EAAIJ,EAAOmD,eAAiB,EAAG/C,IACnDF,EAAKE,GAAqE,GAA9DA,EAA6B,IAAxBJ,EAAOmD,eAAyBnD,EAAOmD,gBAAwBnD,EAAOmD,eAAkB,EAAI,EAEjH,OAAOjD,WAGKsD,EAAsBC,EAAoBC,EAA4BC,GACrF,IAAIC,EAAyC5D,EAAO6D,iBAAiBJ,EAAa,GAClF,OAAuB,MAAnBG,GACe,GAAdH,GAAwC,GAArBC,IACtBE,EAAkB,CAAC,EAAG,EAAG,EAAG,IAEtBA,EAAgBD,EAAWC,EAAgBvD,SAE3CsD,EAAWF,WAKJK,EAAmCC,GAClD,MAAMC,EAA4B,GAClC,IAAK,IAAI5D,EAAY,EAAGA,EAAI2D,EAAM1D,OAAQD,IAAK,CAC9C,MAAM6D,EAAaF,EAAM3D,GACzB6D,EAAMhD,MAAQb,EACd4D,EAAWC,EAAMC,MAAWD,EAE7B,MAAME,EAAsDJ,EAE5D,OADAI,EAAOH,WAAaA,EACbG,EAviBOnE,EAAAoE,cAAwB,GACxBpE,EAAAqE,QAAkB,GAClBrE,EAAAsE,SAAmB,GACnBtE,EAAAuE,UAAoB,EACpBvE,EAAAwE,WAAqB,IAEZxE,EAAAyE,OAAiCX,EAAU,CAGjE,CAAEI,KAAM,OAAQQ,SAAU,YAAaC,MAA6B,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACvI,CAAET,KAAM,QAASQ,SAAU,SAAUC,MAA+B,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IAC5I,CAAET,KAAM,QAASQ,SAAU,UAAWC,MAA8B,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC3I,CAAET,KAAM,aAAcQ,SAAU,aAAcC,MAAsB,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IAC3I,CAAET,KAAM,SAAUQ,SAAU,SAAUC,MAA8B,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,IAC5I,CAAET,KAAM,SAAUQ,SAAU,SAAUC,MAA8B,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IAC3I,CAAET,KAAM,WAAYQ,SAAU,WAAYC,MAA0B,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC3I,CAAET,KAAM,UAAWQ,SAAU,UAAWC,MAA4B,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,IAC3I,CAAET,KAAM,kBAAmBQ,SAAU,kBAAmBC,MAAY,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,IAC3I,CAAET,KAAM,oBAAqBQ,SAAU,oBAAqBC,MAAQ,EAAC,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC3I,CAAET,KAAM,iBAAkBQ,SAAU,iBAAkBC,MAAc,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IAC5I,CAAET,KAAM,iBAAkBQ,SAAU,iBAAkBC,MAAc,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IAC5I,CAAET,KAAM,gBAAiBQ,SAAU,gBAAiBC,MAAgB,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IAC5I,CAAET,KAAM,QAASQ,SAAU,QAASC,MAAgC,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAM,IAC5I,CAAET,KAAM,UAAWQ,SAAU,UAAWC,MAA4B,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IAC3I,CAAET,KAAM,mBAAoBQ,SAAU,mBAAoBC,MAAU,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC7I,CAAET,KAAM,mBAAoBQ,SAAU,mBAAoBC,MAAU,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,IAC7I,CAAET,KAAM,aAAcQ,SAAU,aAAcC,MAAsB,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IAC5I,CAAET,KAAM,YAAaQ,SAAU,YAAaC,MAAwB,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,IACrI,CAAET,KAAM,YAAaQ,SAAU,YAAaC,MAAwB,EAAC,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,IAC7I,CAAET,KAAM,SAAUQ,SAAU,SAAUC,MAA8B,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,MAE5H3E,EAAA4E,KAA6Bd,EAAU,CAC7D,CAAEI,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,KAAMW,YAAY,EAAOC,UAAW,IAC5C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,KAAMW,YAAY,EAAOC,UAAW,IAC5C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,KAAMW,YAAY,EAAOC,UAAW,IAC5C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,KAAMW,YAAY,EAAOC,UAAW,IAC5C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,IAC1C,CAAEZ,KAAM,KAAMW,YAAY,EAAOC,UAAW,IACtC,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,MAE1B9E,EAAA+E,oBAA6C,EAAE,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACtF/E,EAAAgF,SAAmB,GACnBhF,EAAAiF,SAAmB,IACnBjF,EAAAkF,YAAsB,GACtBlF,EAAAmF,eAAyB,EACzBnF,EAAAoF,eAAyB,GACzBpF,EAAAqF,YAAsB,EACtBrF,EAAAsF,YAAsB,IACtBtF,EAAAuF,yBAAmC,EACnCvF,EAAAwF,yBAAmC,GACnCxF,EAAAyF,aAAuB,GACvBzF,EAAA0F,aAAuB,EACvB1F,EAAA2F,iBAA2B,EAC3B3F,EAAA6D,iBAAyD,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrL7D,EAAA4F,QAAmC9B,EAAU,CACnE,CAAEI,KAAM,gBAAiB2B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,GAAW,KACnL,CAAE5B,KAAM,gBAAiB2B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,EAAU,GAAW,KAC7L,CAAE5B,KAAM,KAAM2B,aAAc,EAAwFC,kBAAmB,MACvI,CAAE5B,KAAM,KAAM2B,aAAc,EAAwFC,kBAAmB,MACvI,CAAE5B,KAAM,WAAY2B,aAAc,GAAyFC,kBAAmB,QAGxH9F,EAAA+F,oBAA6C,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,MAAO,cAAe,OAC/H/F,EAAAgG,iCAA2D,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAO,GAC1GhG,EAAAiG,UAAuCnC,EAAU,CACvE,CAAEI,KAAM,UAAWgC,OAAQ,IAAM7E,QAASpB,EAAW,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,KAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAAO,IAAM,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,MACtZ,CAAEiE,KAAM,WAAYgC,OAAQ,EAAK7E,QAASpB,EAAW,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,MAC5c,CAAEiE,KAAM,SAAUgC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,GAAM,KAC1D,CAAEiE,KAAM,YAAagC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,GAAM,GAAM,GAAM,KACzE,CAAEiE,KAAM,YAAagC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACjG,CAAEiE,KAAM,WAAYgC,OAAQ,IAAM7E,QAASpB,EAAW,CAAC,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAa,GAAe,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,MACvd,CAAEiE,KAAM,aAAcgC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,EAAK,GAAM,IAAM,IAAM,IAAM,GAAK,EAAK,GAAK,GAAK,GAAK,MAC5I,CAAEiE,KAAM,eAAgBgC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,KAC5I,CAAEiE,KAAM,QAASgC,OAAQ,GAAK7E,QAASpB,EAAW,CAAC,GAAM,EAAK,GAAM,EAAK,EAAK,KAC9E,CAAEiE,KAAM,OAAQgC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACvO,CAAEuD,KAAM,QAASgC,OAAQ,GAAK7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,KACnJ,CAAEuD,KAAM,OAAQgC,OAAQ,GAAK7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACnO,CAAEuD,KAAM,iBAAkBgC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACrO,CAAEuD,KAAM,gBAAiBgC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAEuD,KAAM,WAAYgC,OAAQ,GAAK7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACrO,CAAEuD,KAAM,UAAWgC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACpO,CAAEuD,KAAM,UAAWgC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MAChO,CAAEuD,KAAM,kBAAmBgC,OAAQ,GAAK7E,QAASV,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,GAAM,MACjP,CAAEuD,KAAM,QAASgC,OAAQ,GAAK7E,QAASV,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACxO,CAAEuD,KAAM,YAAagC,OAAQ,IAAM7E,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACpO,CAAEuD,KAAM,SAAUgC,OAAQ,GAAK7E,QAASprCD,EAAAoB,WAAyC0C,EAAU,CACzE,CAAEI,KAAM,QAASgC,OAAQ,IAAMpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MAC/F,CAAE6C,KAAM,QAASgC,OAAQ,EAAKpB,UAAW,GAAIqB,gBAAiB,EAAKC,QAAQ,EAAM/E,QAAS,MAE1F,CAAE6C,KAAM,QAASgC,OAAQ,GAAKpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MAC9F,CAAE6C,KAAM,OAAQgC,OAAQ,GAAKpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MAC7F,CAAE6C,KAAM,SAAUgC,OAAQ,IAAKpB,UAAW,GAAIqB,gBAAiB,EAAKC,QAAQ,EAAM/E,QAAS,MAC3F,CAAE6C,KAAM,QAASgC,OAAQ,EAAKpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MAC9F,CAAE6C,KAAM,OAAQgC,OAAQ,IAAKpB,UAAW,IAAKqB,gBAAiB,KAAQC,QAAQ,EAAM/E,QAAS,MAC7F,CAAE6C,KAAM,SAAUgC,OAAQ,KAAOpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MAC3F,CAAE6C,KAAM,WAAYgC,OAAQ,EAAKpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,MACjG,CAAE6C,KAAM,SAAUgC,OAAQ,EAAKpB,UAAW,GAAIqB,gBAAiB,KAAQC,QAAQ,EAAO/E,QAAS,QAE/ErB,EAAAqG,kBAA4B,IAC5BrG,EAAAsG,kBAA4B,EAC5BtG,EAAAuG,UAAoB,IACpBvG,EAAAwG,mBAA6B,IAC7BxG,EAAAyG,kBAA4B,GAC5BzG,EAAA0G,qBAA+B,EAC/B1G,EAAA2G,YAA2C7C,EAAU,CAC3E,CAAEI,KAAM,WAAY0C,YAAY,EAAMC,cAAe,EAAKC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACvH,CAAE/C,KAAM,OAAQ0C,YAAY,EAAOC,cAAe,EAAKC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACpH,CAAE/C,KAAM,OAAQ0C,YAAY,EAAOC,cAAe,KAAOC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACtH,CAAE/C,KAAM,QAAS0C,YAAY,EAAMC,cAAe,KAAOC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAMC,WAAY,GACrH,CAAE/C,KAAM,aAAc0C,YAAY,EAAOC,cAAe,IAAMC,UAAU,EAAMC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GAC1H,CAAE/C,KAAM,YAAa0C,YAAY,EAAOC,cAAe,EAAKC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,GACzH,CAAE/C,KAAM,cAAe0C,YAAY,EAAOC,cAAe,MAAQC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,GACxH,CAAE/C,KAAM,YAAa0C,YAAY,EAAOC,cAAe,IAAMC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,GAC1H,CAAE/C,KAAM,eAAgB0C,YAAY,EAAOC,cAAe,IAAMC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAMC,WAAY,KAE5GjH,EAAAkH,SAAqCpD,EAAU,CACrE,CAAEI,KAAM,OAAQtB,UAAW,EAAKuE,KAAM,EAAGC,WAAY,GACrD,CAAElD,KAAM,QAAStB,UAAW,IAAMuE,KAAM,EAAGC,WAAY,GACvD,CAAElD,KAAM,UAAWtB,UAAW,GAAKuE,KAAM,EAAGC,WAAY,IACxD,CAAElD,KAAM,QAAStB,UAAW,IAAMuE,KAAM,EAAGC,WAAY,GACvD,CAAElD,KAAM,QAAStB,UAAW,GAAKuE,KAAM,EAAGC,WAAY,KAEhCpH,EAAAqH,aAA6CvD,EAAU,CAC7E,CAAEI,KAAM,SAAUoD,eAAgB,CAAC,KAAOC,OAAQ,KAClD,CAAErD,KAAM,QAASoD,eAAgB,CAAC,IAAM,OAAc,KAAWC,OAAQ,UAInDvH,EAAAwH,cAAuC,CAAC,EAAG,MAAQ,KAAO,GAAK,IAAM,EAAI,EAAG,GAAK,GAAK,EAAI,EAAG,IAAM,GAAK,GAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAChSxH,EAAAyH,UAAuC3D,EAAU,CACvE,CAAEI,KAAM,QAASwD,OAAQ,EAAKC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAC9D,CAAE1D,KAAM,UAAWwD,OAAQ,KAAOC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAClE,CAAE1D,KAAM,MAAOwD,OAAQ,KAAOC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,GAC9D,CAAE1D,KAAM,aAAcwD,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,GACpE,CAAE1D,KAAM,YAAawD,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GACnE,CAAE1D,KAAM,QAASwD,OAAQ,IAAKC,OAAQ,IAAKzB,OAAQ,GAAK0B,KAAM,GAC9D,CAAE1D,KAAM,SAAUwD,OAAQ,EAAKC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAC/D,CAAE1D,KAAM,QAASwD,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,MAAO,GAC1D,CAAE1D,KAAM,QAASwD,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,IAC/D,CAAE1D,KAAM,UAAWwD,OAAQ,IAAMC,OAAQ,IAAMzB,OAAQ,GAAK0B,MAAO,MAEnD5H,EAAA6H,aAAsC,CAAC,OAAQ,SAAU,SAAU,mBACnE7H,EAAA8H,YAAsB,GAGtB9H,EAAA+H,eAAyB,MACzB/H,EAAAgI,UAAoB,GACpBhI,EAAAiI,OAAoC,EAAnBjI,EAAOgI,UACxBhI,EAAAkI,WAAqB,GACrBlI,EAAAmI,UAAoB,GACpBnI,EAAAoI,eAAyB,IACzBpI,EAAAqI,cAAwB,IACxBrI,EAAAsI,OAAiCxE,EAAU,CACjE,CAAEI,KAAM,UAAWqE,YAAY,EAAMC,gBAAgB,EAAOC,aAAa,EAAOC,kBAAkB,EAAOC,WAAY,GACrH,CAAEzE,KAAM,QAASqE,YAAY,EAAMC,gBAAgB,EAAOC,aAAa,EAAOC,kBAAkB,EAAOC,WAAY,GAC7G,CAAEzE,KAAM,WAAYqE,YAAY,EAAOC,gBAAgB,EAAOC,aAAa,EAAMC,kBAAkB,EAAOC,WAAY,GACtH,CAAEzE,KAAM,kBAAmBqE,YAAY,EAAMC,gBAAgB,EAAMC,aAAa,EAAMC,kBAAkB,EAAMC,WAAY,KAE1G3I,EAAA4I,aAAuB,EACvB5I,EAAA6I,cAAwB,EACxB7I,EAAA8I,WAAyChF,EAAU,CACzE,CAAEI,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KACxG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,KACtG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACtG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,KACvG,CAAE/E,KAAM,UAAW6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAClG,CAAE/E,KAAM,UAAW6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACjG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACrG,CAAE/E,KAAM,UAAW6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACjG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAE/E,KAAM,cAAe6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,KACrG,CAAE/E,KAAM,UAAW6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,KACtG,CAAE/E,KAAM,YAAa6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC9F,CAAE/E,KAAM,UAAW6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,KAC/F,CAAE/E,KAAM,cAAe6E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,OAExFjJ,EAAAkJ,wBAAiD,CAAC,EAAK,KAAO,KAAO,MACrElJ,EAAAmJ,qBAA+B,GAC/BnJ,EAAAoJ,oBAA0DtF,EAAU,CAC1F,CAAEI,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,MAAOmF,KAAM,EAAKC,SAAU,IAAKC,eAAgB,GACzD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,MAAOmF,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,KAAMmF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAErF,KAAM,MAAOmF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAErF,KAAM,MAAOmF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAErF,KAAM,MAAOmF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACnD,CAAErF,KAAM,MAAOmF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAErF,KAAM,OAAQmF,KAAM,GAAKC,SAAU,EAAKC,cAAe,GACzD,CAAErF,KAAM,QAASmF,KAAM,IAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAErF,KAAM,OAAQmF,KAAM,IAAKC,UAAW,IAAMC,cAAe,KAE3CvJ,EAAAwJ,UAAuC1F,EAAU,CACvE,CAAEI,KAAM,SAAUiD,KAAI,EAAuBsC,MAAO,GACpD,CAAEvF,KAAM,SAAUiD,KAAI,EAAuBsC,MAAO,GACpD,CAAEvF,KAAM,QAASiD,KAAI,EAAsBsC,MAAO,GAClD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,IACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,IACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,IACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,WAAYiD,KAAI,EAAwBsC,MAAO,GACvD,CAAEvF,KAAM,WAAYiD,KAAI,EAAwBsC,MAAO,GACvD,CAAEvF,KAAM,WAAYiD,KAAI,EAAwBsC,MAAO,GACvD,CAAEvF,KAAM,WAAYiD,KAAI,EAAyBsC,MAAO,GACxD,CAAEvF,KAAM,WAAYiD,KAAI,EAAyBsC,MAAO,GACxD,CAAEvF,KAAM,WAAYiD,KAAI,EAAyBsC,MAAO,GACxD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,IACpD,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GAC9C,CAAEvF,KAAM,UAAWiD,KAAI,EAAsBsC,MAAO,GACpD,CAAEvF,KAAM,WAAYiD,KAAI,EAAuBsC,MAAO,IACtD,CAAEvF,KAAM,WAAYiD,KAAI,EAAuBsC,MAAO,IACtD,CAAEvF,KAAM,WAAYiD,KAAI,EAAuBsC,MAAO,GACtD,CAAEvF,KAAM,WAAYiD,KAAI,GAAuBsC,MAAO,IACtD,CAAEvF,KAAM,WAAYiD,KAAI,GAAuBsC,MAAO,GACtD,CAAEvF,KAAM,WAAYiD,KAAI,GAAuBsC,MAAO,GACtD,CAAEvF,KAAM,WAAYiD,KAAI,GAAuBsC,MAAO,OAEtCzJ,EAAA0J,UAAuC5F,EAAU,CACvE,CAAEI,KAAM,KAAMyF,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,KACrC,CAAEzF,KAAM,KAAMyF,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACrC,CAAEzF,KAAM,KAAMyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACrC,CAAEzF,KAAM,KAAMyF,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACrC,CAAEzF,KAAM,QAASyF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACzC,CAAEzF,KAAM,QAASyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACzC,CAAEzF,KAAM,WAAYyF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7C,CAAEzF,KAAM,WAAYyF,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEzF,KAAM,cAAeyF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjD,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACtC,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEzF,KAAM,MAAOyF,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEzF,KAAM,UAAWyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAEzF,KAAM,UAAWyF,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACrC,CAAEzF,KAAM,UAAWyF,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC5C,CAAEzF,KAAM,UAAWyF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEzF,KAAM,UAAWyF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEzF,KAAM,YAAayF,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,OAE/B3J,EAAAuB,gBAA0B,MAC1BvB,EAAA4J,kBAA4B,GAC5B5J,EAAA6J,sBAAgC,GAChC7J,EAAA8J,+BAAyC,EACzC9J,EAAA+J,yBAAmC,EACnC/J,EAAA6C,aAAuB,GAAK7C,EAAO+J,0BAA4B,EAC/D/J,EAAAgK,uBAAiC,GACjChK,EAAAiK,kBAA4B,GAC5BjK,EAAAkK,0BAAoC,EACpClK,EAAAmK,cAAwB,GAAKnK,EAAOkK,2BAA6B,EACjElK,EAAAoK,oBAA8B,KAC9BpK,EAAAqK,gBAA0B,GAC1BrK,EAAAsK,qBAA+B,EAC/BtK,EAAAuK,qBAA+B,GAC/BvK,EAAAwK,qBAA+B,EAC/BxK,EAAAyK,qBAA+B,EAC/BzK,EAAA0K,mBAA6B,EAC7B1K,EAAA2K,mBAA6B,EAC7B3K,EAAA4K,cAAwB,EACxB5K,EAAA6K,iBAA2B,GAC3B7K,EAAA8K,UAAoB,GACpB9K,EAAA+K,SAAmB,EACnB/K,EAAAgL,aAAuB,EACvBhL,EAAAiL,qBAA+B,EAC/BjL,EAAAkL,SAAmBlL,EAAOgL,aAAehL,EAAO6K,iBAChD7K,EAAAmL,uBAAuD,EAAtBnL,EAAO4I,aACxC5I,EAAAmD,eAAyB,IACzBnD,EAAAoL,aAAuBpL,EAAOmD,eAAiB,EAC/CnD,EAAAqL,SAAyBnI,IACtBlD,EAAAsL,QAAwBlI,IACxBpD,EAAAuL,WAA2BjI,IAC3BtD,EAAAwL,QAAwBjI,IACxBvD,EAAAyL,cAA+C3H,EAAU,CAC5E,CAAEI,KAAM,OAAQ7C,QAAS6B,KACzB,CAAEgB,KAAM,WAAY7C,QAAS+B,KAC7B,CAAEc,KAAM,WAAY7C,QAASkC,KAC7B,CAAEW,KAAM,SAAU7C,QAASiC,OAIXtD,EAAA0L,gBAA0B,GCpb3C,MAAMC,EAAoB,4FAA4FC,KAAKC,UAAUC,oBAE5HC,EAAa9H,GAC5B,OAAOA,EAAM+H,QAAQ,GAAGC,QAAQ,SAAU,UAG9BC,EAsQLC,qBAAqBC,GAC3B,MAAMC,EAAwBD,GAAe,EACvCE,EAAoC,GAAdF,EAC5B,OAAOF,EAAaK,iBAAiBF,GAAeG,QAAQF,GAEtDH,gCAAgCM,GACtC,IAAK,IAAIJ,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiBlM,OAAQgM,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcI,EAASF,QAAQnM,OAAQiM,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACxC,GAAIK,EAAOC,aAAeD,EAAOE,aAAeJ,EAAS,OAAQJ,GAAiB,GAAKC,GAGzF,OAAO,KAGDH,yBAAyBW,GAC/B,IAAK,IAAIT,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiBlM,OAAQgM,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcI,EAASF,QAAQnM,OAAQiM,IAAe,CAEvF,GADuBI,EAASF,QAAQF,GAC7BpI,MAAQ4I,EAAY,OAAQT,GAAiB,GAAKC,GAG/D,OAAO,MA7ReJ,EAAAa,QAAkB,MAClBb,EAAAc,mBAA6B,WAAad,EAAaa,QAEvDb,EAAAK,iBAAoDzI,EAAU,CACpF,CACCI,KAAM,qBAAsBsI,QAAkC1I,EAAU,CACvE,CAAEI,KAAM,YAAa+I,WAAU,GAC/B,CAAE/I,KAAM,cAAe+I,WAAU,GACjC,CAAE/I,KAAM,cAAe+I,WAAU,GACjC,CAAE/I,KAAM,WAAY+I,WAAU,GAC9B,CAAE/I,KAAM,UAAW+I,WAAU,GAC7B,CAAE/I,KAAM,YAAa+I,WAAU,GAC/B,CAAE/I,KAAM,cAAe+I,WAAU,GACjC,CAAE/I,KAAM,cAAe+I,WAAU,MAGnC,CACC/I,KAAM,gBAAiBsI,QAAkC1I,EAAU,CAClE,CAAEI,KAAM,cAAe2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,WAAYC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUtN,KAAQ,SAAUuN,SAAY,QAASC,QAAW,SAClQ,CAAExJ,KAAM,gBAAiB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,WAAYC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUtN,KAAQ,WAAYuN,SAAY,QAASC,QAAW,SACtQ,CAAExJ,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUtN,KAAQ,SAAUuN,SAAY,MAAOC,QAAW,SACjR,CAAExJ,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUtN,KAAQ,WAAYuN,SAAY,UAAWC,QAAW,SAC3R,CAAExJ,KAAM,kBAAmB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,OAAQiG,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUtN,KAAQ,WAAYuN,SAAY,MAAOC,QAAW,UAC3Q,CAAExJ,KAAM,aAAc2I,YAAa,IAAKc,SAAS,EAAMT,SAAU,CAAE/F,KAAQ,QAASgG,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUtN,KAAQ,UACpO,CAAEgE,KAAM,WAAY2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,OAAQC,QAAW,OAAQC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACxjB,CAAEhK,KAAM,UAAW2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cAClkB,CAAEhK,KAAM,WAAY2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACzjB,CAAEhK,KAAM,WAAY2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,aACrkB,CAAEhK,KAAM,YAAa2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,cAAegG,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxiB,CAAEjK,KAAM,gBAAiB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,cAAegG,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC/f,CAAEjK,KAAM,gBAAiB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,cAAegG,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/f,CAAEjK,KAAM,eAAgB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,cAAeiG,QAAW,OAAQD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACnjB,CAAEjK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,cAAeiG,QAAW,OAAQD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,SAGljB,CACCjK,KAAM,mBAAoBsI,QAAkC1I,EAAU,CACrE,CAAEI,KAAM,gBAAiB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAChZ,CAAElK,KAAM,eAAgB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAElK,KAAM,iBAAkB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWtN,KAAQ,YAAauN,SAAY,UAAWC,QAAW,SAChS,CAAExJ,KAAM,mBAAoB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,aAAcC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzZ,CAAElK,KAAM,mBAAoB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,KACrY,CAAElK,KAAM,mBAAoB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cAC1lB,CAAEhK,KAAM,cAAe2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACplB,CAAEhK,KAAM,WAAY2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC7kB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,MACpZ,CAAElK,KAAM,gBAAiB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,UAAWC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,SAGjZ,CACClK,KAAM,oBAAqBsI,QAAkC1I,EAAU,CACtE,CAAEI,KAAM,UAAW2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cACtlB,CAAEhK,KAAM,eAAgB2I,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cAC3lB,CAAEhK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KACzX,CAAElK,KAAM,cAAe2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACjX,CAAElK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACxlB,CAAEhK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACjlB,CAAEhK,KAAM,UAAW2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACnlB,CAAEhK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACnlB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACla,CAAElK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACnkB,CAAEhK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,eACxlB,CAAEhK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aAC7lB,CAAEhK,KAAM,cAAe2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aACplB,CAAEhK,KAAM,QAAS2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,MAAOC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,gBAGllB,CACChK,KAAM,iBAAkBsI,QAAkC1I,EAAU,CACnE,CAAEI,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACnlB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACzY,CAAElK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9Y,CAAElK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,iBAGrlB,CACChK,KAAM,sBAAuBsI,QAAkC1I,EAAU,CACxE,CAAEI,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAElK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC/Y,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACrlB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3Y,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Y,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,aAC7kB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,cACtlB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACnlB,CAAEhK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWtN,KAAQ,WAAYuN,SAAY,UAAWC,QAAW,YAG1R,CACCxJ,KAAM,wBAAyBsI,QAAkC1I,EAAU,CAC1E,CAAEI,KAAM,oBAAqB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,aAC1mB,CAAEhK,KAAM,OAAQ2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,YAAaC,QAAW,SAAUC,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC3kB,CAAEhK,KAAM,QAAS2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,YAAaC,QAAW,SAAUC,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACllB,CAAEhK,KAAM,QAAS2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,aACllB,CAAEhK,KAAM,UAAW2I,YAAa,IAAKK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,aAC/jB,CAAEhK,KAAM,WAAY2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACvlB,CAAEhK,KAAM,OAAQ2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,iBAGvlB,CACChK,KAAM,qBAAsBsI,QAAkC1I,EAAU,CACvE,CAAEI,KAAM,mBAAoB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cACtlB,CAAEhK,KAAM,oBAAqB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACxlB,CAAEhK,KAAM,iBAAkB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACvlB,CAAEhK,KAAM,mBAAoB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,SAAW,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,cACrlB,CAAEhK,KAAM,oBAAqB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,MAAOiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,GAAIC,cAAiB,QAASb,QAAW,SACxQ,CAAExJ,KAAM,oBAAqB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,WAAYE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cACtkB,CAAEhK,KAAM,oBAAqB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACvkB,CAAEhK,KAAM,oBAAqB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,MAAOiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,GAAIC,cAAiB,UAAWb,QAAW,eAG5Q,CACCxJ,KAAM,kBAAmBsI,QAAkC1I,EAAU,CACpE,CAAEI,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACjZ,CAAElK,KAAM,kBAAmB2I,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,KACrY,CAAElK,KAAM,mBAAoB2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,QAASE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAClnB,CAAEhK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC1nB,CAAEhK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,aAAcC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACrnB,CAAEhK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzY,CAAElK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWtN,KAAQ,aAAcuN,SAAY,aAAcC,QAAW,SAChS,CAAExJ,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrY,CAAElK,KAAM,UAAW2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,SAG7Y,CACClK,KAAM,iBAAkBsI,QAAkC1I,EAAU,CACnE,CAAEI,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cACvlB,CAAEhK,KAAM,QAAS2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC1lB,CAAEhK,KAAM,QAAS2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACzlB,CAAEhK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cAC5lB,CAAEhK,KAAM,SAAU2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aACrlB,CAAEhK,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACxmB,CAAEhK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cAC5lB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cAClmB,CAAEhK,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,YAAaC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUtN,KAAQ,WAAYuN,SAAY,MAAOC,QAAW,YACrS,CAAExJ,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACzmB,CAAEhK,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,cAC3oB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,QAASE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cACvlB,CAAEhK,KAAM,kBAAmB2I,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,gBAG3nB,CACChK,KAAM,gBAAiBsI,QAAkC1I,EAAU,CAClE,CAAEI,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KACvZ,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAChZ,CAAElK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KACpY,CAAElK,KAAM,eAAgB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAC3X,CAAElK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpX,CAAElK,KAAM,YAAa2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KAC3X,CAAElK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3X,CAAElK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,cAAeC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUtN,KAAQ,UAAWuN,SAAY,QAASC,QAAW,UACpS,CAAExJ,KAAM,iBAAkB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,QAASC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aACxmB,CAAEhK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,QAASC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,SAAW,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC/jB,CAAEhK,KAAM,QAAS2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAClkB,CAAEhK,KAAM,QAAS2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC1jB,CAAEhK,KAAM,UAAW2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,SAAW,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,SAAW,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,SAAW,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,cAC7jB,CAAEhK,KAAM,YAAa2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cAC1lB,CAAEhK,KAAM,aAAc2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,WAAYiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAGvV,CACCtK,KAAM,gBAAiBsI,QAAkC1I,EAAU,CAClE,CAAEI,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC7kB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC7kB,CAAEhK,KAAM,OAAQ2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACzkB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACplB,CAAEhK,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACrlB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,cACvlB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACxlB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMgG,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,cACxlB,CAAEhK,KAAM,cAAe2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,MAAOiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWc,WAAc,GAAIC,cAAiB,UAAWb,QAAW,YAGzQ,CACCxJ,KAAM,eAAgBsI,QAAkC1I,EAAU,CACjE,CAAEI,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,YAC/kB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,QAASC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,aAC7kB,CAAEhK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC5kB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,YAChlB,CAAEhK,KAAM,YAAa2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC9jB,CAAEhK,KAAM,UAAW2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC5kB,CAAEhK,KAAM,OAAQ2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACjlB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,SAAW,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aACtlB,CAAEhK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAKC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC3kB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACtY,CAAElK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,gBAGrlB,CACChK,KAAM,gBAAiBsI,QAAkC1I,EAAU,CAClE,CAAEI,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,YAC7kB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvY,CAAElK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,UAAWU,UAAa,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvX,CAAElK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAClX,CAAElK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,SAAW,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,YAC7kB,CAAEhK,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,SAAW,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,aAC/lB,CAAEhK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,WAAYiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxV,CAAEtK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aACxmB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,WAAYgG,WAAc,aAAcC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC7V,CAAEtK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,WAAYiG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASgB,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpV,CAAEtK,KAAM,eAAgB2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,WAAYiG,QAAW,SAAUD,WAAc,aAAcE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,KAClW,CAAEtK,KAAM,UAAW2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,SAAUD,WAAc,WAAYE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,UAAWU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAG9Y,CACClK,KAAM,cAAesI,QAAkC1I,EAAU,CAChE,CAAEI,KAAM,cAAe2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aACtmB,CAAEhK,KAAM,WAAY2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC5lB,CAAEhK,KAAM,gBAAiB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQgG,WAAc,YAAaC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWtN,KAAQ,WAAYuN,SAAY,MAAOC,QAAW,YACpS,CAAExJ,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,YAC9mB,CAAEhK,KAAM,kBAAmB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cAC5lB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,aAC9lB,CAAEhK,KAAM,YAAa2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,OAAQiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWtN,KAAQ,WAAYuN,SAAY,MAAOC,QAAW,SAChS,CAAExJ,KAAM,aAAc2I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,cAChmB,CAAEhK,KAAM,aAAc2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,YAAaiG,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,SAAUC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3Z,CAAElK,KAAM,UAAW2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,YAAc,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,aAC/lB,CAAEhK,KAAM,SAAU2I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,WAAa,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,eAC1mB,CAAEhK,KAAM,cAAe2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,EAAGsL,SAAY,YAAc,CAAED,UAAa,MAAOrL,UAAa,EAAGsL,SAAY,YACzlB,CAAEhK,KAAM,eAAgB2I,YAAa,GAAIK,SAAU,CAAE/F,KAAQ,KAAMiG,QAAW,SAAUD,WAAc,YAAaE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,KAAMrL,UAAa,GAAIsL,SAAY,UAAY,CAAED,UAAa,MAAOrL,UAAa,GAAIsL,SAAY,gBAGvlB,CACChK,KAAM,eAAgBsI,QAAkC1I,EAAU,CACjE,CAAEI,KAAM,mBAAoB2I,YAAa,IAAKc,SAAS,EAAMT,SAAU,CAAE/F,KAAQ,UAAWiG,QAAW,SAAUqB,MAAS,CAAC,CAAEjB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags:                       [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags:                         [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags:                        [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags:                [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags:                        [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags:                        [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags:                    [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags:                      [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags:      [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags:  [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags:        [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags:        [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags:          [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags:                          [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags:                      [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags:    [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags:    [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags:                [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags:                  [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags:                  [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"Custom\", realName: \"custom\", flags:                        [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin: number = 30;\r\n\tpublic static readonly tempoMax: number = 320;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 2;\r\n\tpublic static readonly beatsPerBarMax: number = 16;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 256;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 10;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n    ]); \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"uhhh??\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n        { name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n        { name: \"sliding fade\", isSeamless: false, attackSeconds: 0.08, releases: true, releaseTicks: 96, slides: true, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n        { name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", spread: 0.25, offset: 0.05, volume: 0.9, sign: -0.8 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n        { name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n        { name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box...\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] }, \r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\r\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 40;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 8;\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n    public static readonly triWave: Float64Array = generateTriWave();\r\n    public static readonly squareWave: Float64Array = generateSquareWave();\r\n    public static readonly sawWave: Float64Array = generateSawWave()\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"sine\", samples: generateSineWave() },\r\n        { name: \"triangle\", samples: generateTriWave() },\r\n        { name: \"sawtooth\", samples: generateSawWave() },\r\n        { name: \"square\", samples: generateSquareWave() },\r\n    ]);\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // New Drum noise? New Drum Noise!\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 8 ^ 2 << 16;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nfunction generateTriWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength))/(Math.PI/2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n        wave[i] = wave[i]>0?1.0:-1.0;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(): Float64Array {\r\n    const wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i - (Config.sineWaveLength * 0.75) + Config.sineWaveLength) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"JummBox \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\" :  `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount = CharCode.a,\r\n    bars = CharCode.b,\r\n    vibrato = CharCode.c,\r\n    transition = CharCode.d,\r\n    loopEnd = CharCode.e,\r\n    filterCutoff = CharCode.f,\r\n    barCount = CharCode.g,\r\n    interval = CharCode.h,\r\n    instrumentCount = CharCode.i,\r\n    patternCount = CharCode.j,\r\n    key = CharCode.k,\r\n    loopStart = CharCode.l,\r\n    reverb = CharCode.m,\r\n    channelCount = CharCode.n,\r\n    channelOctave = CharCode.o,\r\n    patterns = CharCode.p,\r\n    effects = CharCode.q,\r\n    rhythm = CharCode.r,\r\n    scale = CharCode.s,\r\n    tempo = CharCode.t,\r\n    preset = CharCode.u,\r\n    volume = CharCode.v,\r\n    wave = CharCode.w,\r\n\r\n    filterResonance = CharCode.y,\r\n    filterEnvelope = CharCode.z,\r\n    algorithm = CharCode.A,\r\n    feedbackAmplitude = CharCode.B,\r\n    chord = CharCode.C,\r\n    detune = CharCode.D,\r\n    operatorEnvelopes = CharCode.E,\r\n    feedbackType = CharCode.F,\r\n    arpeggioSpeed = CharCode.G,\r\n    harmonics = CharCode.H,\r\n\r\n    squareDuty = CharCode.K,\r\n    panning = CharCode.L,\r\n    customChipWave = CharCode.M,\r\n    songTitle = CharCode.N,\r\n    limiterSettings = CharCode.O,\r\n    operatorAmplitudes = CharCode.P,\r\n    operatorFrequencies = CharCode.Q,\r\n    operatorWaves = CharCode.R,\r\n\r\n    spectrum = CharCode.S,\r\n    startInstrument = CharCode.T,\r\n    channelNames = CharCode.U,\r\n    feedbackEnvelope = CharCode.V,\r\n    pulseWidth = CharCode.W,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    volume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n    return { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n\r\n    public constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestVolume: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestVolume < pin.volume) {\r\n                    loudestVolume = pin.volume;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 6);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n        }\r\n        return newNote;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public instrument: number = 0;\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instrument = 0;\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 0;\r\n    public amplitude: number = 0;\r\n    public envelope: number = 0;\r\n    public waveform: number = 0;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 0;\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.envelope = (index == 0) ? 0 : 1;\r\n        this.waveform = 0;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.envelope = other.envelope;\r\n        this.waveform = other.waveform;\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(lowestOctave: number): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.chipNoiseLength;\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const highestOctave: number = 14;\r\n            const falloffRatio: number = 0.25;\r\n            // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n            const pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n            function controlPointToOctave(point: number): number {\r\n                return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n            }\r\n\r\n            let combinedAmplitude: number = 1;\r\n            for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n                const value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n                const value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n                const octave1: number = controlPointToOctave(i - 1);\r\n                let octave2: number = controlPointToOctave(i);\r\n                if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n                if (value1 == 0 && value2 == 0) continue;\r\n\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n            }\r\n            if (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n            scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n            // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.harmonicsWavelength;\r\n            const retroWave: Float32Array = getDrumWave(0);\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const overallSlope: number = -0.25;\r\n            let combinedControlPointAmplitude: number = 1;\r\n\r\n            for (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n                const harmonicFreq: number = harmonicIndex + 1;\r\n                let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n                if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                    controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n                }\r\n                const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n                let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n                if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                    combinedControlPointAmplitude += amplitude;\r\n                }\r\n                amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n                // Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n                // retro wave (effectively random) to avoid egregiously tall spikes.\r\n                amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n                wave[waveLength - harmonicFreq] = amplitude;\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n\r\n            // Limit the maximum wave amplitude.\r\n            const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < wave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = wave[i] * mult;\r\n                wave[i] = cumulative;\r\n            }\r\n            // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n    public chipNoise: number = 1;\r\n    public filterCutoff: number = 12;\r\n    public filterResonance: number = 0;\r\n    public filterEnvelope: number = 1;\r\n    public transition: number = 1;\r\n    public vibrato: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public interval: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public tieNoteTransition: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public detune: number = 0;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public pulseEnvelope: number = 1;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public feedbackAmplitude: number = 0;\r\n    public feedbackEnvelope: number = 1;\r\n    public LFOtime: number = 0;\r\n    public nextLFOtime: number = 0;\r\n    public arpTime: number = 0;\r\n    public customChipWave: Float64Array = new Float64Array(64);\r\n    public customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modStatuses: ModStatus[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modSettings: ModSetting[] = [];\r\n\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(0);\r\n                this.modStatuses.push(ModStatus.msNone);\r\n                this.modInstruments.push(0);\r\n                this.modSettings.push(ModSetting.mstNone);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.arpeggioSpeed = 12;\r\n        this.detune = 0;\r\n        this.tieNoteTransition = false;\r\n        this.clicklessTransition = false;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = 1;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                this.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.transition = 1;\r\n                this.effects = 0;\r\n                this.chord = 2;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.transition = 1;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.effects = 0;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                this.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modStatuses = [];\r\n                this.modInstruments = [];\r\n                this.modSettings = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(0);\r\n                    this.modStatuses.push(ModStatus.msNone);\r\n                    this.modInstruments.push(0);\r\n                    this.modSettings.push(ModSetting.mstNone);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n            \"panDelay\": this.panDelay,\r\n            \"arpeggioSpeed\": this.arpeggioSpeed,\r\n            \"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n            \"tieNoteTransition\": this.tieNoteTransition,\r\n            \"clicklessTransition\": this.clicklessTransition,\r\n            \"vibrato\": this.vibrato,\r\n            \"vibratoDepth\": this.vibratoDepth,\r\n            \"vibratoDelay\": this.vibratoDelay,\r\n            \"vibratoSpeed\": this.vibratoSpeed,\r\n            \"vibratoType\": this.vibratoType,\r\n            \"detune\": this.detune,\r\n            \"effects\": Config.effectsNames[this.effects],\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n            instrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n            instrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n\r\n            instrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"envelope\": Config.envelopes[operator.envelope].name,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                });\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n            instrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n            instrumentObject[\"operators\"] = operatorArray;\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modStatuses\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n                instrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n        return instrumentObject;\r\n    }\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n        if (type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else {\r\n            this.detune = 0;\r\n        }\r\n\r\n        const oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n        const transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n        this.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n        if (this.transition == -1) this.transition = 1;\r\n\r\n        this.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n        if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n        if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n            this.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n        } else {\r\n            this.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        }\r\n        if (instrumentObject[\"filterResonance\"] != undefined) {\r\n            this.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n        } else {\r\n            this.filterResonance = 0;\r\n        }\r\n        this.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n        if (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n        if (instrumentObject[\"filter\"] != undefined) {\r\n            const legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n            const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n            const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n            const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n            let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n            if (legacyFilter == -1) legacyFilter = 0;\r\n            this.filterCutoff = legacyToCutoff[legacyFilter];\r\n            this.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n            this.filterResonance = 0;\r\n        }\r\n\r\n        const legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            if (instrumentObject[\"spectrum\"] != undefined) {\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        this.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n                        if (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            if (instrumentObject[\"harmonics\"] != undefined) {\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n                this.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n            } else {\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n            }\r\n\r\n            if (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n                this.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n                if (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipWave == -1) this.chipWave = 1;\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 3;\r\n\r\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n            if (this.algorithm == -1) this.algorithm = 0;\r\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n            if (this.feedbackType == -1) this.feedbackType = 0;\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            const legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n            this.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n            if (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n            for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                if (operatorObject[\"waveform\"] != undefined) {\r\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                } else {\r\n                    operator.waveform = 0;\r\n                }\r\n                operator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n                if (operator.envelope == -1) operator.envelope = 0;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    this.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type.\");\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n                this.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n            }\r\n            else {\r\n                this.tieNoteTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number) {\r\n        return 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n    }\r\n\r\n    public warmUp(): void {\r\n        this.LFOtime = 0;\r\n        this.nextLFOtime = 0;\r\n        this.arpTime = 0;\r\n        if (this.type == InstrumentType.noise) {\r\n            getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            this.harmonicsWave.getCustomWave();\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            this.spectrumWave.getCustomWave(8);\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getDrumWave(): Float32Array {\r\n        if (this.type == InstrumentType.noise) {\r\n            return getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            return this.spectrumWave.getCustomWave(8);\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n            this.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n    }\r\n    public getChord(): Chord {\r\n        return this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n    }\r\n    public getFilterCutoffOctaves(): number {\r\n        return this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n    }\r\n    public getFilterIsFirstOrder(): boolean {\r\n        return this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n    }\r\n    public getFilterResonance(): number {\r\n        return this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n    }\r\n    public getFilterEnvelope(): Envelope {\r\n        if (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n        return Config.envelopes[this.filterEnvelope];\r\n    }\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport enum ModStatus {\r\n    msForPitch = 0,\r\n    msForNoise = 1,\r\n    msForSong = 2,\r\n    msNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n    mstNone = 0,\r\n    mstSongVolume = 1,\r\n    mstTempo = 2,\r\n    mstReverb = 3,\r\n    mstNextBar = 4,\r\n    mstInsVolume = 5,\r\n    mstPan = 6,\r\n    mstFilterCut = 7,\r\n    mstFilterPeak = 8,\r\n    mstFMSlider1 = 9,\r\n    mstFMSlider2 = 10,\r\n    mstFMSlider3 = 11,\r\n    mstFMSlider4 = 12,\r\n    mstFMFeedback = 13,\r\n    mstPulseWidth = 14,\r\n    mstDetune = 15,\r\n    mstVibratoDepth = 16,\r\n    mstSongDetune = 17,\r\n    mstVibratoSpeed = 18,\r\n    mstVibratoDelay = 19,\r\n    mstArpeggioSpeed = 20,\r\n    mstPanDelay = 21,\r\n    mstResetArpeggio = 22,\r\n    mstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"BeepBox\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 8;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 4;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n    private static readonly _variant = 0x6A; //\"j\" ~ jummbox\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public key: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public instrumentsPerChannel: number;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    // Maximum value possible for the mod (total number of possible positions)\r\n    public mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n        [ModSetting.mstReverb, Config.reverbRange - 1],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Config.volumeRange],\r\n        [ModSetting.mstPan, Config.panMax],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n        [ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n        [ModSetting.mstVibratoDepth, 50],\r\n        [ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n        [ModSetting.mstVibratoSpeed, 30],\r\n        [ModSetting.mstVibratoDelay, 50],\r\n        [ModSetting.mstArpeggioSpeed, 50],\r\n        [ModSetting.mstPanDelay, 20],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ]\r\n    );\r\n\r\n    // When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n    public mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n        [ModSetting.mstReverb, 0],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n        [ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, 0],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n        [ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n        [ModSetting.mstVibratoDepth, 0],\r\n        [ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n        [ModSetting.mstVibratoSpeed, 0],\r\n        [ModSetting.mstVibratoDelay, 0],\r\n        [ModSetting.mstArpeggioSpeed, 10],\r\n        [ModSetting.mstPanDelay, 10],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ])\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    public modValueToReal(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value += Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value -= Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value += Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value += Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public isSettingForSong(setting: ModSetting): boolean {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstNextBar:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public realToModValue(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value -= Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value += Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value -= Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value -= Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            \r\n            // For tempo, actually use user defined tempo\r\n            if (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n                cap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n            }\r\n            \r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n        if (!isMod)\r\n            return 6;\r\n        else {\r\n            let cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getChannelIsNoise(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.key = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 150;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 1;\r\n        this.instrumentsPerChannel = 1;\r\n\r\n        this.title = \"Unnamed\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                for (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let bar = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n        buffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\r\n        buffer.push(SongTagCode.songTitle);\r\n\r\n        // Length of the song name string\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                buffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n                buffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                    buffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n                    buffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n                    buffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n                    buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.fm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n                    buffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorEnvelopes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.filterEnvelope);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channel].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        let neededInstrumentBits: number = 0;\r\n        while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modStatus: ModStatus = instrument.modStatuses[mod];\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modSettings[mod];\r\n\r\n                        bits.write(2, modStatus);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededInstrumentBits, modInstrument);\r\n                        }\r\n\r\n                        // Mod setting is only used if the status isn't \"none\".\r\n                        if (modStatus != ModStatus.msNone) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n            let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n            const recentShapes: any[] = [];\r\n\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                bits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(3, note.pins[0].volume); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(3, pin.volume); // volume\r\n                            }\r\n                            else {\r\n                                shapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest, then...\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\r\n        const maxApplyArgs: number = 64000;\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists.\r\n            return String.fromCharCode.apply(null, buffer);\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        var variant: string = \"beepbox\";\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            variant = \"jummbox\";\r\n            charIndex++;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n        if (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        this.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n        if (beforeThree && variant == \"beepbox\") {\r\n            // Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) channel.instruments[0].transition = 0;\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let toSetOctaves: number[] = [];\r\n        let command: number;\r\n        let channel: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (variant == \"beepbox\" || beforeTwo) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                }\r\n                else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (variant == \"beepbox\") this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && variant == \"beepbox\") {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (variant == \"beepbox\") {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n                else {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channel].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                if (variant == \"beepbox\" && beforeEight) {\r\n                    this.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    this.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        this.channels[channel].patterns[pattern] = new Pattern();\r\n                    }\r\n                    this.channels[channel].patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                const instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    const isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n                    const isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n                    for (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                        this.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    this.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n                    if (beforeSix && variant == \"beepbox\") {\r\n                        for (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n                if (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n                    if (this.rhythm == 0 || this.rhythm == 2) {\r\n                        useSlowerArpSpeed = true;\r\n                    }\r\n                    // Use faster two note arp on these rhythms\r\n                    if (this.rhythm >= 2) {\r\n                        useFastTwoNoteArp = true;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                    this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                } else {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                        this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            if (channel >= this.pitchChannelCount) {\r\n                                this.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                this.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterCutoff: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const instrument: Instrument = this.channels[channel].instruments[0];\r\n                        const legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    } else if (beforeSix && variant == \"beepbox\") {\r\n                        for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                                const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                if (channel < this.pitchChannelCount) {\r\n                                    instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                    instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                                    instrument.filterResonance = 0;\r\n                                } else {\r\n                                    instrument.filterCutoff = 10;\r\n                                    instrument.filterEnvelope = 1;\r\n                                    instrument.filterResonance = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.filterEnvelope: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.drumset) {\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                } else {\r\n                    instrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                if (variant == \"beepbox\") {\r\n                    // Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n                    // piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.transition: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            this.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                } else if (beforeFour || variant == \"beepbox\") {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 3, 2, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                                ? legacyEnvelopes[effect]\r\n                                : instrument.filterEnvelope;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else {\r\n                    const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = vibrato;\r\n                    // Custom vibrato\r\n                    if (vibrato == Config.vibratos.length) {\r\n                        instrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                        instrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    // Enforce standard vibrato settings\r\n                    else {\r\n                        instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                        instrument.vibratoSpeed = 10; // Normal speed\r\n                        instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n                        instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n            } break;\r\n            case SongTagCode.interval: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                interval = 2;\r\n                                this.channels[channel].instruments[i].chord = 3;\r\n                            }\r\n                            this.channels[channel].instruments[i].interval = interval;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        interval = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.panning: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (variant == \"beepbox\") {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                }\r\n                else {\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n                // Now, pan delay follows on new versions of jummbox.\r\n                if (variant == \"jummbox\" && !beforeThree)\r\n                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    // Limiter isn't used\r\n                    this.compressionRatio = 1.0;\r\n                    this.limitRatio = 1.0;\r\n                    this.limitRise = 4000.0;\r\n                    this.limitDecay = 4.0;\r\n                    this.limitThreshold = 1.0;\r\n                    this.compressionThreshold = 1.0;\r\n                    this.masterGain = 1.0;\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorEnvelopes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channel].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && variant == \"beepbox\") {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channel: number;\r\n                let largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n                let recentPitchBitLength: number = ( largerChords ? 4 : 3 );\r\n                let recentPitchLength: number = ( largerChords ? 16 : 8 );\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channel = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                let neededInstrumentBits: number = 0;\r\n                while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n                while (true) {\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                instrument.modStatuses[mod] = bits.read(2);\r\n\r\n                                // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                                if (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n                                    // Clamp to pitch/noise max\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n                                    }\r\n                                    else {\r\n                                        instrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                    }\r\n\r\n                                    instrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n                                    instrument.modSettings[mod] = bits.read(6);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n                    let note: Note | null = null;\r\n                    let pin: NotePin | null = null;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = this.channels[channel].patterns[i];\r\n                        newPattern.reset();\r\n                        newPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n                        if (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && variant == \"beepbox\")\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                let pinObj: any;\r\n                                let pitch: number;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n                                    shape.pinCount = bits.readPinCount();\r\n\r\n                                    if (variant == \"beepbox\") {\r\n                                        shape.initialVolume = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialVolume = bits.read(3);\r\n                                    } else {\r\n                                        shape.initialVolume = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        pinObj = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && variant == \"beepbox\")\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n\r\n                                        if (variant == \"beepbox\") {\r\n                                            pinObj.volume = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.volume = bits.read(3);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.volume = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                                note = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n                                note.pitches = [];\r\n                                note.pins.length = 1;\r\n                                const pitchBends: number[] = [];\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches.push(pitch);\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n\r\n                                pitchBends.unshift(note.pitches[0]);\r\n\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n                                    pin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n                                    note.pins.push(pin);\r\n                                }\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                                newNotes.push(note);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        break;\r\n                    } else {\r\n                        channel++;\r\n                        if (channel >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n            } break;\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            if (toSetOctaves[channel] != null) {\r\n                this.channels[channel].octave = toSetOctaves[channel];\r\n            }\r\n        }\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                instrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                const noteArray: Object[] = [];\r\n                for (const note of pattern.notes) {\r\n                    let volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n                    const pointArray: Object[] = [];\r\n                    for (const pin of note.pins) {\r\n                        let useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n                        pointArray.push({\r\n                            \"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                            \"pitchBend\": pin.interval,\r\n                            \"volume\": useVol,\r\n                            \"forMod\": isModChannel,\r\n                        });\r\n                    }\r\n\r\n                    noteArray.push({\r\n                        \"pitches\": note.pitches,\r\n                        \"points\": pointArray,\r\n                    });\r\n                }\r\n\r\n                patternArray.push({\r\n                    \"instrument\": pattern.instrument + 1,\r\n                    \"notes\": noteArray,\r\n                });\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n\r\n            channelArray.push({\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"octaveScrollBar\": this.channels[channel].octave,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            });\r\n        }\r\n\r\n        return {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestJummBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            //\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n            \"channels\": channelArray,\r\n        };\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"dbl harmonic :)\",\r\n                \"romani :(\": \"dbl harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                const letter: string = key.charAt(0).toUpperCase();\r\n                const symbol: string = key.charAt(1).toLowerCase();\r\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                let index: number | undefined = letterMap[letter];\r\n                const offset: number | undefined = accidentalMap[symbol];\r\n                if (index != undefined) {\r\n                    if (offset != undefined) index += offset;\r\n                    if (index < 0) index += 12;\r\n                    index = index % 12;\r\n                    this.key = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"]) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        this.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"]) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n                }\r\n\r\n                for (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n                    channel.patterns[i] = new Pattern();\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = 1;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n\r\n                for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                    const instrument: Instrument = channel.instruments[i];\r\n                    instrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = channel.patterns[i];\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n                    if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n                        const maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n                        //let tickClock: number = 0;\r\n                        for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                            if (j >= maxNoteCount) break;\r\n\r\n                            const noteObject = patternObject[\"notes\"][j];\r\n                            if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                                continue;\r\n                            }\r\n\r\n                            const note: Note = new Note(0, 0, 0, 0);\r\n                            note.pitches = [];\r\n                            note.pins = [];\r\n\r\n                            for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                                const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                                if (note.pitches.indexOf(pitch) != -1) continue;\r\n                                note.pitches.push(pitch);\r\n                                if (note.pitches.length >= Config.maxChordSize) break;\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            //let noteClock: number = tickClock;\r\n                            let startInterval: number = 0;\r\n                            for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                                const pointObject: any = noteObject[\"points\"][k];\r\n                                if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                                const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                                const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                                let volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n                                // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                                // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                                let volume: number;\r\n                                if (pointObject[\"volume\"] == undefined) {\r\n                                    volume = volumeCap;\r\n                                } else if (pointObject[\"forMod\"] == undefined) {\r\n                                    volume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n                                else {\r\n                                    volume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n\r\n                                if (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n                                if (note.pins.length == 0) {\r\n                                    //if (time < noteClock) continue;\r\n                                    note.start = time;\r\n                                    startInterval = interval;\r\n                                } else {\r\n                                    //if (time <= noteClock) continue;\r\n                                }\r\n                                //noteClock = time;\r\n\r\n                                note.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n                            }\r\n                            if (note.pins.length < 2) continue;\r\n\r\n                            note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                            const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                            let lowestPitch: number = maxPitch;\r\n                            let highestPitch: number = 0;\r\n                            for (let k: number = 0; k < note.pitches.length; k++) {\r\n                                note.pitches[k] += startInterval;\r\n                                if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                                    note.pitches.splice(k, 1);\r\n                                    k--;\r\n                                }\r\n                                if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                                if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                                if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                                if (k >= 2) {\r\n                                    if (pin.interval == note.pins[k - 1].interval &&\r\n                                        pin.interval == note.pins[k - 2].interval &&\r\n                                        pin.volume == note.pins[k - 1].volume &&\r\n                                        pin.volume == note.pins[k - 2].volume) {\r\n                                        note.pins.splice(k - 1, 1);\r\n                                        k--;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            pattern.notes.push(note);\r\n                            //tickClock = note.end;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n    }\r\n\r\n    public getPattern(channel: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channel].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channel].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getPatternInstrument(channel: number, bar: number): number {\r\n        const pattern: Pattern | null = this.getPattern(channel, bar);\r\n        return pattern == null ? 0 : pattern.instrument;\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n}\r\n\r\nclass Tone {\r\n    public instrument: Instrument;\r\n    public readonly pitches: number[] = [0, 0, 0, 0];\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number = 0;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public active: boolean = false;\r\n    public noteStart: number = 0;\r\n    public noteEnd: number = 0;\r\n    public noteLengthTicks: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public lastVolume: number = 0;\r\n    public stereoVolume1: number = 0.0;\r\n    public stereoVolume2: number = 0.0;\r\n    public stereoOffset: number = 0.0;\r\n    public stereoDelay: number = 0.0;\r\n    public sample: number = 0.0;\r\n    public readonly phases: number[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n    public readonly volumeStarts: number[] = [];\r\n    public readonly volumeDeltas: number[] = [];\r\n    public volumeStart: number = 0.0;\r\n    public volumeDelta: number = 0.0;\r\n    public phaseDeltaScale: number = 0.0;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public filter: number = 0.0;\r\n    public filterScale: number = 0.0;\r\n    public filterSample0: number = 0.0;\r\n    public filterSample1: number = 0.0;\r\n    public vibratoScale: number = 0.0;\r\n    public intervalMult: number = 0.0;\r\n    public intervalVolumeMult: number = 1.0;\r\n    public feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n            this.feedbackOutputs[i] = 0.0;\r\n        }\r\n        this.sample = 0.0;\r\n        this.filterSample0 = 0.0;\r\n        this.filterSample1 = 0.0;\r\n        this.liveInputSamplesHeld = 0.0;\r\n    }\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            for (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n                for (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n                    Synth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n                    song.channels[channel].instruments[instrument].warmUp();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n                for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                if (!(this.song.channels[channel].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channel, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n                            let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                                        if (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                            latestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n                                        this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                        latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n\r\n    public song: Song | null = null;\r\n    public liveInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    private tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[];\r\n    private modInsValues: (number | null)[][][];\r\n    private nextModValues: (number | null)[];\r\n    private nextModInsValues: (number | null)[][][];\r\n    private isPlayingSong: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly activeTones: Array<Deque<Tone>> = [];\r\n    private tyingOver: number[] = [];\r\n    private readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n    //private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n    private readonly releasedTones: Array<Deque<Tone>> = [];\r\n    private readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n    //private highpassInput: number = 0.0;\r\n    //private highpassOutput: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private stereoBufferIndex: number = 0;\r\n    private samplesForNone: Float32Array | null = null;\r\n    private samplesForReverb: Float32Array | null = null;\r\n    private samplesForChorus: Float32Array | null = null;\r\n    private samplesForChorusReverb: Float32Array | null = null;\r\n\r\n    private chorusDelayLine: Float32Array = new Float32Array(2048);\r\n    private chorusDelayPos: number = 0;\r\n    private chorusPhase: number = 0;\r\n\r\n    private reverbDelayLine: Float32Array = new Float32Array(16384);\r\n    private reverbDelayPos: number = 0;\r\n    private reverbFeedback0: number = 0.0;\r\n    private reverbFeedback1: number = 0.0;\r\n    private reverbFeedback2: number = 0.0;\r\n    private reverbFeedback3: number = 0.0;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            remainder = samplesPerTick * (remainder - this.tick);\r\n            this.tickSampleCountdown = samplesPerTick - remainder;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    // Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n                                                            let currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n        let val: number;\r\n        let nextVal: number;\r\n        switch (setting) {\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstSongDetune:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                nextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n                if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                    this.modValues[setting] = val;\r\n                    this.nextModValues[setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstDetune:\r\n                val = this.song!.modValueToReal(volumeStart, setting);\r\n                nextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n                let channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n                if (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n                    || this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n                    || this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n                    this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n                    this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstNextBar:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                break;\r\n            case ModSetting.mstNone:\r\n            default:\r\n                val = -1;\r\n                break;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        if (this.audioCtx == null || this.scriptNode == null) {\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.isPlayingSong = true;\r\n        this.warmUpSynthesizer(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n        }\r\n        this.modValues = [];\r\n        this.modInsValues = [];\r\n        this.nextModValues = [];\r\n        this.nextModInsValues = [];\r\n        this.tyingOver = [];\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.reverbDelayPos = 0;\r\n        this.reverbFeedback0 = 0.0;\r\n        this.reverbFeedback1 = 0.0;\r\n        this.reverbFeedback2 = 0.0;\r\n        this.reverbFeedback3 = 0.0;\r\n        //this.highpassInput = 0.0;\r\n        //this.highpassOutput = 0.0;\r\n        this.freeAllTones();\r\n        for (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n        for (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n        if (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n        if (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n        if (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n        if (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public nextBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    public firstBar(): void {\r\n        if (!this.song) return;\r\n        this.bar = 0;\r\n        this.playheadInternal = 0;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public jumpToEditingBar(bar: number): void {\r\n        if (!this.song) return;\r\n\r\n        this.bar = bar;\r\n\r\n        this.playheadInternal = bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public prevBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        const isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n        if (!isPlayingLiveTones && !this.isPlayingSong) {\r\n            for (let i: number = 0; i < outputBuffer.length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        this.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        const channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n        for (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n            this.activeTones[i] = new Deque<Tone>();\r\n            this.releasedTones[i] = new Deque<Tone>();\r\n        }\r\n        this.activeTones.length = channelCount;\r\n        this.releasedTones.length = channelCount;\r\n        if ( channelCount != this.tyingOver.length ) {\r\n            let idx: number = this.tyingOver.length;\r\n            this.tyingOver.length = channelCount;\r\n            while ( idx < this.tyingOver.length ) {\r\n                this.tyingOver[idx++] = -1;\r\n            }\r\n        }\r\n\r\n        for (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n            this.activeModTones[i] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.activeModTones[i][mod] = new Deque<Tone>();\r\n            }\r\n            this.activeModTones[i].length = Config.modCount;\r\n        }\r\n        this.activeModTones.length = this.song.modChannelCount;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let bufferIndex: number = 0;\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        while (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n        if (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n        if (playSong) {\r\n            if (this.beat >= this.song.beatsPerBar) {\r\n                this.bar++;\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n\r\n                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                    this.bar = this.song.loopStart;\r\n                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                }\r\n            }\r\n            if (this.bar >= this.song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        const stereoBufferLength: number = outputBufferLength * 4;\r\n        if (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n            this.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n            this.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n            this.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n            this.samplesForNone = new Float32Array(stereoBufferLength);\r\n            this.samplesForReverb = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorus = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n            this.stereoBufferIndex = 0;\r\n        }\r\n        let stereoBufferIndex: number = this.stereoBufferIndex;\r\n        const samplesForNone: Float32Array = this.samplesForNone;\r\n        const samplesForReverb: Float32Array = this.samplesForReverb;\r\n        const samplesForChorus: Float32Array = this.samplesForChorus;\r\n        const samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n        const reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n        const chorusDuration: number = 2.0;\r\n        const chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n        const chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n        const chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n        const chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n        const chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n        const chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n        const chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n        const chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n        let chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n        let chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n        let reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n        let reverbFeedback0: number = +this.reverbFeedback0;\r\n        let reverbFeedback1: number = +this.reverbFeedback1;\r\n        let reverbFeedback2: number = +this.reverbFeedback2;\r\n        let reverbFeedback3: number = +this.reverbFeedback3;\r\n        let useReverb: number = this.song.reverb;\r\n        if (this.isModActive(ModSetting.mstReverb, true)) {\r\n            useReverb = this.getModValue(ModSetting.mstReverb, true);\r\n        }\r\n        let reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n        //const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n        const compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n        const limitThreshold: number = this.song.limitThreshold; // Default 1\r\n        const compressionRatio: number = this.song.compressionRatio; // Default 1\r\n        const limitRatio: number = this.song.limitRatio; // Default 1\r\n        const masterGain: number = this.song.masterGain; // Default 1\r\n        //let highpassInput: number = +this.highpassInput;\r\n        //let highpassOutput: number = +this.highpassOutput;\r\n        let limit: number = +this.limit;\r\n\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n            for (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n                // Also determines mod tones.\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    for (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n                        const tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n                        if (this.song.channels[channel].muted == false)\r\n                            this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if ( this.wantToSkip ) {\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n            }\r\n\r\n            if (this.isModActive(ModSetting.mstReverb, true)) {\r\n                reverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n            }\r\n\r\n            // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n            const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrument.LFOtime = instrument.nextLFOtime;\r\n\r\n                    if (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n                        useVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrument.LFOtime = 0;\r\n                        instrument.nextLFOtime = 0;\r\n                    }\r\n                    else {\r\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n                if (channel == this.liveInputChannel) {\r\n                    this.determineLiveInputTones(this.song);\r\n\r\n                    for (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n                        const tone: Tone = this.liveInputTones.get(i);\r\n                        // Hmm. Will allow active input from a muted channel for now.\r\n                        //if (this.song.channels[channel].muted == false)\r\n                        this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n                for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                    const tone: Tone = this.activeTones[channel].get(i);\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                    const tone: Tone = this.releasedTones[channel].get(i);\r\n                    if (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n                        this.freeReleasedTone(channel, i);\r\n                        i--;\r\n                        continue;\r\n                    }\r\n\r\n                    const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            let chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            let chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            let chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            let chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            let chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            let chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            chorusPhase += chorusAngle * runLength;\r\n            const chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            const chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            const chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            const chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            const chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            const chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            const chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n            const chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n            const chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n            const chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n            const chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n            const chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n            const runEnd: number = bufferIndex + runLength;\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                const bufferIndexL: number = stereoBufferIndex;\r\n                const bufferIndexR: number = stereoBufferIndex + 1;\r\n                const sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n                const sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n                const sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n                const sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n                const sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n                const sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n                const sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n                const sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n                stereoBufferIndex += 2;\r\n\r\n                const combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n                const combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n                const chorusTap0Ratio: number = chorusTap0Index % 1;\r\n                const chorusTap1Ratio: number = chorusTap1Index % 1;\r\n                const chorusTap2Ratio: number = chorusTap2Index % 1;\r\n                const chorusTap3Ratio: number = chorusTap3Index % 1;\r\n                const chorusTap4Ratio: number = chorusTap4Index % 1;\r\n                const chorusTap5Ratio: number = chorusTap5Index % 1;\r\n                const chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n                const chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n                const chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n                const chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n                const chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n                const chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n                const chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n                const chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n                const chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n                const chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n                const chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n                const chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n                const chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n                const chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n                const chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n                const chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n                const chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n                const chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n                const chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n                const chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n                chorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n                chorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n                chorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n                chorusTap0Index += chorusTap0Delta;\r\n                chorusTap1Index += chorusTap1Delta;\r\n                chorusTap2Index += chorusTap2Delta;\r\n                chorusTap3Index += chorusTap3Delta;\r\n                chorusTap4Index += chorusTap4Delta;\r\n                chorusTap5Index += chorusTap5Delta;\r\n\r\n                // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n                // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n                // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n                // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n                const reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n                const reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n                const reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n                const reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n                const reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n                const reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n                const reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n                const reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n                const reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n                const reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n                const reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n                reverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n                reverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n                reverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n                reverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n                reverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n                reverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n                reverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n                reverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n                reverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n                // Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n                const sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n                const sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n                /*\r\n                highpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n                highpassInput = sample;\r\n                // use highpassOutput instead of sample below?\r\n                */\r\n\r\n                // A compressor/limiter.\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                        const tone: Tone = this.releasedTones[channel].get(i);\r\n                        tone.ticksSinceReleased++;\r\n\r\n                        const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n                        if (shouldFadeOutFast) {\r\n                            this.freeReleasedTone(channel, i);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update arpeggio time, which is used to calculate arpeggio position\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    var atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n                    // Check if any active tones should be released.\r\n                    for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                        // Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n                        var carryOver = false;\r\n                        var toneCount = this.activeTones[channel].count();\r\n                        var pattern = this.song.getPattern(channel, this.bar);\r\n                        if ( pattern != null && atEnd ) {\r\n                            var instrument = pattern.instrument;\r\n                            if ( this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0 ) {\r\n                                // Verify that all tie conditions are met\r\n                                // 1. Check for a note in this channel at the start of the next bar\r\n                                // 2. Check that the note's volume start matches the current volume\r\n                                // 3. Check that the shape (pitches, chord size) is a match\r\n                                // 4. Check that the instruments are the same\r\n                                var targetBar = this.bar + 1;\r\n                                if ( targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n                                    targetBar = this.song.loopStart;\r\n                                }\r\n                                var nextPattern = this.song.getPattern(channel, targetBar);\r\n                                var currNote = this.activeTones[channel].get(0).note;\r\n                                if ( currNote != null ) {\r\n                                    var pin = 0;\r\n                                    while ( currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length-1 )\r\n                                        pin++;\r\n                                    var currVolume = currNote.pins[pin].volume;\r\n                                    var lastInterval = currNote.pins[pin].interval;\r\n\r\n                                    if ( nextPattern != null && nextPattern.instrument == instrument ) {\r\n                                        for( let i: number = 0; i < nextPattern.notes.length; i++ ) {\r\n                                            if ( nextPattern.notes[i].start == 0\r\n                                                && nextPattern.notes[i].pins[0].volume == currVolume\r\n                                                && nextPattern.notes[i].pitches.length == currNote.pitches.length ) {\r\n                                                \r\n                                                carryOver = true;\r\n                                                for ( let j: number = 0; j < currNote.pitches.length; j++ ) {\r\n                                                    // Allow any pitch order\r\n                                                    if ( nextPattern.notes[i].pitches.findIndex( (p) => p == currNote!.pitches[j] + lastInterval ) == -1 ) {\r\n                                                        carryOver = false;\r\n                                                        j = currNote.pitches.length;\r\n                                                    }\r\n                                                }\r\n                                                i = nextPattern.notes.length;\r\n                                                \r\n                                                if ( carryOver ) {\r\n                                                    // Prior to an actual tie, all releasing for hard transitions also needs to be\r\n                                                    // cancelled. So, this check is ran a few parts before the end of a bar too.\r\n                                                    // In those cases, just set tyingOver to 0 for that duration to cancel release\r\n                                                    // handling, but not affect note start time calculations.\r\n                                                    if ( this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar) ) {\r\n                                                        // Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n                                                        if ( this.tyingOver[channel] < 0 ) {\r\n                                                            this.tyingOver[channel] = 0;\r\n                                                        }\r\n                                                    }\r\n                                                    // Special case: tying over a whole bar, just add the length.\r\n                                                    else if ( currNote.start == 0 && this.tyingOver[channel] >= 0 ) {\r\n                                                        this.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n                                                    }\r\n                                                    else {\r\n                                                        // Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n                                                        this.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                            const tone: Tone = this.activeTones[channel].get(i);\r\n                            const transition: Transition = tone.instrument.getTransition();\r\n                            \r\n                            if (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                // Free tone if the transition allows\r\n                                if (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n                                    if (transition.releases) {\r\n                                        this.releaseTone(channel, tone);\r\n                                    } else {\r\n                                        this.freeTone(tone);\r\n                                    }\r\n                                    this.activeTones[channel].remove(i);\r\n                                    i--;\r\n                                }\r\n\r\n                                // End of note: if not actively trying to carry over, kill note tie\r\n                                if ( !carryOver ) {\r\n                                    this.tyingOver[channel] = -1;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                            for (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n                                const tone: Tone = this.activeModTones[channel][mod].get(i);\r\n                                const transition: Transition = tone.instrument.getTransition();\r\n                                if (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                    this.freeTone(tone);\r\n                                    this.activeModTones[channel][mod].remove(i);\r\n                                    i--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == this.song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n                                this.bar++;\r\n                                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                                    this.bar = this.song.loopStart;\r\n                                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                                }\r\n                                if (this.bar >= this.song.barCount) {\r\n                                    this.bar = 0;\r\n                                    if (this.loopRepeatCount != -1) {\r\n                                        ended = true;\r\n                                        this.resetEffects();\r\n                                        this.pause();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(ModSetting.mstTempo, true)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n                for (let instrument of this.song.channels[channel].instruments) {\r\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                for (let channel: number = 0; channel < channelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n        if (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n        if (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n        if (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n        //if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n        //if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n        if (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n        this.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n        this.chorusPhase = chorusPhase;\r\n        this.chorusDelayPos = chorusDelayPos;\r\n        this.reverbDelayPos = reverbDelayPos;\r\n        this.reverbFeedback0 = reverbFeedback0;\r\n        this.reverbFeedback1 = reverbFeedback1;\r\n        this.reverbFeedback2 = reverbFeedback2;\r\n        this.reverbFeedback3 = reverbFeedback3;\r\n        //this.highpassInput = highpassInput;\r\n        //this.highpassOutput = highpassOutput;\r\n        this.limit = limit;\r\n\r\n        if (playSong) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n        const secondsGenerated = samplesAccumulated / 44100;\r\n        const secondsRequired = samplePerformance / 1000;\r\n        const ratio = secondsRequired / secondsGenerated;\r\n        console.log(ratio);\r\n        samplePerformance = 0;\r\n        samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.reset();\r\n            tone.active = false;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(channel: number, tone: Tone): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.releasedTones[channel].pushFront(tone);\r\n        }\r\n        else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    private freeReleasedTone(channel: number, toneIndex: number): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.freeTone(this.releasedTones[channel].get(toneIndex));\r\n            this.releasedTones[channel].remove(toneIndex);\r\n        } else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n            this.releasedModTones[channel][mod].remove(toneIndex);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        while (this.liveInputTones.count() > 0) {\r\n            this.freeTone(this.liveInputTones.popBack());\r\n        }\r\n        for (let i: number = 0; i < this.activeTones.length; i++) {\r\n            while (this.activeTones[i].count() > 0) {\r\n                this.freeTone(this.activeTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i: number = 0; i < this.releasedTones.length; i++) {\r\n            while (this.releasedTones[i].count() > 0) {\r\n                this.freeTone(this.releasedTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeModTones.length; i++) {\r\n            for (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n                while (this.activeModTones[i][mod].count() > 0) {\r\n                    this.freeTone(this.activeModTones[i][mod].popBack());\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        for (let i = 0; i < this.releasedModTones.length; i++) {\r\n        for (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n        while (this.releasedModTones[i][mod].count() > 0) {\r\n        this.freeTone(this.releasedModTones[i][mod].popBack());\r\n        }\r\n        }\r\n        }\r\n        */\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song): void {\r\n        const toneList: Deque<Tone> = this.liveInputTones;\r\n        const pitches: number[] = this.liveInputPitches;\r\n        let toneCount: number = 0;\r\n        if (this.liveInputDuration > 0) {\r\n            const instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n            if (instrument.getChord().arpeggiates) {\r\n                let tone: Tone;\r\n                if (toneList.count() == 0) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                    this.releaseTone(this.liveInputChannel, toneList.popFront());\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(0);\r\n                }\r\n                toneCount = 1;\r\n\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    tone.pitches[i] = pitches[i];\r\n                }\r\n                tone.pitchCount = pitches.length;\r\n                tone.chordSize = 1;\r\n                tone.instrument = instrument;\r\n                tone.note = tone.prevNote = tone.nextNote = null;\r\n            } else {\r\n                //const transition: Transition = instrument.getTransition();\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= i) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(this.liveInputChannel, toneList.get(i));\r\n                        tone = this.newTone();\r\n                        toneList.set(i, tone);\r\n                    } else {\r\n                        tone = toneList.get(i);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    tone.pitches[0] = pitches[i];\r\n                    tone.pitchCount = 1;\r\n                    tone.chordSize = pitches.length;\r\n                    tone.instrument = instrument;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            this.releaseTone(this.liveInputChannel, toneList.popBack());\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n        const instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n        const pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n        const time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n        if (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n            // Offset channel (first mod channel is 0 index in mod tone array)\r\n            let modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > time) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                const toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n                    this.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n                } else {\r\n                    while (toneList.count() > 0) {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!song.getChannelIsMod(channel)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !song.channels[channel].muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > time) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const toneList: Deque<Tone> = this.activeTones[channel];\r\n            if (note != null) {\r\n                if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                this.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n            } else {\r\n                while (toneList.count() > 0) {\r\n                    // Automatically free or release seamless tones if there's no new note to take over.\r\n                    if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                        this.releaseTone(channel, toneList.popBack());\r\n                    } else {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n        let toneCount: number = 0;\r\n        if (instrument.getChord().arpeggiates) {\r\n            let tone: Tone;\r\n            if (toneList.count() == 0) {\r\n                tone = this.newTone();\r\n                toneList.pushBack(tone);\r\n            } else {\r\n                tone = toneList.get(0);\r\n            }\r\n            toneCount = 1;\r\n\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n                tone.pitches[i] = pitches[i];\r\n            }\r\n            tone.pitchCount = pitches.length;\r\n            tone.chordSize = 1;\r\n            tone.instrument = instrument;\r\n            tone.note = note;\r\n            tone.noteStart = note.start - Math.max(0, this.tyingOver[channel]);\r\n            tone.noteEnd = note.end;\r\n            tone.prevNote = prevNote;\r\n            tone.nextNote = nextNote;\r\n            tone.prevNotePitchIndex = 0;\r\n            tone.nextNotePitchIndex = 0;\r\n        } else {\r\n            const transition: Transition = instrument.getTransition();\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n\r\n                const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n                let prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n                let noteForThisTone: Note = note;\r\n                let nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n                let noteStart: number = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]);\r\n\r\n                if (noteStart > currentPart) {\r\n                    if (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0 ) && prevNoteForThisTone != null) {\r\n                        nextNoteForThisTone = noteForThisTone;\r\n                        noteForThisTone = prevNoteForThisTone;\r\n                        prevNoteForThisTone = null;\r\n                        noteStart = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]) ;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let noteEnd: number = noteForThisTone.end;\r\n                if ((transition.isSeamless || this.tyingOver[channel] >= 0 ) && nextNoteForThisTone != null) {\r\n                    noteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n                }\r\n\r\n\r\n                let tone: Tone;\r\n                if (toneList.count() <= i) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(i);\r\n                }\r\n                toneCount++;\r\n\r\n                tone.pitches[0] = noteForThisTone.pitches[i];\r\n                tone.pitchCount = 1;\r\n                tone.chordSize = noteForThisTone.pitches.length;\r\n                tone.instrument = instrument;\r\n                tone.note = noteForThisTone;\r\n                tone.noteStart = noteStart;\r\n                tone.noteEnd = noteEnd;\r\n                tone.prevNote = prevNoteForThisTone;\r\n                tone.nextNote = nextNoteForThisTone;\r\n                tone.prevNotePitchIndex = i;\r\n                tone.nextNotePitchIndex = i;\r\n\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                this.releaseTone(channel, toneList.popBack());\r\n            } else {\r\n                this.freeTone(toneList.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        Synth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n        let synthBuffer: Float32Array;\r\n        switch (tone.instrument.effects) {\r\n            case 0: synthBuffer = this.samplesForNone!; break;\r\n            case 1: synthBuffer = this.samplesForReverb!; break;\r\n            case 2: synthBuffer = this.samplesForChorus!; break;\r\n            case 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n            default: throw new Error();\r\n        }\r\n        const synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n        synthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n    }\r\n\r\n    private static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.custom: return customVolume;\r\n            case EnvelopeType.steady: return 1.0;\r\n            case EnvelopeType.twang:\r\n                return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell:\r\n                return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo:\r\n                return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2:\r\n                return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch:\r\n                return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare:\r\n                const speed: number = envelope.speed;\r\n                const attack: number = 0.25 / Math.sqrt(speed);\r\n                return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n            case EnvelopeType.decay:\r\n                return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.hard:\r\n                return time < 8 / envelope.speed ? 1.0 : 0.0;\r\n            case EnvelopeType.linear:\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n    }\r\n\r\n    private static computeChordVolume(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const instrument: Instrument = tone.instrument;\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const toneWasActive: boolean = tone.active;\r\n        const tickSampleCountdown: number = synth.tickSampleCountdown;\r\n        const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n        const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n        const ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n        const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n        const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n        const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n        const instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n        const treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n            \r\n        tone.phaseDeltaScale = 0.0;\r\n        tone.filter = 1.0;\r\n        tone.filterScale = 1.0;\r\n        tone.vibratoScale = 0.0;\r\n        tone.intervalMult = 1.0;\r\n        tone.intervalVolumeMult = 1.0;\r\n        tone.active = false;\r\n\r\n        let startPan: number = instrument.pan;\r\n        let endPan: number = instrument.pan;\r\n        if (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n            startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n            endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        let startPanDelay: number = instrument.panDelay;\r\n        let endPanDelay: number = instrument.panDelay;\r\n        if (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n            startPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n            endPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        const useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n        const useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n        // 10 pan delay is the same amount as vanilla beepbox.\r\n        const maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        const maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        tone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n        const delayEnd: number = -useEndPan * maxDelayEnd;\r\n        tone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n        tone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n        tone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n        let resetPhases: boolean = true;\r\n        let partsSinceStart: number = 0.0;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let transitionVolumeStart: number = 1.0;\r\n        let transitionVolumeEnd: number = 1.0;\r\n        let chordVolumeStart: number = chordVolume;\r\n        let chordVolumeEnd: number = chordVolume;\r\n        let customVolumeStart: number = 0.0;\r\n        let customVolumeEnd: number = 0.0;\r\n        let decayTimeStart: number = 0.0;\r\n        let decayTimeEnd: number = 0.0;\r\n\r\n        let volumeReferencePitch: number;\r\n        let basePitch: number;\r\n        let baseVolume: number;\r\n        let pitchDamping: number;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n            } else {\r\n                basePitch = Config.keys[song.key].basePitch;\r\n                baseVolume = 0.3;\r\n            }\r\n            volumeReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseVolume = 0.45;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n            baseVolume = 0.19;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.025;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.04725;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseVolume = 1.0;\r\n            volumeReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.volumeStarts[i] = 0.0;\r\n            tone.volumeDeltas[i] = 0.0;\r\n        }\r\n\r\n        if (released) {\r\n            const ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n            const startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n            const endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n            const toneTransition: Transition = tone.instrument.getTransition();\r\n            resetPhases = false;\r\n            partsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            customVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n            transitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            transitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            decayTimeStart = startTick / Config.ticksPerPart;\r\n            decayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n            if (shouldFadeOutFast) {\r\n                transitionVolumeStart *= 1.0 - startRatio;\r\n                transitionVolumeEnd *= 1.0 - endRatio;\r\n            }\r\n        } else if (tone.note == null) {\r\n            transitionVolumeStart = transitionVolumeEnd = 1;\r\n            customVolumeStart = customVolumeEnd = 1;\r\n            tone.lastInterval = 0;\r\n            tone.lastVolume = 6;\r\n            tone.ticksSinceReleased = 0;\r\n            resetPhases = false;\r\n\r\n            const heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.liveInputSamplesHeld += runLength;\r\n            const heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.noteLengthTicks = heldTicksEnd;\r\n            const heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n            const heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n            partsSinceStart = Math.floor(heldPartsStart);\r\n            decayTimeStart = heldPartsStart;\r\n            decayTimeEnd = heldPartsEnd;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n            const partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n            const noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n            const noteEnd: number = tone.noteEnd;\r\n\r\n            partsSinceStart = time - noteStart;\r\n\r\n            let endPinIndex: number;\r\n            for (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n                if (note.pins[endPinIndex].time + note.start > time) break;\r\n            }\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n            const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n            tone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.noteLengthTicks = noteLengthTicks;\r\n\r\n            const tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n            const tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            let customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n            let customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n            let transitionVolumeTickStart: number = 1.0;\r\n            let transitionVolumeTickEnd: number = 1.0;\r\n            let chordVolumeTickStart: number = chordVolume;\r\n            let chordVolumeTickEnd: number = chordVolume;\r\n            let intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            let intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            let decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n            let decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n            resetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n            // if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n            // if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n            // note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n            const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n            if (treatAsSeamless && !transition.slides && note.start == 0) {\r\n                // Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n                resetPhases = !toneWasActive;\r\n            } else if (treatAsSeamless && prevNote != null) {\r\n                resetPhases = !toneWasActive;\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n                    const intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n                    const volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n                    const decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            }\r\n            if (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n                // Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n            } else if (treatAsSeamless && nextNote != null) {\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n                    const intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n                    const volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n                    const decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            } else if (!(transition.releases && synth.tyingOver[channel] < 0 )) {\r\n                const releaseTicks: number = transition.releaseTicks;\r\n                if (releaseTicks > 0.0) {\r\n                    transitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n                    transitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n                }\r\n            }\r\n\r\n            intervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n            intervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n            if (instrument.type != InstrumentType.mod) {\r\n                customVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n                customVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n            } else {\r\n                customVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n                customVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n                tone.customVolumeStart = customVolumeStart;\r\n                tone.customVolumeEnd = customVolumeEnd;\r\n            }\r\n            transitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n            transitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n            chordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n            chordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n            decayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n            decayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n        }\r\n\r\n        const sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n        tone.active = true;\r\n\r\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n            const lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n            const lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n            let useVibratoStart: number = instrument.vibratoDepth;\r\n            let useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n            if (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n                useVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n                useVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            // Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n            let partsStart: number;\r\n            let partsEnd: number;\r\n            const activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n            if (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n                partsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n                partsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n            }\r\n            else {\r\n                let vibratoDelayStart: number = instrument.vibratoDelay;\r\n                let vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n                if (activeVibratoDelayMods) {\r\n                    vibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n                    vibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n                    // Special case - max vibrato delay means neeeeeever vibrato.\r\n                    if (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayStart = Number.MAX_VALUE;\r\n                    }\r\n                    if (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayEnd = Number.MAX_VALUE;\r\n                    }\r\n                }\r\n\r\n                partsStart = vibratoDelayStart;\r\n                partsEnd = vibratoDelayEnd;\r\n\r\n            }\r\n\r\n            const vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n            const vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n            const vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n            const vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n            intervalStart += vibratoStart;\r\n            intervalEnd += vibratoEnd;\r\n        }\r\n\r\n        if (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n            const attackSeconds: number = transition.attackSeconds;\r\n            if (attackSeconds > 0.0) {\r\n                transitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n                transitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n            }\r\n        }\r\n\r\n        const instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let filterCutModStart: number = instrument.filterCutoff;\r\n        let filterCutModEnd: number = instrument.filterCutoff;\r\n        if (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n            filterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n            filterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n        }\r\n\r\n        let cutoffOctavesModStart: number;\r\n        let cutoffOctavesModEnd: number;\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            cutoffOctavesModStart = 0;\r\n            cutoffOctavesModEnd = 0;\r\n        }\r\n        else {\r\n            cutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n            cutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n        }\r\n\r\n        const filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n        const filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n        const filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n        const filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n        const filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n        const filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n        tone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n        let endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n        tone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n        endFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n        tone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n        let filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n        let filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n        tone.filterResonanceStart = instrument.getFilterResonance();\r\n        tone.filterResonanceDelta = 0.0;\r\n\r\n        let useFilterResonanceStart: number = instrument.filterResonance;\r\n        let useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n        tone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n        if (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n            // This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n            // but the effect and ability to smoothly modulate will be preserved.\r\n            tone.isFirstOrder = false;\r\n\r\n            useFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n            useFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n            // Also set cut in the tone.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n            const filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n            // Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n            tone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n        }\r\n        else {\r\n            // Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n            // No functional difference though.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n        }\r\n\r\n        if (tone.isFirstOrder == false) {\r\n            filterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n            filterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n        }\r\n        if (filterEnvelope.type == EnvelopeType.decay) {\r\n            filterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n        } else if (filterEnvelope.type == EnvelopeType.twang) {\r\n            filterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n        }\r\n\r\n        if (resetPhases) {\r\n            tone.reset();\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.fm) {\r\n            // phase modulation!\r\n\r\n            let sineVolumeBoostStart: number = 1.0;\r\n            let sineVolumeBoostEnd: number = 1.0;\r\n            let totalCarrierVolumeStart: number = 0.0;\r\n            let totalCarrierVolumeEnd: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            if (tone.pitchCount > 1 && !chord.harmonizes) {\r\n                const arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n            for (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n                const pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n                const startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n                tone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n                    amplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n                    amplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                let volumeStart: number = amplitudeMultStart;\r\n                let volumeEnd: number = amplitudeMultEnd;\r\n\r\n                // Check for mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                    const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                    volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                    volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                // Check for SONG mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                    volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                    volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n                }\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n                    const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n                    const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n                    volumeStart *= pitchVolumeStart;\r\n                    volumeEnd *= pitchVolumeEnd;\r\n\r\n                    totalCarrierVolumeStart += amplitudeCurveStart;\r\n                    totalCarrierVolumeEnd += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    volumeStart *= Config.sineWaveLength * 1.5;\r\n                    volumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n                    sineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n                }\r\n                const operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n                volumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                volumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.volumeStarts[i] = volumeStart;\r\n                tone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n            }\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n                useFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n            }\r\n\r\n            const feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n            const feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n            let feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n            const volumeMult: number = baseVolume * instrumentVolumeMult;\r\n            tone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n            const volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n            sineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n            sineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n            tone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n            tone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            // Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n            tone.volumeStart = transitionVolumeStart;\r\n            let volumeEnd: number = transitionVolumeEnd;\r\n\r\n            tone.volumeStart *= customVolumeStart;\r\n            volumeEnd *= customVolumeEnd;\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n        } else {\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            let pitch: number = tone.pitches[0];\r\n\r\n            if (tone.pitchCount > 1) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.harmonizes) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    tone.intervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n            const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n            let settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n            let settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n                settingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n                settingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n                settingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                let pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                if (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n                    pulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n                const pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                const pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n            }\r\n\r\n            tone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n            tone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n            let volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n            if (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n                tone.volumeStart *= customVolumeStart;\r\n                volumeEnd *= customVolumeEnd;\r\n            }\r\n\r\n            // Check for mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                tone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n            // Check for SONG mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                tone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n            }\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n        }\r\n\r\n        tone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / runLength);\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n    private static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n\r\n    private static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        var wave: Float64Array;\r\n        var volumeScale: number;\r\n\r\n        const isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n        if (!isCustomWave) {\r\n            wave = Config.chipWaves[instrument.chipWave].samples;\r\n            volumeScale = 1.0;\r\n        }\r\n        else {\r\n            wave = instrument.customChipWaveIntegral;\r\n            // Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n            volumeScale = 0.1;\r\n        }\r\n\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        //console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume * volumeScale;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        //debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n        //console.log(stereoBufferIndex);\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n\r\n    }\r\n\r\n\r\n    private static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        const wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (sawPhaseA < phaseDelta) {\r\n                var t = sawPhaseA / phaseDelta;\r\n                pulseWave += (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                pulseWave += (t + t + t * t + 1) * 0.5;\r\n            }\r\n            if (sawPhaseB < phaseDelta) {\r\n                var t = sawPhaseB / phaseDelta;\r\n                pulseWave -= (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                pulseWave -= (t + t + t * t + 1) * 0.5;\r\n            }\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output      = +tone.feedbackOutputs[#];\r\nlet feedbackMult         = +tone.feedbackMult;\r\nconst feedbackDelta        = +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\nvar operator#Wave     = beepbox.Config.operatorWaves[instrument.operators[#].waveform].samples;\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = operator#Wave[operator#Index];\r\noperator#Output       = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = Math.random() * Config.chipNoiseLength;\r\n        }\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const waveSample: number = wave[phase & 0x7fff];\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            sample = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            sample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.volumeStart.\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n        let setting: ModSetting = instrument.modSettings[mod];\r\n\r\n        synth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n        // Reset arps, but only at the start of the note\r\n        if (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n            synth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n        }\r\n        else if (setting == ModSetting.mstNextBar) {\r\n            synth.wantToSkip = true;\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array): number {\r\n        let phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & 0x7fff;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & 0x7fff;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < 16; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % Config.chipNoiseLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static expressionToVolumeMult(expression: number): number {\r\n        return Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n    }\r\n    public static volumeMultToExpression(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(ModSetting.mstTempo, true)) {\r\n            beatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\t\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n                { item: \"decay 3\", weight: 4 },\r\n                { item: \"wibble 1\", weight: 2 },\r\n                { item: \"wibble 2\", weight: 2 },\r\n                { item: \"wibble 3\", weight: 2 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 2 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"linear-1\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n                { item: \"soft fade\", weight: 1 },\r\n                { item: \"sliding fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n                { item: \"decay 3\", weight: 2 },\r\n                { item: \"wibble 1\", weight: 4 },\r\n                { item: \"wibble 2\", weight: 4 },\r\n                { item: \"wibble 3\", weight: 4 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 2 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"linear-1\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n                { item: \"soft fade\", weight: 2 },\r\n                { item: \"sliding fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n                    { item: \"piano\", weight: 5 },\r\n                    { item: \"warbled\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 2 },\r\n                        { item: \"wibble 1\", weight: 2 },\r\n                        { item: \"wibble 2\", weight: 2 },\r\n                        { item: \"wibble 3\", weight: 2 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 2 },\r\n                        { item: \"linear 3\", weight: 2 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n                        instrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 4 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 2 },\r\n                            { item: \"square\", weight: 6 },\r\n                        ])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n                            { item: \"decay 3\", weight: 1 },\r\n                            { item: \"wibble 1\", weight: 2 },\r\n                            { item: \"wibble 2\", weight: 2 },\r\n                            { item: \"wibble 3\", weight: 2 },\r\n                            { item: \"linear 1\", weight: 2 },\r\n                            { item: \"linear 2\", weight: 2 },\r\n                            { item: \"linear 3\", weight: 2 },\r\n                            { item: \"linear-1\", weight: 1 },\r\n                        ])].index;\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 4 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 2 },\r\n                            { item: \"square\", weight: 4 },\r\n                        ])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                        { item: \"wibble 1\", weight: 2 },\r\n                        { item: \"wibble 2\", weight: 2 },\r\n                        { item: \"wibble 3\", weight: 2 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 2 },\r\n                        { item: \"linear 3\", weight: 2 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorWaveform extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].waveform = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note|null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\t\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish( ): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tif (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\treturn Math.floor(guess);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(guess) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tif (topPitch > max) {\r\n\t\t\t\tif (bottomPitch < min) {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn bottomPitch;\r\n\t\t\t\t}\r\n\t\t\t} else if (bottomPitch < min) {\r\n\t\t\t\treturn topPitch;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\treturn guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging ) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Length\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\"}, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"JummBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"JummBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n            } break;\r\n            case \"operatorWaveform\": {\r\n                message = div(\r\n                    h2(\"Operator Waveform\"),\r\n                    p('This setting controls the what kind of sound wave an individual FM wave uses.'),\r\n                    p('By defualt the FM synth only uses sinewaves, but you can change that now.'),\r\n                );\r\n            } break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection, ChangeOperatorWaveform } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\toption({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"Song Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n    private readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n    private readonly _operatorDropdowns: HTMLButtonElement[] = []\r\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = []\r\n    private readonly _operatorDropdownRows: HTMLElement[] = []\r\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n    private _openTransitionDropdown: boolean = false;\r\n    private _openOperatorDropdowns: boolean[] = [];\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\r\n            const dropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(4, i) }, \"▼\");//typescript doesn't makes i a reference right?\r\n            const dropdownRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\"), \r\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, waveformSelect));\r\n            const DropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, dropdownRow);\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n                operatorNumber,\r\n                dropdown,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n            );\r\n\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n            this._operatorEnvelopeSelects[i] = envelopeSelect;\r\n            this._operatorFrequencySelects[i] = frequencySelect;\r\n            this._operatorDropdowns[i] = dropdown;\r\n            this._operatorWaveformSelects[i] = waveformSelect;\r\n            this._operatorDropdownRows[i] = dropdownRow;\r\n            this._phaseModGroup.appendChild(DropdownGroup);\r\n            this._operatorDropdownGroups[i] = DropdownGroup;\r\n            this._openOperatorDropdowns[i] = false;\r\n\r\n            waveformSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\r\n            });\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number, instance: number = 0): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n                group = this._transitionDropdownGroup;\r\n                break;\r\n            case 4:\r\n                target = this._operatorDropdowns[instance];\r\n                this._openOperatorDropdowns[instance] = this._openOperatorDropdowns[instance] ? false : true;\r\n                group = this._operatorDropdownGroups[instance];\r\n                break;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"barCount\":\r\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n                        setSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n                        setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\r\n                        this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n                        this._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n                        this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"barCount\":\r\n\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"jummbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}